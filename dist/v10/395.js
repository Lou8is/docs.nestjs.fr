"use strict";(self.webpackChunkdocs_nestjs_com=self.webpackChunkdocs_nestjs_com||[]).push([[395],{395:(w,d,r)=>{r.r(d),r.d(d,{FaqModule:()=>A});var F=r(177),c=r(685),E=r(445),a=r(8050),e=r(4438),u=r(4819),m=r(7077);let v=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-errors"]],features:[e.Vt3],decls:220,vars:2,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/errors.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","erreurs-fr\xe9quentes"],["appAnchor","","id","erreur-cannot-resolve-dependency"],[1,"info"],["href","/devtools/overview#investigating-the-cannot-resolve-dependency-error"],[1,"language-bash"],["href","/fundamentals/custom-providers#principes-de-base-de-lid"],["href","/faq/common-errors#erreur-circular-dependency"],["routerLink","/fundamentals/custom-providers"],["rel","nofollow","target","_blank","href","https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-and-export"],[1,"language-text"],["rel","nofollow","target","_blank","href","https://classic.yarnpkg.com/blog/2018/02/15/nohoist"],["rel","nofollow","target","_blank","href","https://pnpm.io/package_json#dependenciesmetainjected"],["appAnchor","","id","erreur-circular-dependency"],["rel","nofollow","target","_blank","href","https://docs.nestjs.com/fundamentals/circular-dependency"],["appAnchor","","id","d\xe9bugger-les-erreurs-de-d\xe9pendance"],["src","/assets/injector_logs.png"],["appAnchor","","id","le-message-file-change-detected-tourne-en-boucle"],["rel","nofollow","target","_blank","href","https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/#file-watching-now-uses-file-system-events"],["rel","nofollow","target","_blank","href","https://www.typescriptlang.org/tsconfig#watch-watchDirectory"]],template:function(n,o){1&n&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Erreurs fr\xe9quentes"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Au cours de votre d\xe9veloppement avec NestJS, il se peut que vous rencontriez diverses erreurs au fur et \xe0 mesure que vous apprenez \xe0 utiliser le framework."),e.k0s(),e.j41(9,"h4",6)(10,"span"),e.EFF(11,'Erreur "Cannot resolve dependency"'),e.k0s()(),e.j41(12,"blockquote",7)(13,"strong"),e.EFF(14,"Astuce"),e.k0s(),e.EFF(15," Consultez les "),e.j41(16,"a",8),e.EFF(17,"NestJS Devtools"),e.k0s(),e.EFF(18,' qui peuvent vous aider \xe0 r\xe9soudre l\'erreur "Cannot resolve dependency" sans effort.\n'),e.k0s(),e.j41(19,"p"),e.EFF(20,"Le message d'erreur le plus courant concerne probablement l'impossibilit\xe9 pour Nest de r\xe9soudre les d\xe9pendances d'un fournisseur. Le message d'erreur ressemble g\xe9n\xe9ralement \xe0 ceci :"),e.k0s(),e.j41(21,"pre")(22,"code",9),e.EFF(23,"\nNest can't resolve dependencies of the <provider> (?). Please make sure that the argument <unknown_token> at index [<index>] is available in the <module> context.\n\nPotential solutions:\n- Is <module> a valid NestJS module?\n- If <unknown_token> is a provider, is it part of the current <module>?\n- If <unknown_token> is exported from a separate @Module, is that module imported within <module>?\n  @Module({\n    imports: [ /* the Module containing <unknown_token> */ ]\n  })\n"),e.k0s()(),e.j41(24,"p"),e.EFF(25,"La cause la plus fr\xe9quente de cette erreur est l'absence de "),e.j41(26,"code"),e.EFF(27,"<provider>"),e.k0s(),e.EFF(28," dans le tableau "),e.j41(29,"code"),e.EFF(30,"providers"),e.k0s(),e.EFF(31," du module. Veuillez vous assurer que le fournisseur est bien dans le tableau "),e.j41(32,"code"),e.EFF(33,"providers"),e.k0s(),e.EFF(34," et qu'il respecte les "),e.j41(35,"a",10),e.EFF(36,"pratiques standards de NestJS en mati\xe8re de fournisseurs"),e.k0s(),e.EFF(37,"."),e.k0s(),e.j41(38,"p"),e.EFF(39,"Il y a quelques probl\xe8mes, qui sont courants. Un de ces probl\xe8mes est de mettre un fournisseur dans un tableau "),e.j41(40,"code"),e.EFF(41,"imports"),e.k0s(),e.EFF(42,". Si c'est le cas, l'erreur contiendra le nom du fournisseur \xe0 la place de "),e.j41(43,"code"),e.EFF(44,"<module>"),e.k0s(),e.EFF(45,"."),e.k0s(),e.j41(46,"p"),e.EFF(47,"Si vous rencontrez cette erreur lors de votre d\xe9veloppement, jetez un coup d'\u0153il au module mentionn\xe9 dans le message d'erreur et regardez ses "),e.j41(48,"code"),e.EFF(49,"providers"),e.k0s(),e.EFF(50,". Pour chaque fournisseur dans le tableau "),e.j41(51,"code"),e.EFF(52,"providers"),e.k0s(),e.EFF(53,", assurez-vous que le module a acc\xe8s \xe0 toutes les d\xe9pendances. Souvent, les "),e.j41(54,"code"),e.EFF(55,"providers"),e.k0s(),e.EFF(56,' sont dupliqu\xe9s dans un "Feature Module" et un "Root Module", ce qui signifie que Nest essaiera d\'instancier le provider deux fois. Plus que probablement, le module contenant le '),e.j41(57,"code"),e.EFF(58,"<provider>"),e.k0s(),e.EFF(59," dupliqu\xe9 devrait \xeatre ajout\xe9 dans le tableau "),e.j41(60,"code"),e.EFF(61,"imports"),e.k0s(),e.EFF(62,' du "Root Module" \xe0 la place.'),e.k0s(),e.j41(63,"p"),e.EFF(64,"Si le "),e.j41(65,"code"),e.EFF(66,"<unknown_token>"),e.k0s(),e.EFF(67," ci-dessus est "),e.j41(68,"code"),e.EFF(69,"dependency"),e.k0s(),e.EFF(70,", il se peut que vous ayez une importation circulaire de fichiers. Ceci est diff\xe9rent de la "),e.j41(71,"a",11),e.EFF(72,"d\xe9pendance circulaire"),e.k0s(),e.EFF(73," ci-dessous car au lieu d'avoir des fournisseurs qui d\xe9pendent l'un de l'autre dans leurs constructeurs, cela signifie simplement que deux fichiers finissent par s'importer l'un l'autre. Un cas courant serait un fichier de module d\xe9clarant un token et important un fournisseur, et le fournisseur important la constante du token \xe0 partir du fichier de module. Si vous utilisez des \"barrel files\", veillez \xe0 ce que vos importations de \"barrel\" ne finissent pas par cr\xe9er ces importations circulaires."),e.k0s(),e.j41(74,"p"),e.EFF(75,"Si le "),e.j41(76,"code"),e.EFF(77,"<unknown_token>"),e.k0s(),e.EFF(78," ci-dessus est "),e.j41(79,"code"),e.EFF(80,"Object"),e.k0s(),e.EFF(81,", cela signifie que vous injectez en utilisant un type/interface sans un token de fournisseur appropri\xe9. Pour corriger cela, assurez-vous que:"),e.k0s(),e.j41(82,"ol")(83,"li"),e.EFF(84,"Vous importez la r\xe9f\xe9rence de la classe ou utilisez un token personnalis\xe9 avec le d\xe9corateur "),e.j41(85,"code"),e.EFF(86,"@Inject()"),e.k0s(),e.EFF(87,". Lisez la "),e.j41(88,"a",12),e.EFF(89,"page des fournisseurs personnalis\xe9s"),e.k0s(),e.EFF(90,", et"),e.k0s(),e.j41(91,"li"),e.EFF(92,"pour les fournisseurs bas\xe9s sur des classes, vous importez les classes concr\xe8tes au lieu de seulement le type par l'interm\xe9diaire de la syntaxe "),e.j41(93,"a",13)(94,"code"),e.EFF(95,"import type ..."),e.k0s()(),e.EFF(96,"."),e.k0s()(),e.j41(97,"p"),e.EFF(98,"De plus, assurez-vous que vous n'avez pas inject\xe9 le provider sur lui-m\xeame car les auto-injections ne sont pas autoris\xe9es dans NestJS. Dans ce cas, "),e.j41(99,"code"),e.EFF(100,"<unknown_token>"),e.k0s(),e.EFF(101," sera probablement \xe9gal \xe0 "),e.j41(102,"code"),e.EFF(103,"<provider>"),e.k0s(),e.EFF(104,"."),e.k0s(),e.j41(105,"p"),e.nrm(106,"app-banner-devtools"),e.k0s(),e.j41(107,"p"),e.EFF(108,"Si vous \xeates dans une configuration "),e.j41(109,"strong"),e.EFF(110,"monorepo"),e.k0s(),e.EFF(111,", vous pouvez rencontrer la m\xeame erreur que ci-dessus mais pour le fournisseur de base appel\xe9 "),e.j41(112,"code"),e.EFF(113,"ModuleRef"),e.k0s(),e.EFF(114," en tant que "),e.j41(115,"code"),e.EFF(116,"<unknown_token>"),e.k0s(),e.EFF(117," :"),e.k0s(),e.j41(118,"pre")(119,"code",9),e.EFF(120,"\nNest can't resolve dependencies of the <provider> (?).\nPlease make sure that the argument ModuleRef at index [<index>] is available in the <module> context.\n...\n"),e.k0s()(),e.j41(121,"p"),e.EFF(122,"Cela se produit probablement lorsque votre projet charge deux modules Node du paquet "),e.j41(123,"code"),e.EFF(124,"@nestjs/core"),e.k0s(),e.EFF(125,", comme ceci :"),e.k0s(),e.j41(126,"pre")(127,"code",14),e.EFF(128,"\n.\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 apps\n\u2502   \u2514\u2500\u2500 api\n\u2502       \u2514\u2500\u2500 node_modules\n\u2502           \u2514\u2500\u2500 @nestjs/bull\n\u2502               \u2514\u2500\u2500 node_modules\n\u2502                   \u2514\u2500\u2500 @nestjs/core\n\u2514\u2500\u2500 node_modules\n    \u251c\u2500\u2500 (other packages)\n    \u2514\u2500\u2500 @nestjs/core\n"),e.k0s()(),e.j41(129,"p"),e.EFF(130,"Solutions :"),e.k0s(),e.j41(131,"ul")(132,"li"),e.EFF(133,"Pour les espaces de travail "),e.j41(134,"strong"),e.EFF(135,"Yarn"),e.k0s(),e.EFF(136,", utilisez la fonctionnalit\xe9 "),e.j41(137,"a",15),e.EFF(138,"nohoist"),e.k0s(),e.EFF(139," pour emp\xeacher le package "),e.j41(140,"code"),e.EFF(141,"@nestjs/core"),e.k0s(),e.EFF(142," d'\xeatre remont\xe9."),e.k0s(),e.j41(143,"li"),e.EFF(144,"Pour les espaces de travail "),e.j41(145,"strong"),e.EFF(146,"pnpm"),e.k0s(),e.EFF(147,", d\xe9finissez "),e.j41(148,"code"),e.EFF(149,"@nestjs/core"),e.k0s(),e.EFF(150," comme peerDependencies dans votre autre module et "),e.j41(151,"code"),e.EFF(152),e.k0s(),e.EFF(153," dans le package.json de l'application o\xf9 le module est import\xe9. voir : "),e.j41(154,"a",16),e.EFF(155,"dependenciesmetainjected"),e.k0s()()(),e.j41(156,"h4",17)(157,"span"),e.EFF(158,'Erreur "Circular dependency"'),e.k0s()(),e.j41(159,"p"),e.EFF(160,"Il vous sera parfois difficile d'\xe9viter les "),e.j41(161,"a",18),e.EFF(162,"d\xe9pendances circulaires"),e.k0s(),e.EFF(163," dans votre application. Vous devrez prendre des mesures pour aider Nest \xe0 les r\xe9soudre. Les erreurs dues \xe0 des d\xe9pendances circulaires ressemblent \xe0 ceci :"),e.k0s(),e.j41(164,"pre")(165,"code",9),e.EFF(166,'\nNest cannot create the <module> instance.\nThe module at index [<index>] of the <module> "imports" array is undefined.\n\nPotential causes:\n- A circular dependency between modules. Use forwardRef() to avoid it. Read more: https://docs.nestjs.com/fundamentals/circular-dependency\n- The module at index [<index>] is of type "undefined". Check your import statements and the type of the module.\n\nScope [<module_import_chain>]\n# example chain AppModule -> FooModule\n'),e.k0s()(),e.j41(167,"p"),e.EFF(168,"Les d\xe9pendances circulaires peuvent r\xe9sulter du fait que les fournisseurs d\xe9pendent les uns des autres, ou que les fichiers de script d\xe9pendent les uns des autres pour les constantes, comme l'exportation de constantes \xe0 partir d'un fichier de module et leur importation dans un fichier de service. Dans ce dernier cas, il est conseill\xe9 de cr\xe9er un fichier s\xe9par\xe9 pour vos constantes. Dans le premier cas, veuillez suivre le guide sur les d\xe9pendances circulaires et assurez-vous que les modules "),e.j41(169,"strong"),e.EFF(170,"et"),e.k0s(),e.EFF(171," les fournisseurs sont marqu\xe9s avec "),e.j41(172,"code"),e.EFF(173,"forwardRef"),e.k0s(),e.EFF(174,"."),e.k0s(),e.j41(175,"h4",19)(176,"span"),e.EFF(177,"D\xe9bugger les erreurs de d\xe9pendance"),e.k0s()(),e.j41(178,"p"),e.EFF(179,"En plus de v\xe9rifier manuellement que vos d\xe9pendances sont correctes, \xe0 partir de Nest 8.1.0, vous pouvez d\xe9finir la variable d'environnement "),e.j41(180,"code"),e.EFF(181,"NEST_DEBUG"),e.k0s(),e.EFF(182,' \xe0 une cha\xeene qui se r\xe9sout comme \xe9tant "truthy", et obtenir des informations de journalisation suppl\xe9mentaires pendant que Nest r\xe9sout toutes les d\xe9pendances pour l\'application.'),e.k0s(),e.j41(183,"figure"),e.nrm(184,"img",20),e.k0s(),e.j41(185,"p"),e.EFF(186,"Dans l'image ci-dessus, la cha\xeene en jaune est la classe h\xf4te de la d\xe9pendance inject\xe9e, la cha\xeene en bleu est le nom de la d\xe9pendance inject\xe9e, ou son jeton d'injection, et la cha\xeene en violet est le module dans lequel la d\xe9pendance est recherch\xe9e. En utilisant cela, vous pouvez g\xe9n\xe9ralement remonter la r\xe9solution de la d\xe9pendance pour savoir ce qui se passe et pourquoi vous avez des probl\xe8mes d'injection de d\xe9pendance."),e.k0s(),e.j41(187,"h4",21)(188,"span"),e.EFF(189,'Le message "File change detected" tourne en boucle'),e.k0s()(),e.j41(190,"p"),e.EFF(191,"Les utilisateurs de Windows qui utilisent TypeScript version 4.9 et plus peuvent rencontrer ce probl\xe8me.\nCela se produit lorsque vous essayez d'ex\xe9cuter votre application en mode veille, par exemple "),e.j41(192,"code"),e.EFF(193,"npm run start:dev"),e.k0s(),e.EFF(194," et que vous voyez une boucle sans fin de messages de log :"),e.k0s(),e.j41(195,"pre")(196,"code",9),e.EFF(197,"\nXX:XX:XX AM - File change detected. Starting incremental compilation...\nXX:XX:XX AM - Found 0 errors. Watching for file changes.\n"),e.k0s()(),e.j41(198,"p"),e.EFF(199,"Lorsque vous utilisez le CLI NestJS pour d\xe9marrer votre application en mode veille, cela se fait en appelant "),e.j41(200,"code"),e.EFF(201,"tsc --watch"),e.k0s(),e.EFF(202,", et \xe0 partir de la version 4.9 de TypeScript, une "),e.j41(203,"a",22),e.EFF(204,"nouvelle strat\xe9gie"),e.k0s(),e.EFF(205," pour d\xe9tecter les changements de fichiers est utilis\xe9e, ce qui est probablement la cause de ce probl\xe8me.\nAfin de corriger ce probl\xe8me, vous devez ajouter un param\xe8tre \xe0 votre fichier tsconfig.json apr\xe8s l'option "),e.j41(206,"code"),e.EFF(207,'"compilerOptions"'),e.k0s(),e.EFF(208," comme suit :"),e.k0s(),e.j41(209,"pre")(210,"code",9),e.EFF(211,'\n  "watchOptions": {\n    "watchFile": "fixedPollingInterval"\n  }\n'),e.k0s()(),e.j41(212,"p"),e.EFF(213,"Cette option indique \xe0 TypeScript d'utiliser la m\xe9thode de sondage pour v\xe9rifier les changements de fichiers au lieu des \xe9v\xe9nements du syst\xe8me de fichiers (la nouvelle m\xe9thode par d\xe9faut), ce qui peut causer des probl\xe8mes sur certaines machines.\nVous pouvez en savoir plus sur l'option "),e.j41(214,"code"),e.EFF(215,'"watchFile"'),e.k0s(),e.EFF(216," dans la "),e.j41(217,"a",23),e.EFF(218,"documentation TypeScript"),e.k0s(),e.EFF(219,"."),e.k0s()()),2&n&&(e.R7$(152),e.Lme('"dependenciesMeta" : ',"{",' "other-module-name" : ',"{",' "injected" : true }}'))},dependencies:[u.a,m._,c.Wk],encapsulation:2,changeDetection:0})}return s})();var i=r(2469);let k=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-global-prefix"]],features:[e.Vt3],decls:53,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/global-prefix.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","pr\xe9fixe-global"],[1,"language-typescript"],[1,"info"],["rel","nofollow","target","_blank","href","https://github.com/pillarjs/path-to-regexp#parameters"]],template:function(n,o){1&n&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Pr\xe9fixe global"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Pour d\xe9finir un pr\xe9fixe pour "),e.j41(9,"strong"),e.EFF(10,"chaque route"),e.k0s(),e.EFF(11," enregistr\xe9e dans une application HTTP, utilisez la m\xe9thode "),e.j41(12,"code"),e.EFF(13,"setGlobalPrefix()"),e.k0s(),e.EFF(14," de l'instance "),e.j41(15,"code"),e.EFF(16,"INestApplication"),e.k0s(),e.EFF(17,"."),e.k0s(),e.j41(18,"app-copy-button")(19,"pre")(20,"code",6),e.EFF(21,"\nconst app = await NestFactory.create(AppModule);\napp.setGlobalPrefix('v1');\n"),e.k0s()()(),e.j41(22,"p"),e.EFF(23,"Vous pouvez exclure des routes du pr\xe9fixe global en utilisant la construction suivante :"),e.k0s(),e.j41(24,"app-copy-button")(25,"pre")(26,"code",6),e.EFF(27,"\napp.setGlobalPrefix('v1', {\n  exclude: [{ path: 'health', method: RequestMethod.GET }],\n});\n"),e.k0s()()(),e.j41(28,"p"),e.EFF(29,"Vous pouvez \xe9galement sp\xe9cifier la route sous la forme d'une cha\xeene (elle s'appliquera \xe0 toutes les m\xe9thodes de requ\xeate) :"),e.k0s(),e.j41(30,"app-copy-button")(31,"pre")(32,"code",6),e.EFF(33,"\napp.setGlobalPrefix('v1', { exclude: ['cats'] });\n"),e.k0s()()(),e.j41(34,"blockquote",7)(35,"strong"),e.EFF(36,"Astuce"),e.k0s(),e.EFF(37," La propri\xe9t\xe9 "),e.j41(38,"code"),e.EFF(39,"path"),e.k0s(),e.EFF(40," supporte les param\xe8tres joker en utilisant le package "),e.j41(41,"a",8),e.EFF(42,"path-to-regexp"),e.k0s(),e.EFF(43,". Note : ceci n'accepte pas les ast\xe9risques "),e.j41(44,"code"),e.EFF(45,"*"),e.k0s(),e.EFF(46,". A la place, vous devez utiliser des param\xe8tres (par exemple, "),e.j41(47,"code"),e.EFF(48,"(.*)"),e.k0s(),e.EFF(49,", "),e.j41(50,"code"),e.EFF(51,":splat*"),e.k0s(),e.EFF(52,").\n"),e.k0s()())},dependencies:[i.z],encapsulation:2,changeDetection:0})}return s})();var l=r(5119);let f=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-http-adapter"]],features:[e.Vt3],decls:127,vars:4,consts:[["contentReference",""],["appd6ec6fd2a4141bc8c42ded3a22161b15f8c337fe",""],["app38614631183aa8b35e3ccb43c11d9fab6c4cd4a0",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/http-adapter.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","adaptateur-http"],["appAnchor","","id","strat\xe9gie-externe-au-contexte-de-lapplication"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],["appAnchor","","id","en-tant-quinjectable"],[1,"info"],["appAnchor","","id","\xe9v\xe9nement-de-d\xe9but-d\xe9coute"]],template:function(n,o){if(1&n&&(e.j41(0,"div",3,0)(2,"div",4)(3,"a",5),e.nrm(4,"i",6),e.k0s()(),e.j41(5,"h3",7),e.EFF(6,"Adaptateur HTTP"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Il peut arriver que vous souhaitiez acc\xe9der au serveur HTTP sous-jacent, soit dans le contexte de l'application Nest, soit depuis l'ext\xe9rieur."),e.k0s(),e.j41(9,"p"),e.EFF(10,"Chaque instance de serveur/biblioth\xe8que HTTP natif (sp\xe9cifique \xe0 une plate-forme) (par exemple, Express et Fastify) est envelopp\xe9e dans un "),e.j41(11,"strong"),e.EFF(12,"adaptateur"),e.k0s(),e.EFF(13,". L'adaptateur est enregistr\xe9 comme un fournisseur globalement disponible qui peut \xeatre r\xe9cup\xe9r\xe9 dans le contexte de l'application, ainsi qu'inject\xe9 dans d'autres fournisseurs."),e.k0s(),e.j41(14,"h4",8)(15,"span"),e.EFF(16,"Strat\xe9gie externe au contexte de l'application"),e.k0s()(),e.j41(17,"p"),e.EFF(18,"Pour obtenir une r\xe9f\xe9rence au "),e.j41(19,"code"),e.EFF(20,"HttpAdapter"),e.k0s(),e.EFF(21," en dehors du contexte de l'application, appelez la m\xe9thode "),e.j41(22,"code"),e.EFF(23,"getHttpAdapter()"),e.k0s(),e.EFF(24,"."),e.k0s(),e.j41(25,"app-copy-button",9)(26,"span",10),e.nrm(27,"app-tabs",null,1),e.k0s(),e.j41(29,"pre")(30,"code",11),e.EFF(31,"\nconst app = await NestFactory.create(AppModule);\nconst httpAdapter = app.getHttpAdapter();\n"),e.k0s()()(),e.j41(32,"h4",12)(33,"span"),e.EFF(34,"En tant qu'injectable"),e.k0s()(),e.j41(35,"p"),e.EFF(36,"Pour obtenir une r\xe9f\xe9rence au "),e.j41(37,"code"),e.EFF(38,"HttpAdapterHost"),e.k0s(),e.EFF(39," depuis le contexte de l'application, injectez-le en utilisant la m\xeame technique que n'importe quel autre fournisseur existant (par exemple, en utilisant l'injection de constructeur)."),e.k0s(),e.j41(40,"app-copy-button",9)(41,"span",10),e.nrm(42,"app-tabs",null,2),e.k0s(),e.j41(44,"pre")(45,"code",11),e.EFF(46,"\nexport class CatsService {\n  constructor(private adapterHost: HttpAdapterHost) {}\n}\n"),e.k0s()(),e.j41(47,"pre")(48,"code",11),e.EFF(49,"\n@Dependencies(HttpAdapterHost)\nexport class CatsService {\n  constructor(adapterHost) {\n    this.adapterHost = adapterHost;\n  }\n}\n"),e.k0s()()(),e.j41(50,"blockquote",13)(51,"strong"),e.EFF(52,"Astuce"),e.k0s(),e.j41(53,"code"),e.EFF(54,"HttpAdapterHost"),e.k0s(),e.EFF(55," est import\xe9 du paquet "),e.j41(56,"code"),e.EFF(57,"@nestjs/core"),e.k0s(),e.EFF(58,".\n"),e.k0s(),e.j41(59,"p"),e.EFF(60,"Le "),e.j41(61,"code"),e.EFF(62,"HttpAdapterHost"),e.k0s(),e.EFF(63," n'est "),e.j41(64,"strong"),e.EFF(65,"pas"),e.k0s(),e.EFF(66," un v\xe9ritable "),e.j41(67,"code"),e.EFF(68,"HttpAdapter"),e.k0s(),e.EFF(69,". Pour obtenir l'instance r\xe9elle de "),e.j41(70,"code"),e.EFF(71,"HttpAdapter"),e.k0s(),e.EFF(72,", il suffit d'acc\xe9der \xe0 la propri\xe9t\xe9 "),e.j41(73,"code"),e.EFF(74,"httpAdapter"),e.k0s(),e.EFF(75,"."),e.k0s(),e.j41(76,"app-copy-button")(77,"pre")(78,"code",11),e.EFF(79,"\nconst adapterHost = app.get(HttpAdapterHost);\nconst httpAdapter = adapterHost.httpAdapter;\n"),e.k0s()()(),e.j41(80,"p"),e.EFF(81,"Le "),e.j41(82,"code"),e.EFF(83,"httpAdapter"),e.k0s(),e.EFF(84," est l'instance r\xe9elle de l'adaptateur HTTP utilis\xe9 par le framework sous-jacent. C'est une instance de "),e.j41(85,"code"),e.EFF(86,"ExpressAdapter"),e.k0s(),e.EFF(87," ou de "),e.j41(88,"code"),e.EFF(89,"FastifyAdapter"),e.k0s(),e.EFF(90," (les deux classes \xe9tendent "),e.j41(91,"code"),e.EFF(92,"AbstractHttpAdapter"),e.k0s(),e.EFF(93,")."),e.k0s(),e.j41(94,"p"),e.EFF(95,"L'objet adaptateur expose plusieurs m\xe9thodes utiles pour interagir avec le serveur HTTP. Cependant, si vous voulez acc\xe9der directement \xe0 l'instance de la biblioth\xe8que (par exemple, l'instance Express), appelez la m\xe9thode "),e.j41(96,"code"),e.EFF(97,"getInstance()"),e.k0s(),e.EFF(98,"."),e.k0s(),e.j41(99,"app-copy-button")(100,"pre")(101,"code",11),e.EFF(102,"\nconst instance = httpAdapter.getInstance();\n"),e.k0s()()(),e.j41(103,"h4",14)(104,"span"),e.EFF(105,"\xc9v\xe9nement de d\xe9but d'\xe9coute"),e.k0s()(),e.j41(106,"p"),e.EFF(107,"Pour ex\xe9cuter une action lorsque le serveur commence \xe0 \xe9couter les requ\xeates entrantes, vous pouvez vous abonner au flux "),e.j41(108,"code"),e.EFF(109,"listen$"),e.k0s(),e.EFF(110,", comme illustr\xe9 ci-dessous :"),e.k0s(),e.j41(111,"app-copy-button")(112,"pre")(113,"code",11),e.EFF(114,"\nthis.httpAdapterHost.listen$.subscribe(() =>\n  console.log('HTTP server is listening'),\n);\n"),e.k0s()()(),e.j41(115,"p"),e.EFF(116,"De plus, le "),e.j41(117,"code"),e.EFF(118,"HttpAdapterHost"),e.k0s(),e.EFF(119," fournit une propri\xe9t\xe9 bool\xe9enne "),e.j41(120,"code"),e.EFF(121,"listening"),e.k0s(),e.EFF(122," qui indique si le serveur est actuellement actif et \xe0 l'\xe9coute :"),e.k0s(),e.j41(123,"app-copy-button")(124,"pre")(125,"code",11),e.EFF(126,"\nif (this.httpAdapterHost.listening) {\n  console.log('HTTP server is listening');\n}\n"),e.k0s()()()()),2&n){const p=e.sdS(43);e.R7$(44),e.AVh("hide",p.isJsActive),e.R7$(3),e.AVh("hide",!p.isJsActive)}},dependencies:[l.O,u.a,i.z],encapsulation:2,changeDetection:0})}return s})(),j=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-hybrid-application"]],features:[e.Vt3],decls:95,vars:4,consts:[["contentReference",""],["app72fb0b3e2d192482508958bddef43770523cad10",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/hybrid-application.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","application-hybride"],[1,"language-typescript"],[1,"info"],[1,"with-heading"],[1,"filename"],["appAnchor","","id","partager-la-configuration"]],template:function(n,o){if(1&n&&(e.j41(0,"div",2,0)(2,"div",3)(3,"a",4),e.nrm(4,"i",5),e.k0s()(),e.j41(5,"h3",6),e.EFF(6,"Application hybride"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Une application hybride est une application qui \xe9coute les requ\xeates provenant de deux ou plusieurs sources diff\xe9rentes. Cela peut combiner un serveur HTTP avec un microservice listener ou m\xeame simplement plusieurs microservices listeners diff\xe9rents. La m\xe9thode par d\xe9faut "),e.j41(9,"code"),e.EFF(10,"createMicroservice"),e.k0s(),e.EFF(11," ne permet pas de cr\xe9er plusieurs serveurs, donc dans ce cas, chaque microservice doit \xeatre cr\xe9\xe9 et d\xe9marr\xe9 manuellement. Pour ce faire, l'instance "),e.j41(12,"code"),e.EFF(13,"INestApplication"),e.k0s(),e.EFF(14," peut \xeatre connect\xe9e avec les instances "),e.j41(15,"code"),e.EFF(16,"INestMicroservice"),e.k0s(),e.EFF(17," \xe0 travers la m\xe9thode "),e.j41(18,"code"),e.EFF(19,"connectMicroservice()"),e.k0s(),e.EFF(20,"."),e.k0s(),e.j41(21,"app-copy-button")(22,"pre")(23,"code",7),e.EFF(24,"\nconst app = await NestFactory.create(AppModule);\nconst microservice = app.connectMicroservice<MicroserviceOptions>({\n  transport: Transport.TCP,\n});\n\nawait app.startAllMicroservices();\nawait app.listen(3001);\n"),e.k0s()()(),e.j41(25,"blockquote",8)(26,"strong"),e.EFF(27,"Astuce"),e.k0s(),e.EFF(28," la m\xe9thode "),e.j41(29,"code"),e.EFF(30,"app.listen(port)"),e.k0s(),e.EFF(31," d\xe9marre un serveur HTTP \xe0 l'adresse sp\xe9cifi\xe9e. Si votre application ne g\xe8re pas de requ\xeates HTTP, vous devriez utiliser la m\xe9thode "),e.j41(32,"code"),e.EFF(33,"app.init()"),e.k0s(),e.EFF(34," \xe0 la place.\n"),e.k0s(),e.j41(35,"p"),e.EFF(36,"Pour connecter plusieurs instances de microservices, il faut appeler "),e.j41(37,"code"),e.EFF(38,"connectMicroservice()"),e.k0s(),e.EFF(39," pour chaque microservice :"),e.k0s(),e.j41(40,"app-copy-button")(41,"pre")(42,"code",7),e.EFF(43,"\nconst app = await NestFactory.create(AppModule);\n// microservice #1\nconst microserviceTcp = app.connectMicroservice<MicroserviceOptions>({\n  transport: Transport.TCP,\n  options: {\n    port: 3001,\n  },\n});\n// microservice #2\nconst microserviceRedis = app.connectMicroservice<MicroserviceOptions>({\n  transport: Transport.REDIS,\n  options: {\n    host: 'localhost',\n    port: 6379,\n  },\n});\n\nawait app.startAllMicroservices();\nawait app.listen(3001);\n"),e.k0s()()(),e.j41(44,"p"),e.EFF(45,"Pour lier "),e.j41(46,"code"),e.EFF(47,"@MessagePattern()"),e.k0s(),e.EFF(48," \xe0 une seule strat\xe9gie de transport (par exemple, MQTT) dans une application hybride avec plusieurs microservices, nous pouvons passer le second argument de type "),e.j41(49,"code"),e.EFF(50,"Transport"),e.k0s(),e.EFF(51," qui est une enum avec toutes les strat\xe9gies de transport int\xe9gr\xe9es d\xe9finies."),e.k0s(),e.j41(52,"app-copy-button",9)(53,"span",10),e.nrm(54,"app-tabs",null,1),e.k0s(),e.j41(56,"pre")(57,"code",7),e.EFF(58,"\n@MessagePattern('time.us.*', Transport.NATS)\ngetDate(@Payload() data: number[], @Ctx() context: NatsContext) {\n  console.log(`Subject: ${context.getSubject()}`); // e.g. \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n@MessagePattern({ cmd: 'time.us' }, Transport.TCP)\ngetTCPDate(@Payload() data: number[]) {\n  return new Date().toLocaleTimeString(...);\n}\n"),e.k0s()(),e.j41(59,"pre")(60,"code",7),e.EFF(61,"\n@Bind(Payload(), Ctx())\n@MessagePattern('time.us.*', Transport.NATS)\ngetDate(data, context) {\n  console.log(`Subject: ${context.getSubject()}`); // e.g. \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n@Bind(Payload(), Ctx())\n@MessagePattern({ cmd: 'time.us' }, Transport.TCP)\ngetTCPDate(data, context) {\n  return new Date().toLocaleTimeString(...);\n}\n"),e.k0s()()(),e.j41(62,"blockquote",8)(63,"strong"),e.EFF(64,"Astuce"),e.k0s(),e.j41(65,"code"),e.EFF(66,"@Payload()"),e.k0s(),e.EFF(67,", "),e.j41(68,"code"),e.EFF(69,"@Ctx()"),e.k0s(),e.EFF(70,", "),e.j41(71,"code"),e.EFF(72,"Transport"),e.k0s(),e.EFF(73," et "),e.j41(74,"code"),e.EFF(75,"NatsContext"),e.k0s(),e.EFF(76," sont import\xe9s depuis "),e.j41(77,"code"),e.EFF(78,"@nestjs/microservices"),e.k0s(),e.EFF(79,".\n"),e.k0s(),e.j41(80,"h4",11)(81,"span"),e.EFF(82,"Partager la configuration"),e.k0s()(),e.j41(83,"p"),e.EFF(84,"Par d\xe9faut, une application hybride n'h\xe9rite pas des pipes globaux, des intercepteurs, des guards et des filtres configur\xe9s pour l'application principale (bas\xe9e sur HTTP).\nPour h\xe9riter de ces propri\xe9t\xe9s de configuration de l'application principale, d\xe9finissez la propri\xe9t\xe9 "),e.j41(85,"code"),e.EFF(86,"inheritAppConfig"),e.k0s(),e.EFF(87," dans le second argument (un objet optionnel d'options) de l'appel "),e.j41(88,"code"),e.EFF(89,"connectMicroservice()"),e.k0s(),e.EFF(90,", comme suit :"),e.k0s(),e.j41(91,"app-copy-button")(92,"pre")(93,"code",7),e.EFF(94,"\nconst microservice = app.connectMicroservice<MicroserviceOptions>(\n  {\n    transport: Transport.TCP,\n  },\n  { inheritAppConfig: true },\n);\n"),e.k0s()()()()),2&n){const p=e.sdS(55);e.R7$(56),e.AVh("hide",p.isJsActive),e.R7$(3),e.AVh("hide",!p.isJsActive)}},dependencies:[l.O,u.a,i.z],encapsulation:2,changeDetection:0})}return s})(),h=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-keep-alive-connections"]],features:[e.Vt3],decls:39,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/keep-alive-connections.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","connexions-keep-alive"],[1,"warning"],["appAnchor","","id","usage"],[1,"language-typescript"]],template:function(n,o){1&n&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Connexions Keep-Alive"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Par d\xe9faut, les adaptateurs HTTP de NestJS attendent que la r\xe9ponse soit termin\xe9e avant de fermer l'application. Mais parfois, ce comportement n'est pas souhait\xe9, ou inattendu. Il peut y avoir des requ\xeates qui utilisent des en-t\xeates "),e.j41(9,"code"),e.EFF(10,"Connection : Keep-Alive"),e.k0s(),e.EFF(11," qui durent longtemps."),e.k0s(),e.j41(12,"p"),e.EFF(13,"Pour ces sc\xe9narios o\xf9 vous voulez toujours que votre application se termine sans attendre la fin des requ\xeates, vous pouvez activer l'option "),e.j41(14,"code"),e.EFF(15,"forceCloseConnections"),e.k0s(),e.EFF(16," lors de la cr\xe9ation de votre application NestJS."),e.k0s(),e.j41(17,"blockquote",6)(18,"strong"),e.EFF(19,"Astuce"),e.k0s(),e.EFF(20," La plupart des utilisateurs n'auront pas besoin d'activer cette option. Mais le sympt\xf4me de la n\xe9cessit\xe9 de cette option est que votre application ne se termine pas quand vous vous y attendez. Habituellement, lorsque "),e.j41(21,"code"),e.EFF(22,"app.enableShutdownHooks()"),e.k0s(),e.EFF(23," est activ\xe9 et que vous remarquez que l'application ne red\xe9marre pas/ne se termine pas. Tr\xe8s probablement lors de l'ex\xe9cution de l'application NestJS pendant le d\xe9veloppement avec "),e.j41(24,"code"),e.EFF(25,"--watch"),e.k0s(),e.EFF(26,".\n"),e.k0s(),e.j41(27,"h4",7)(28,"span"),e.EFF(29,"Usage"),e.k0s()(),e.j41(30,"p"),e.EFF(31,"Dans votre fichier "),e.j41(32,"code"),e.EFF(33,"main.ts"),e.k0s(),e.EFF(34,", activez l'option lors de la cr\xe9ation de votre application NestJS :"),e.k0s(),e.j41(35,"app-copy-button")(36,"pre")(37,"code",8),e.EFF(38,"\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, {\n    forceCloseConnections: true,\n  });\n  await app.listen((process.env.PORT ?? 3000);\n}\n\nbootstrap();\n"),e.k0s()()()())},dependencies:[u.a,i.z],encapsulation:2,changeDetection:0})}return s})(),g=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-multiple-servers"]],features:[e.Vt3],decls:78,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/multiple-servers.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","https"],[1,"language-typescript"],["appAnchor","","id","plusieurs-serveurs-simultan\xe9s"],[1,"info"],[1,""],["routerLink","/graphql/subscriptions"]],template:function(n,o){1&n&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"HTTPS"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Pour cr\xe9er une application qui utilise le protocole HTTPS, d\xe9finissez la propri\xe9t\xe9 "),e.j41(9,"code"),e.EFF(10,"httpsOptions"),e.k0s(),e.EFF(11," dans l'objet options pass\xe9 \xe0 la m\xe9thode "),e.j41(12,"code"),e.EFF(13,"create()"),e.k0s(),e.EFF(14," de la classe "),e.j41(15,"code"),e.EFF(16,"NestFactory"),e.k0s(),e.EFF(17," :"),e.k0s(),e.j41(18,"app-copy-button")(19,"pre")(20,"code",6),e.EFF(21,"\nconst httpsOptions = {\n  key: fs.readFileSync('./secrets/private-key.pem'),\n  cert: fs.readFileSync('./secrets/public-certificate.pem'),\n};\nconst app = await NestFactory.create(AppModule, {\n  httpsOptions,\n});\nawait app.listen((process.env.PORT ?? 3000);\n"),e.k0s()()(),e.j41(22,"p"),e.EFF(23,"Si vous utilisez l'adaptateur "),e.j41(24,"code"),e.EFF(25,"FastifyAdapter"),e.k0s(),e.EFF(26,", cr\xe9ez l'application comme suit :"),e.k0s(),e.j41(27,"app-copy-button")(28,"pre")(29,"code",6),e.EFF(30,"\nconst app = await NestFactory.create<NestFastifyApplication>(\n  AppModule,\n  new FastifyAdapter({ https: httpsOptions }),\n);\n"),e.k0s()()(),e.j41(31,"h4",7)(32,"span"),e.EFF(33,"Plusieurs serveurs simultan\xe9s"),e.k0s()(),e.j41(34,"p"),e.EFF(35,"La recette suivante montre comment instancier une application Nest qui \xe9coute simultan\xe9ment sur plusieurs ports (par exemple, sur un port non-HTTPS et sur un port HTTPS)."),e.k0s(),e.j41(36,"app-copy-button")(37,"pre")(38,"code",6),e.EFF(39,"\nconst httpsOptions = {\n  key: fs.readFileSync('./secrets/private-key.pem'),\n  cert: fs.readFileSync('./secrets/public-certificate.pem'),\n};\n\nconst server = express();\nconst app = await NestFactory.create(AppModule, new ExpressAdapter(server));\nawait app.init();\n\nconst httpServer = http.createServer(server).listen(3000);\nconst httpsServer = https.createServer(httpsOptions, server).listen(443);\n"),e.k0s()()(),e.j41(40,"p"),e.EFF(41,"Parce que nous avons appel\xe9 "),e.j41(42,"code"),e.EFF(43,"http.createServer"),e.k0s(),e.EFF(44," / "),e.j41(45,"code"),e.EFF(46,"https.createServer"),e.k0s(),e.EFF(47," nous-m\xeames, NestJS ne les ferme pas lors de l'appel \xe0 "),e.j41(48,"code"),e.EFF(49,"app.close"),e.k0s(),e.EFF(50," / sur le signal de fin. Nous devons le faire nous-m\xeames :"),e.k0s(),e.j41(51,"app-copy-button")(52,"pre")(53,"code",6),e.EFF(54,"\n@Injectable()\nexport class ShutdownObserver implements OnApplicationShutdown {\n  private httpServers: http.Server[] = [];\n\n  public addHttpServer(server: http.Server): void {\n    this.httpServers.push(server);\n  }\n\n  public async onApplicationShutdown(): Promise<void> {\n    await Promise.all(\n      this.httpServers.map(\n        (server) =>\n          new Promise((resolve, reject) => {\n            server.close((error) => {\n              if (error) {\n                reject(error);\n              } else {\n                resolve(null);\n              }\n            });\n          }),\n      ),\n    );\n  }\n}\n\nconst shutdownObserver = app.get(ShutdownObserver);\nshutdownObserver.addHttpServer(httpServer);\nshutdownObserver.addHttpServer(httpsServer);\n"),e.k0s()()(),e.j41(55,"blockquote",8)(56,"strong"),e.EFF(57,"Astuce"),e.k0s(),e.EFF(58," L'adaptateur "),e.j41(59,"code"),e.EFF(60,"ExpressAdapter"),e.k0s(),e.EFF(61," est import\xe9 depuis le paquet "),e.j41(62,"code"),e.EFF(63,"@nestjs/platform-express"),e.k0s(),e.EFF(64,". Les paquets "),e.j41(65,"code"),e.EFF(66,"http"),e.k0s(),e.EFF(67," et "),e.j41(68,"code"),e.EFF(69,"https"),e.k0s(),e.EFF(70," sont des paquets natifs de Node.js.\n"),e.k0s(),e.j41(71,"blockquote",9)(72,"strong"),e.EFF(73,"Attention"),e.k0s(),e.EFF(74," Cette recette ne fonctionne pas avec les "),e.j41(75,"a",10),e.EFF(76,"Subscriptions GraphQL"),e.k0s(),e.EFF(77,".\n"),e.k0s()())},dependencies:[u.a,i.z,c.Wk],encapsulation:2,changeDetection:0})}return s})(),b=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-raw-body"]],features:[e.Vt3],decls:167,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/raw-body.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","corps-brut"],[1,"warning"],["appAnchor","","id","utilisation-avec-express"],[1,"language-typescript"],["appAnchor","","id","enregistrer-un-autre-analyseur-syntaxique"],["appAnchor","","id","limite-de-taille-de-lanalyseur"],["appAnchor","","id","utilisation-avec-fastify"],["appAnchor","","id","enregistrer-un-autre-analyseur-syntaxique-1"],["appAnchor","","id","limite-de-taille-de-lanalyseur-1"]],template:function(n,o){1&n&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Corps brut"),e.k0s(),e.j41(7,"p"),e.EFF(8,"L'un des cas d'utilisation les plus courants pour avoir acc\xe8s au corps de la requ\xeate brute est la v\xe9rification de la signature du webhook. G\xe9n\xe9ralement, pour effectuer des validations de signature de webhook, le corps de la requ\xeate non s\xe9rialis\xe9 est n\xe9cessaire pour calculer un hachage HMAC."),e.k0s(),e.j41(9,"blockquote",6)(10,"strong"),e.EFF(11,"Astuce"),e.k0s(),e.EFF(12," Cette fonctionnalit\xe9 ne peut \xeatre utilis\xe9e que si le middleware de l'analyseur de corps de requ\xeate int\xe9gr\xe9 est activ\xe9, c'est-\xe0-dire que vous ne devez pas passer "),e.j41(13,"code"),e.EFF(14,"bodyParser : false"),e.k0s(),e.EFF(15," lors de la cr\xe9ation de l'application.\n"),e.k0s(),e.j41(16,"h4",7)(17,"span"),e.EFF(18,"Utilisation avec Express"),e.k0s()(),e.j41(19,"p"),e.EFF(20,"Activez d'abord l'option lors de la cr\xe9ation de votre application Nest Express :"),e.k0s(),e.j41(21,"app-copy-button")(22,"pre")(23,"code",8),e.EFF(24,"\nimport { NestFactory } from '@nestjs/core';\nimport type { NestExpressApplication } from '@nestjs/platform-express';\nimport { AppModule } from './app.module';\n\n// dans la fonction \"bootstrap\"\nconst app = await NestFactory.create<NestExpressApplication>(AppModule, {\n  rawBody: true,\n});\nawait app.listen(process.env.PORT ?? 3000);\n"),e.k0s()()(),e.j41(25,"p"),e.EFF(26,"Pour acc\xe9der au corps de la requ\xeate brute dans un contr\xf4leur, une interface de commodit\xe9 "),e.j41(27,"code"),e.EFF(28,"RawBodyRequest"),e.k0s(),e.EFF(29," est fournie pour exposer un champ "),e.j41(30,"code"),e.EFF(31,"rawBody"),e.k0s(),e.EFF(32," sur la requ\xeate : utilisez le type d'interface "),e.j41(33,"code"),e.EFF(34,"RawBodyRequest"),e.k0s(),e.EFF(35," :"),e.k0s(),e.j41(36,"app-copy-button")(37,"pre")(38,"code",8),e.EFF(39,"\nimport { Controller, Post, RawBodyRequest, Req } from '@nestjs/common';\nimport { Request } from 'express';\n\n@Controller('cats')\nclass CatsController {\n  @Post()\n  create(@Req() req: RawBodyRequest<Request>) {\n    const raw = req.rawBody; // renvoie un `Buffer`.\n  }\n}\n"),e.k0s()()(),e.j41(40,"h4",9)(41,"span"),e.EFF(42,"Enregistrer un autre analyseur syntaxique"),e.k0s()(),e.j41(43,"p"),e.EFF(44,"Par d\xe9faut, seuls les parseurs "),e.j41(45,"code"),e.EFF(46,"json"),e.k0s(),e.EFF(47," et "),e.j41(48,"code"),e.EFF(49,"urlencoded"),e.k0s(),e.EFF(50," sont enregistr\xe9s. Si vous voulez enregistrer un parseur diff\xe9rent \xe0 la vol\xe9e, vous devrez le faire explicitement."),e.k0s(),e.j41(51,"p"),e.EFF(52,"Par exemple, pour enregistrer un parseur "),e.j41(53,"code"),e.EFF(54,"text"),e.k0s(),e.EFF(55,", vous pouvez utiliser le code suivant :"),e.k0s(),e.j41(56,"app-copy-button")(57,"pre")(58,"code",8),e.EFF(59,"\napp.useBodyParser('text');\n"),e.k0s()()(),e.j41(60,"blockquote",6)(61,"strong"),e.EFF(62,"Attention"),e.k0s(),e.EFF(63," Assurez-vous que vous fournissez le bon type d'application \xe0 l'appel "),e.j41(64,"code"),e.EFF(65,"NestFactory.create"),e.k0s(),e.EFF(66,". Pour les applications Express, le type correct est "),e.j41(67,"code"),e.EFF(68,"NestExpressApplication"),e.k0s(),e.EFF(69,". Sinon, la m\xe9thode "),e.j41(70,"code"),e.EFF(71,".useBodyParser"),e.k0s(),e.EFF(72," ne sera pas trouv\xe9e.\n"),e.k0s(),e.j41(73,"h4",10)(74,"span"),e.EFF(75,"Limite de taille de l'analyseur"),e.k0s()(),e.j41(76,"p"),e.EFF(77,"Si votre application a besoin d'analyser un corps plus grand que les "),e.j41(78,"code"),e.EFF(79,"100kb"),e.k0s(),e.EFF(80," par d\xe9faut d'Express, utilisez ce qui suit :"),e.k0s(),e.j41(81,"app-copy-button")(82,"pre")(83,"code",8),e.EFF(84,"\napp.useBodyParser('json', { limit: '10mb' });\n"),e.k0s()()(),e.j41(85,"p"),e.EFF(86,"La m\xe9thode "),e.j41(87,"code"),e.EFF(88,".useBodyParser"),e.k0s(),e.EFF(89," respecte l'option "),e.j41(90,"code"),e.EFF(91,"rawBody"),e.k0s(),e.EFF(92," pass\xe9e dans les options de l'application."),e.k0s(),e.j41(93,"h4",11)(94,"span"),e.EFF(95,"Utilisation avec Fastify"),e.k0s()(),e.j41(96,"p"),e.EFF(97,"Activez d'abord l'option lors de la cr\xe9ation de votre application Nest Fastify :"),e.k0s(),e.j41(98,"app-copy-button")(99,"pre")(100,"code",8),e.EFF(101,"\nimport { NestFactory } from '@nestjs/core';\nimport {\n  FastifyAdapter,\n  NestFastifyApplication,\n} from '@nestjs/platform-fastify';\nimport { AppModule } from './app.module';\n\n// dans la fonction \"bootstrap\"\nconst app = await NestFactory.create<NestFastifyApplication>(\n  AppModule,\n  new FastifyAdapter(),\n  {\n    rawBody: true,\n  },\n);\nawait app.listen(process.env.PORT ?? 3000);\n"),e.k0s()()(),e.j41(102,"p"),e.EFF(103,"Pour acc\xe9der au corps de la requ\xeate brute dans un contr\xf4leur, une interface de commodit\xe9 "),e.j41(104,"code"),e.EFF(105,"RawBodyRequest"),e.k0s(),e.EFF(106," est fournie pour exposer un champ "),e.j41(107,"code"),e.EFF(108,"rawBody"),e.k0s(),e.EFF(109," sur la requ\xeate : utilisez le type d'interface "),e.j41(110,"code"),e.EFF(111,"RawBodyRequest"),e.k0s(),e.EFF(112," :"),e.k0s(),e.j41(113,"app-copy-button")(114,"pre")(115,"code",8),e.EFF(116,"\nimport { Controller, Post, RawBodyRequest, Req } from '@nestjs/common';\nimport { FastifyRequest } from 'fastify';\n\n@Controller('cats')\nclass CatsController {\n  @Post()\n  create(@Req() req: RawBodyRequest<FastifyRequest>) {\n    const raw = req.rawBody; // renvoie un `Buffer`.\n  }\n}\n"),e.k0s()()(),e.j41(117,"h4",12)(118,"span"),e.EFF(119,"Enregistrer un autre analyseur syntaxique"),e.k0s()(),e.j41(120,"p"),e.EFF(121,"Par d\xe9faut, seuls les parseurs "),e.j41(122,"code"),e.EFF(123,"application/json"),e.k0s(),e.EFF(124," et "),e.j41(125,"code"),e.EFF(126,"application/x-www-form-urlencoded"),e.k0s(),e.EFF(127," sont enregistr\xe9s. Si vous voulez enregistrer un parseur diff\xe9rent \xe0 la vol\xe9e, vous devrez le faire explicitement."),e.k0s(),e.j41(128,"p"),e.EFF(129,"Par exemple, pour enregistrer un analyseur "),e.j41(130,"code"),e.EFF(131,"text/plain"),e.k0s(),e.EFF(132,", vous pouvez utiliser le code suivant :"),e.k0s(),e.j41(133,"app-copy-button")(134,"pre")(135,"code",8),e.EFF(136,"\napp.useBodyParser('text/plain');\n"),e.k0s()()(),e.j41(137,"blockquote",6)(138,"strong"),e.EFF(139,"Attention"),e.k0s(),e.EFF(140," Assurez-vous que vous fournissez le bon type d'application \xe0 l'appel "),e.j41(141,"code"),e.EFF(142,"NestFactory.create"),e.k0s(),e.EFF(143,". Pour les applications Fastify, le type correct est "),e.j41(144,"code"),e.EFF(145,"NestFastifyApplication"),e.k0s(),e.EFF(146,". Sinon, la m\xe9thode "),e.j41(147,"code"),e.EFF(148,".useBodyParser"),e.k0s(),e.EFF(149," ne sera pas trouv\xe9e.\n"),e.k0s(),e.j41(150,"h4",13)(151,"span"),e.EFF(152,"Limite de taille de l'analyseur"),e.k0s()(),e.j41(153,"p"),e.EFF(154,"Si votre application a besoin d'analyser un corps plus grand que les 1 Mo de Fastify par d\xe9faut, utilisez ce qui suit :"),e.k0s(),e.j41(155,"app-copy-button")(156,"pre")(157,"code",8),e.EFF(158,"\nconst bodyLimit = 10_485_760; // 10MiB\napp.useBodyParser('application/json', { bodyLimit });\n"),e.k0s()()(),e.j41(159,"p"),e.EFF(160,"La m\xe9thode "),e.j41(161,"code"),e.EFF(162,".useBodyParser"),e.k0s(),e.EFF(163," respecte l'option "),e.j41(164,"code"),e.EFF(165,"rawBody"),e.k0s(),e.EFF(166," pass\xe9e dans les options de l'application."),e.k0s()())},dependencies:[u.a,i.z],encapsulation:2,changeDetection:0})}return s})(),y=(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-request-lifecycle"]],features:[e.Vt3],decls:169,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/request-lifecycle.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","cycle-de-vie-de-la-requ\xeate"],["appAnchor","","id","middleware"],["routerLink","/middleware"],["appAnchor","","id","gardes"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","intercepteurs"],["rel","nofollow","target","_blank","href","https://github.com/ReactiveX/rxjs"],["appAnchor","","id","pipes"],["appAnchor","","id","filtres"],["appAnchor","","id","r\xe9sum\xe9"]],template:function(n,o){1&n&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Cycle de vie de la requ\xeate"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Les applications Nest traitent les requ\xeates et produisent des r\xe9ponses dans une s\xe9quence que nous appelons le "),e.j41(9,"strong"),e.EFF(10,"cycle de vie de la requ\xeate"),e.k0s(),e.EFF(11,". Avec l'utilisation de middleware, de pipes, de guards et d'intercepteurs, il peut \xeatre difficile de d\xe9terminer o\xf9 un morceau de code particulier s'ex\xe9cute pendant le cycle de vie de la requ\xeate, en particulier lorsque des composants globaux, au niveau du contr\xf4leur et au niveau de la route entrent en jeu. En g\xe9n\xe9ral, une demande passe par un middleware, des guards, des intercepteurs, des pipes et enfin des intercepteurs sur le chemin du retour (lorsque la r\xe9ponse est g\xe9n\xe9r\xe9e)."),e.k0s(),e.j41(12,"h4",6)(13,"span"),e.EFF(14,"Middleware"),e.k0s()(),e.j41(15,"p"),e.EFF(16,"Les middlewares sont ex\xe9cut\xe9s dans un ordre particulier. Tout d'abord, Nest ex\xe9cute les middlewares li\xe9s globalement (tels que les middlewares li\xe9s \xe0 "),e.j41(17,"code"),e.EFF(18,"app.use"),e.k0s(),e.EFF(19,") et ensuite il ex\xe9cute les "),e.j41(20,"a",7),e.EFF(21,"middlewares li\xe9s aux modules"),e.k0s(),e.EFF(22,", qui sont d\xe9termin\xe9s par des routes. Les middlewares sont ex\xe9cut\xe9s s\xe9quentiellement dans l'ordre o\xf9 ils sont li\xe9s, de la m\xeame mani\xe8re que les middlewares dans Express. Dans le cas d'un middleware li\xe9 \xe0 diff\xe9rents modules, le middleware li\xe9 au module racine s'ex\xe9cutera en premier, puis le middleware s'ex\xe9cutera dans l'ordre dans lequel les modules sont ajout\xe9s au tableau des imports."),e.k0s(),e.j41(23,"h4",8)(24,"span"),e.EFF(25,"Gardes"),e.k0s()(),e.j41(26,"p"),e.EFF(27,"L'ex\xe9cution des gardes commence par les gardes globales, puis passe aux gardes des contr\xf4leurs et enfin aux gardes des routes. Comme pour les intergiciels, les gardes s'ex\xe9cutent dans l'ordre dans lequel elles sont li\xe9es. Par exemple :"),e.k0s(),e.j41(28,"app-copy-button")(29,"pre")(30,"code",9),e.EFF(31,"\n@UseGuards(Guard1, Guard2)\n@Controller('cats')\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n\n  @UseGuards(Guard3)\n  @Get()\n  getCats(): Cats[] {\n    return this.catsService.getCats();\n  }\n}\n"),e.k0s()()(),e.j41(32,"p")(33,"code"),e.EFF(34,"Guard1"),e.k0s(),e.EFF(35," s'ex\xe9cutera avant "),e.j41(36,"code"),e.EFF(37,"Guard2"),e.k0s(),e.EFF(38," et les deux s'ex\xe9cuteront avant "),e.j41(39,"code"),e.EFF(40,"Guard3"),e.k0s(),e.EFF(41,"."),e.k0s(),e.j41(42,"blockquote",10)(43,"strong"),e.EFF(44,"Astuce"),e.k0s(),e.EFF(45," Lorsque l'on parle de li\xe9 globalement par opposition \xe0 li\xe9 au contr\xf4leur ou \xe0 la route, la diff\xe9rence est l'endroit o\xf9 la garde (ou un autre composant est li\xe9). Si vous utilisez "),e.j41(46,"code"),e.EFF(47,"app.useGlobalGuard()"),e.k0s(),e.EFF(48," ou si vous fournissez le composant via un module, il est li\xe9 globalement. Sinon, il est li\xe9 \xe0 un contr\xf4leur si le d\xe9corateur pr\xe9c\xe8de une classe de contr\xf4leur, ou \xe0 une route si le d\xe9corateur pr\xe9c\xe8de une d\xe9claration de route.\n"),e.k0s(),e.j41(49,"h4",11)(50,"span"),e.EFF(51,"Intercepteurs"),e.k0s()(),e.j41(52,"p"),e.EFF(53,"Les intercepteurs, pour la plupart, suivent le m\xeame mod\xe8le que les gardes, avec une diff\xe9rence : comme les intercepteurs renvoient des "),e.j41(54,"a",12),e.EFF(55,"Observables RxJS"),e.k0s(),e.EFF(56,", les observables seront r\xe9solus de la mani\xe8re suivante : premier arriv\xe9, dernier sorti. Ainsi, les requ\xeates entrantes passeront par la r\xe9solution standard au niveau global, puis contr\xf4leur, puis route, mais le c\xf4t\xe9 r\xe9ponse de la requ\xeate (c'est-\xe0-dire apr\xe8s le retour du gestionnaire de m\xe9thode du contr\xf4leur) sera r\xe9solu de la route au contr\xf4leur et au niveau global. De plus, toutes les erreurs lanc\xe9es par les pipes, les contr\xf4leurs ou les services peuvent \xeatre lues dans l'op\xe9rateur "),e.j41(57,"code"),e.EFF(58,"catchError"),e.k0s(),e.EFF(59," d'un intercepteur."),e.k0s(),e.j41(60,"h4",13)(61,"span"),e.EFF(62,"Pipes"),e.k0s()(),e.j41(63,"p"),e.EFF(64,'Les pipes suivent la s\xe9quence standard global/contr\xf4leur/route, avec le m\xeame principe "premier entr\xe9, premier sorti" en ce qui concerne les param\xe8tres '),e.j41(65,"code"),e.EFF(66,"@UsePipes()"),e.k0s(),e.EFF(67,". Cependant, au niveau des param\xe8tres de la route, si vous avez plusieurs pipes en cours d'ex\xe9cution, elles s'ex\xe9cuteront dans l'ordre du dernier param\xe8tre avec une pipe vers le premier. Ceci s'applique \xe9galement aux pipes au niveau de la route et du contr\xf4leur. Par exemple, si nous avons le contr\xf4leur suivant :"),e.k0s(),e.j41(68,"app-copy-button")(69,"pre")(70,"code",9),e.EFF(71,"\n@UsePipes(GeneralValidationPipe)\n@Controller('cats')\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n\n  @UsePipes(RouteSpecificPipe)\n  @Patch(':id')\n  updateCat(\n    @Body() body: UpdateCatDTO,\n    @Param() params: UpdateCatParams,\n    @Query() query: UpdateCatQuery,\n  ) {\n    return this.catsService.updateCat(body, params, query);\n  }\n}\n"),e.k0s()()(),e.j41(72,"p"),e.EFF(73,"alors le "),e.j41(74,"code"),e.EFF(75,"GeneralValidationPipe"),e.k0s(),e.EFF(76," s'ex\xe9cutera pour les objets "),e.j41(77,"code"),e.EFF(78,"query"),e.k0s(),e.EFF(79,", puis les "),e.j41(80,"code"),e.EFF(81,"params"),e.k0s(),e.EFF(82,", et enfin les objets "),e.j41(83,"code"),e.EFF(84,"body"),e.k0s(),e.EFF(85," avant de passer au "),e.j41(86,"code"),e.EFF(87,"RouteSpecificPipe"),e.k0s(),e.EFF(88,", qui suit le m\xeame ordre. Si des pipes sp\xe9cifiques aux param\xe8tres \xe9taient en place, ils s'ex\xe9cuteraient (encore une fois, du dernier au premier param\xe8tre) apr\xe8s les pipes au niveau du contr\xf4leur et de la route."),e.k0s(),e.j41(89,"h4",14)(90,"span"),e.EFF(91,"Filtres"),e.k0s()(),e.j41(92,"p"),e.EFF(93,"Les filtres sont les seuls composants qui ne sont pas r\xe9solus globalement en premier. Au lieu de cela, les filtres sont r\xe9solus au niveau le plus bas possible, ce qui signifie que l'ex\xe9cution commence par les filtres li\xe9s \xe0 la route, puis passe au niveau du contr\xf4leur et enfin aux filtres globaux. Notez que les exceptions ne peuvent pas \xeatre transmises d'un filtre \xe0 l'autre ; si un filtre au niveau de la route attrape l'exception, un contr\xf4leur ou un filtre au niveau global ne peut pas attraper la m\xeame exception. La seule fa\xe7on d'obtenir un tel effet est d'utiliser l'h\xe9ritage entre les filtres."),e.k0s(),e.j41(94,"blockquote",10)(95,"strong"),e.EFF(96,"Astuce"),e.k0s(),e.EFF(97," Les filtres ne sont ex\xe9cut\xe9s que si une exception non captur\xe9e se produit au cours du processus de demande. Les exceptions captur\xe9es, telles que celles qui sont captur\xe9es avec un "),e.j41(98,"code"),e.EFF(99,"try/catch"),e.k0s(),e.EFF(100,", ne d\xe9clenchent pas l'ex\xe9cution des filtres d'exception. D\xe8s qu'une exception est rencontr\xe9e, le reste du cycle de vie est ignor\xe9 et la demande passe directement au filtre.\n"),e.k0s(),e.j41(101,"h4",15)(102,"span"),e.EFF(103,"R\xe9sum\xe9"),e.k0s()(),e.j41(104,"p"),e.EFF(105,"En g\xe9n\xe9ral, le cycle de vie d'une requ\xeate se pr\xe9sente comme suit :"),e.k0s(),e.j41(106,"ol")(107,"li"),e.EFF(108,"Requ\xeate entrante"),e.k0s(),e.j41(109,"li"),e.EFF(110,"Middleware"),e.j41(111,"ul")(112,"li"),e.EFF(113,"2.1. Middleware li\xe9 globalement"),e.k0s(),e.j41(114,"li"),e.EFF(115,"2.2. Middleware li\xe9 au module"),e.k0s()()(),e.j41(116,"li"),e.EFF(117,"Gardes"),e.j41(118,"ul")(119,"li"),e.EFF(120,"3.1 Gardes globales"),e.k0s(),e.j41(121,"li"),e.EFF(122,"3.2 Gardes du contr\xf4leur"),e.k0s(),e.j41(123,"li"),e.EFF(124,"3.3 Gardes de la route"),e.k0s()()(),e.j41(125,"li"),e.EFF(126,"Intercepteurs (pr\xe9-contr\xf4leur)"),e.j41(127,"ul")(128,"li"),e.EFF(129,"4.1 Intercepteurs globaux"),e.k0s(),e.j41(130,"li"),e.EFF(131,"4.2 Intercepteurs du contr\xf4leur"),e.k0s(),e.j41(132,"li"),e.EFF(133,"4.3 Intercepteurs de la route"),e.k0s()()(),e.j41(134,"li"),e.EFF(135,"Pipes"),e.j41(136,"ul")(137,"li"),e.EFF(138,"5.1 Pipes globales"),e.k0s(),e.j41(139,"li"),e.EFF(140,"5.2 Pipes du contr\xf4leur"),e.k0s(),e.j41(141,"li"),e.EFF(142,"5.3 Pipes de la route"),e.k0s(),e.j41(143,"li"),e.EFF(144,"5.4 Pipes des param\xe8tres de route"),e.k0s()()(),e.j41(145,"li"),e.EFF(146,"Contr\xf4leur (gestionnaire de m\xe9thode)"),e.k0s(),e.j41(147,"li"),e.EFF(148,"Service (s'il existe)"),e.k0s(),e.j41(149,"li"),e.EFF(150,"Intercepteurs (post-requ\xeate)"),e.j41(151,"ul")(152,"li"),e.EFF(153,"8.1 Intercepteurs de la route"),e.k0s(),e.j41(154,"li"),e.EFF(155,"8.2 Intercepteurs du contr\xf4leur"),e.k0s(),e.j41(156,"li"),e.EFF(157,"8.3 Intercepteurs globaux"),e.k0s()()(),e.j41(158,"li"),e.EFF(159,"Filtres d'exceptions"),e.j41(160,"ul")(161,"li"),e.EFF(162,"9.1 Route"),e.k0s(),e.j41(163,"li"),e.EFF(164,"9.2 Contr\xf4leur"),e.k0s(),e.j41(165,"li"),e.EFF(166,"9.3 Global"),e.k0s()()(),e.j41(167,"li"),e.EFF(168,"R\xe9ponse du serveur"),e.k0s()()())},dependencies:[u.a,i.z,c.Wk],encapsulation:2,changeDetection:0})}return s})();var q=r(5663);const x=[{path:"global-prefix",component:k,data:{title:"Pr\xe9fixe de chemin global - FAQ"}},{path:"hybrid-application",component:j,data:{title:"Application hybride - FAQ"}},{path:"multiple-servers",component:g,data:{title:"HTTPS et serveurs multiples - FAQ"}},{path:"http-adapter",component:f,data:{title:"Adaptateur HTTP - FAQ"}},{path:"keep-alive-connections",component:h,data:{title:"Connexions Keep-Alive - FAQ"}},{path:"raw-body",component:b,data:{title:"Corps brut"}},{path:"request-lifecycle",component:y,data:{title:"Cycle de vie de la requ\xeate - FAQ"}},{path:"common-errors",component:v,data:{title:"Erreurs fr\xe9quentes - FAQ"}},{path:"serverless",component:(()=>{class s extends a.y{static \u0275fac=(()=>{let t;return function(o){return(t||(t=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-serverless"]],features:[e.Vt3],decls:403,vars:4,consts:[["contentReference",""],["app1fa1b5b7320b95a5e6121627861d6aae36cd97c8",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/faq/serverless.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","serverless"],["rel","nofollow","target","_blank","href","https://en.wikipedia.org/wiki/Serverless_computing"],[1,"info"],["appAnchor","","id","d\xe9marrage-\xe0-froid"],["routerLink","/standalone-applications"],["appAnchor","","id","crit\xe8res-d\xe9valuation"],[1,"language-typescript"],["routerLink","/cli/overview"],[1,"language-javascript"],["appAnchor","","id","optimisation-de-la-dur\xe9e-dex\xe9cution"],["routerLink","/fundamentals/async-providers"],["routerLink","/fundamentals/lazy-loading-modules"],["appAnchor","","id","exemple-dint\xe9gration"],["rel","nofollow","target","_blank","href","https://www.serverless.com/"],[1,"language-bash"],[1,"language-yaml"],["rel","nofollow","target","_blank","href","https://www.serverless.com/framework/docs/"],["href","/cli/monorepo#mode-monorepo"],[1,"warning"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/swagger/issues/199"],[1,"language-json"],["appAnchor","","id","utilisation-de-la-fonction-dapplication-ind\xe9pendante"],[1,"with-heading"],[1,"filename"]],template:function(n,o){if(1&n&&(e.j41(0,"div",2,0)(2,"div",3)(3,"a",4),e.nrm(4,"i",5),e.k0s()(),e.j41(5,"h3",6),e.EFF(6,"Serverless"),e.k0s(),e.j41(7,"p"),e.EFF(8,"L'informatique sans serveur (serverless) est un mod\xe8le d'ex\xe9cution du cloud computing dans lequel le fournisseur de cloud alloue des ressources machine \xe0 la demande, en s'occupant des serveurs pour le compte de ses clients. Lorsqu'une application n'est pas utilis\xe9e, aucune ressource informatique ne lui est allou\xe9e. La tarification est bas\xe9e sur la quantit\xe9 r\xe9elle de ressources consomm\xe9es par une application ("),e.j41(9,"a",7),e.EFF(10,"source"),e.k0s(),e.EFF(11,")."),e.k0s(),e.j41(12,"p"),e.EFF(13,"Avec une "),e.j41(14,"strong"),e.EFF(15,"architecture sans serveur"),e.k0s(),e.EFF(16,", vous vous concentrez purement sur les fonctions individuelles dans le code de votre application. Des services tels que AWS Lambda, Google Cloud Functions et Microsoft Azure Functions s'occupent de toute la gestion du mat\xe9riel physique, du syst\xe8me d'exploitation de la machine virtuelle et du logiciel du serveur web."),e.k0s(),e.j41(17,"blockquote",8)(18,"strong"),e.EFF(19,"Info"),e.k0s(),e.EFF(20," Ce chapitre ne couvre pas les avantages et les inconv\xe9nients des fonctions sans serveur et ne plonge pas dans les sp\xe9cificit\xe9s des fournisseurs de cloud.\n"),e.k0s(),e.j41(21,"h4",9)(22,"span"),e.EFF(23,"D\xe9marrage \xe0 froid"),e.k0s()(),e.j41(24,"p"),e.EFF(25,"Un d\xe9marrage \xe0 froid est la premi\xe8re fois que votre code est ex\xe9cut\xe9 depuis un certain temps. Selon le fournisseur de cloud que vous utilisez, il peut s'agir de plusieurs op\xe9rations diff\xe9rentes, depuis le t\xe9l\xe9chargement du code et l'amor\xe7age du runtime jusqu'\xe0 l'ex\xe9cution finale de votre code.\nCe processus ajoute "),e.j41(26,"strong"),e.EFF(27,"une latence significative"),e.k0s(),e.EFF(28," en fonction de plusieurs facteurs, le langage, le nombre de paquets dont votre application a besoin, etc."),e.k0s(),e.j41(29,"p"),e.EFF(30,"Le d\xe9marrage \xe0 froid est important et, bien qu'il y ait des choses qui \xe9chappent \xe0 notre contr\xf4le, il y a encore beaucoup de choses que nous pouvons faire de notre c\xf4t\xe9 pour le rendre aussi court que possible."),e.k0s(),e.j41(31,"p"),e.EFF(32,"Bien que vous puissiez consid\xe9rer Nest comme un framework \xe0 part enti\xe8re con\xe7u pour \xeatre utilis\xe9 dans des applications d'entreprise complexes, il est \xe9galement "),e.j41(33,"strong"),e.EFF(34,"adapt\xe9 \xe0 des applications"),e.k0s(),e.EFF(35,' (ou des scripts) beaucoup plus "simples". Par exemple, avec l\'utilisation de la fonctionnalit\xe9 '),e.j41(36,"a",10),e.EFF(37,"applications ind\xe9pendantes"),e.k0s(),e.EFF(38,", vous pouvez tirer parti du syst\xe8me DI de Nest dans des travailleurs simples, des t\xe2ches CRON, des CLI ou des fonctions sans serveur."),e.k0s(),e.j41(39,"h4",11)(40,"span"),e.EFF(41,"Crit\xe8res d'\xe9valuation"),e.k0s()(),e.j41(42,"p"),e.EFF(43,"Pour mieux comprendre quel est le co\xfbt de l'utilisation de Nest ou d'autres biblioth\xe8ques bien connues (comme "),e.j41(44,"code"),e.EFF(45,"express"),e.k0s(),e.EFF(46,") dans le contexte des fonctions sans serveur, comparons le temps n\xe9cessaire au runtime Node pour ex\xe9cuter les scripts suivants :"),e.k0s(),e.j41(47,"app-copy-button")(48,"pre")(49,"code",12),e.EFF(50,"\n// #1 Express\nimport * as express from 'express';\n\nasync function bootstrap() {\n  const app = express();\n  app.get('/', (req, res) => res.send('Hello world!'));\n  await new Promise<void>((resolve) => app.listen(3000, resolve));\n}\nbootstrap();\n\n// #2 Nest (avec @nestjs/platform-express)\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, { logger: ['error'] });\n  await app.listen(process.env.PORT ?? 3000);\n}\nbootstrap();\n\n// #3 Nest en tant qu'application ind\xe9pendante (pas de serveur HTTP)\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { AppService } from './app.service';\n\nasync function bootstrap() {\n  const app = await NestFactory.createApplicationContext(AppModule, {\n    logger: ['error'],\n  });\n  console.log(app.get(AppService).getHello());\n}\nbootstrap();\n\n// #4 Script Node.js brut\nasync function bootstrap() {\n  console.log('Hello world!');\n}\nbootstrap();\n"),e.k0s()()(),e.j41(51,"p"),e.EFF(52,"Pour tous ces scripts, nous avons utilis\xe9 le compilateur "),e.j41(53,"code"),e.EFF(54,"tsc"),e.k0s(),e.EFF(55," (TypeScript) et donc le code reste d\xe9group\xe9 ("),e.j41(56,"code"),e.EFF(57,"webpack"),e.k0s(),e.EFF(58," n'est pas utilis\xe9)."),e.k0s(),e.j41(59,"table"),e.nrm(60,"thead"),e.j41(61,"tbody")(62,"tr")(63,"td"),e.EFF(64,"Express"),e.k0s(),e.j41(65,"td"),e.EFF(66,"0.0079s (7.9ms)"),e.k0s()(),e.j41(67,"tr")(68,"td"),e.EFF(69,"Nest avec "),e.j41(70,"code"),e.EFF(71,"@nestjs/platform-express"),e.k0s()(),e.j41(72,"td"),e.EFF(73,"0.1974s (197.4ms)"),e.k0s()(),e.j41(74,"tr")(75,"td"),e.EFF(76,"Nest (application ind\xe9pendante)"),e.k0s(),e.j41(77,"td"),e.EFF(78,"0.1117s (111.7ms)"),e.k0s()(),e.j41(79,"tr")(80,"td"),e.EFF(81,"Script Node.js brut"),e.k0s(),e.j41(82,"td"),e.EFF(83,"0.0071s (7.1ms)"),e.k0s()()()(),e.j41(84,"blockquote",8)(85,"strong"),e.EFF(86,"Note"),e.k0s(),e.EFF(87," Machine: MacBook Pro Mid 2014, 2.5 GHz Quad-Core Intel Core i7, 16 GB 1600 MHz DDR3, SSD.\n"),e.k0s(),e.j41(88,"p"),e.EFF(89,"Maintenant, r\xe9p\xe9tons tous les benchmarks mais cette fois en utilisant "),e.j41(90,"code"),e.EFF(91,"webpack"),e.k0s(),e.EFF(92," (si vous avez "),e.j41(93,"a",13),e.EFF(94,"Nest CLI"),e.k0s(),e.EFF(95," install\xe9, vous pouvez lancer "),e.j41(96,"code"),e.EFF(97,"nest build --webpack"),e.k0s(),e.EFF(98,") pour empaqueter notre application dans un seul fichier JavaScript ex\xe9cutable.\nCependant, au lieu d'utiliser la configuration par d\xe9faut de "),e.j41(99,"code"),e.EFF(100,"webpack"),e.k0s(),e.EFF(101," fournie par Nest CLI, nous allons nous assurer de regrouper toutes les d\xe9pendances ("),e.j41(102,"code"),e.EFF(103,"node_modules"),e.k0s(),e.EFF(104,") ensemble, comme suit :"),e.k0s(),e.j41(105,"pre")(106,"code",14),e.EFF(107,"\nmodule.exports = (options, webpack) => {\n  const lazyImports = [\n    '@nestjs/microservices/microservices-module',\n    '@nestjs/websockets/socket-module',\n  ];\n\n  return {\n    ...options,\n    externals: [],\n    plugins: [\n      ...options.plugins,\n      new webpack.IgnorePlugin({\n        checkResource(resource) {\n          if (lazyImports.includes(resource)) {\n            try {\n              require.resolve(resource);\n            } catch (err) {\n              return true;\n            }\n          }\n          return false;\n        },\n      }),\n    ],\n  };\n};\n"),e.k0s()(),e.j41(108,"blockquote",8)(109,"strong"),e.EFF(110,"Astuce"),e.k0s(),e.EFF(111," Pour indiquer \xe0 Nest CLI d'utiliser cette configuration, cr\xe9ez un nouveau fichier "),e.j41(112,"code"),e.EFF(113,"webpack.config.js"),e.k0s(),e.EFF(114," dans le r\xe9pertoire racine de votre projet.\n"),e.k0s(),e.j41(115,"p"),e.EFF(116,"Avec cette configuration, nous avons obtenu les r\xe9sultats suivants :"),e.k0s(),e.j41(117,"table"),e.nrm(118,"thead"),e.j41(119,"tbody")(120,"tr")(121,"td"),e.EFF(122,"Express"),e.k0s(),e.j41(123,"td"),e.EFF(124,"0.0068s (6.8ms)"),e.k0s()(),e.j41(125,"tr")(126,"td"),e.EFF(127,"Nest avec "),e.j41(128,"code"),e.EFF(129,"@nestjs/platform-express"),e.k0s()(),e.j41(130,"td"),e.EFF(131,"0.0815s (81.5ms)"),e.k0s()(),e.j41(132,"tr")(133,"td"),e.EFF(134,"Nest (application ind\xe9pendante)"),e.k0s(),e.j41(135,"td"),e.EFF(136,"0.0319s (31.9ms)"),e.k0s()(),e.j41(137,"tr")(138,"td"),e.EFF(139,"Script Node.js brut"),e.k0s(),e.j41(140,"td"),e.EFF(141,"0.0066s (6.6ms)"),e.k0s()()()(),e.j41(142,"blockquote",8)(143,"strong"),e.EFF(144,"Note"),e.k0s(),e.EFF(145," Machine: MacBook Pro Mid 2014, 2.5 GHz Quad-Core Intel Core i7, 16 GB 1600 MHz DDR3, SSD.\n"),e.k0s(),e.j41(146,"blockquote",8)(147,"strong"),e.EFF(148,"Astuce"),e.k0s(),e.EFF(149," Vous pouvez l'optimiser encore plus en appliquant des techniques suppl\xe9mentaires de minification et d'optimisation du code (en utilisant les plugins "),e.j41(150,"code"),e.EFF(151,"webpack"),e.k0s(),e.EFF(152,", etc.).\n"),e.k0s(),e.j41(153,"p"),e.EFF(154,"Comme vous pouvez le voir, la fa\xe7on dont vous compilez (et si vous bundlez votre code) est cruciale et a un impact significatif sur le temps de d\xe9marrage global. Avec "),e.j41(155,"code"),e.EFF(156,"webpack"),e.k0s(),e.EFF(157,", vous pouvez r\xe9duire le temps de d\xe9marrage d'une application Nest autonome (projet de d\xe9marrage avec un module, un contr\xf4leur et un service) \xe0 ~32 ms en moyenne, et \xe0 ~81,5 ms pour une application NestJS bas\xe9e sur HTTP et express."),e.k0s(),e.j41(158,"p"),e.EFF(159,"Pour les applications Nest plus compliqu\xe9es, par exemple, avec 10 ressources (g\xe9n\xe9r\xe9es par le sch\xe9ma "),e.j41(160,"code"),e.EFF(161,"$ nest g resource"),e.k0s(),e.EFF(162," = 10 modules, 10 contr\xf4leurs, 10 services, 20 classes DTO, 50 points de terminaison HTTP + "),e.j41(163,"code"),e.EFF(164,"AppModule"),e.k0s(),e.EFF(165,"), le d\xe9marrage global sur MacBook Pro Mid 2014, 2,5 GHz Quad-Core Intel Core i7, 16 Go 1600 MHz DDR3, SSD est d'environ 0,1298s (129,8ms). L'ex\xe9cution d'une application monolithique en tant que fonction sans serveur n'a g\xe9n\xe9ralement pas beaucoup de sens de toute fa\xe7on, alors consid\xe9rez ce benchmark plus comme un exemple de la fa\xe7on dont le temps de d\xe9marrage peut potentiellement augmenter au fur et \xe0 mesure que votre application grandit."),e.k0s(),e.j41(166,"h4",15)(167,"span"),e.EFF(168,"Optimisation de la dur\xe9e d'ex\xe9cution"),e.k0s()(),e.j41(169,"p"),e.EFF(170,"Jusqu'\xe0 pr\xe9sent, nous avons abord\xe9 les optimisations au moment de la compilation. Celles-ci ne sont pas li\xe9es \xe0 la mani\xe8re dont vous d\xe9finissez les fournisseurs et chargez les modules Nest dans votre application, ce qui joue un r\xf4le essentiel au fur et \xe0 mesure que votre application prend de l'ampleur."),e.k0s(),e.j41(171,"p"),e.EFF(172,"Imaginons par exemple qu'une connexion \xe0 une base de donn\xe9es soit d\xe9finie comme un "),e.j41(173,"a",16),e.EFF(174,"fournisseur asynchrone"),e.k0s(),e.EFF(175,". Les fournisseurs asynchrones sont con\xe7us pour retarder le d\xe9marrage de l'application jusqu'\xe0 ce qu'une ou plusieurs t\xe2ches asynchrones soient termin\xe9es.\nCela signifie que si votre fonction serverless n\xe9cessite en moyenne 2s pour se connecter \xe0 la base de donn\xe9es (au d\xe9marrage), votre endpoint aura besoin d'au moins deux secondes suppl\xe9mentaires (parce qu'il doit attendre que la connexion soit \xe9tablie) pour renvoyer une r\xe9ponse (lorsqu'il s'agit d'un d\xe9marrage \xe0 froid et que votre application n'\xe9tait pas d\xe9j\xe0 en cours d'ex\xe9cution)."),e.k0s(),e.j41(176,"p"),e.EFF(177,"Comme vous pouvez le voir, la fa\xe7on dont vous structurez vos fournisseurs est quelque peu diff\xe9rente dans un "),e.j41(178,"strong"),e.EFF(179,"environnement sans serveur"),e.k0s(),e.EFF(180," o\xf9 le temps de d\xe9marrage est important.\nUn autre bon exemple est l'utilisation de Redis pour la mise en cache, mais seulement dans certains sc\xe9narios. Dans ce cas, vous ne devriez peut-\xeatre pas d\xe9finir une connexion Redis en tant que fournisseur asynchrone, car cela ralentirait le temps de d\xe9marrage, m\xeame si cela n'est pas n\xe9cessaire pour cette invocation de fonction sp\xe9cifique."),e.k0s(),e.j41(181,"p"),e.EFF(182,"Parfois, vous pouvez \xe9galement charger paresseusement des modules entiers, en utilisant la classe "),e.j41(183,"code"),e.EFF(184,"LazyModuleLoader"),e.k0s(),e.EFF(185,", comme d\xe9crit dans "),e.j41(186,"a",17),e.EFF(187,"ce chapitre"),e.k0s(),e.EFF(188,". La mise en cache est un bon exemple ici aussi.\nImaginez que votre application ait, disons, "),e.j41(189,"code"),e.EFF(190,"CacheModule"),e.k0s(),e.EFF(191," qui se connecte en interne \xe0 Redis et exporte aussi "),e.j41(192,"code"),e.EFF(193,"CacheService"),e.k0s(),e.EFF(194," pour interagir avec le stockage Redis. Si vous n'en avez pas besoin pour toutes les invocations potentielles de fonctions, vous pouvez simplement le charger \xe0 la demande,\nvous pouvez simplement le charger \xe0 la demande, paresseusement. De cette fa\xe7on, vous obtiendrez un temps de d\xe9marrage plus rapide (lors d'un d\xe9marrage \xe0 froid) pour toutes les invocations qui ne n\xe9cessitent pas de mise en cache."),e.k0s(),e.j41(195,"app-copy-button")(196,"pre")(197,"code",12),e.EFF(198,"\nif (request.method === RequestMethod[RequestMethod.GET]) {\n  const { CacheModule } = await import('./cache.module');\n  const moduleRef = await this.lazyModuleLoader.load(() => CacheModule);\n\n  const { CacheService } = await import('./cache.service');\n  const cacheService = moduleRef.get(CacheService);\n\n  return cacheService.get(ENDPOINT_KEY);\n}\n"),e.k0s()()(),e.j41(199,"p"),e.EFF(200,"Un autre bon exemple est celui d'un webhook ou d'un worker qui, en fonction de certaines conditions sp\xe9cifiques (par exemple, les arguments d'entr\xe9e), peut effectuer diff\xe9rentes op\xe9rations.\nDans ce cas, vous pouvez sp\xe9cifier une condition dans votre gestionnaire de route qui charge paresseusement un module appropri\xe9 pour l'invocation de la fonction sp\xe9cifique, et charge simplement tous les autres modules paresseusement."),e.k0s(),e.j41(201,"app-copy-button")(202,"pre")(203,"code",12),e.EFF(204,"\nif (workerType === WorkerType.A) {\n  const { WorkerAModule } = await import('./worker-a.module');\n  const moduleRef = await this.lazyModuleLoader.load(() => WorkerAModule);\n  // ...\n} else if (workerType === WorkerType.B) {\n  const { WorkerBModule } = await import('./worker-b.module');\n  const moduleRef = await this.lazyModuleLoader.load(() => WorkerBModule);\n  // ...\n}\n"),e.k0s()()(),e.j41(205,"h4",18)(206,"span"),e.EFF(207,"Exemple d'int\xe9gration"),e.k0s()(),e.j41(208,"p"),e.EFF(209,"La fa\xe7on dont le fichier d'entr\xe9e de votre application (typiquement le fichier "),e.j41(210,"code"),e.EFF(211,"main.ts"),e.k0s(),e.EFF(212,") est cens\xe9 ressembler "),e.j41(213,"strong"),e.EFF(214,"d\xe9pend de plusieurs facteurs"),e.k0s(),e.EFF(215," et donc "),e.j41(216,"strong"),e.EFF(217,"il n'y a pas de mod\xe8le unique"),e.k0s(),e.EFF(218," qui fonctionne simplement pour tous les sc\xe9narios.\nPar exemple, le fichier d'initialisation requis pour d\xe9marrer votre fonction serverless varie selon les fournisseurs de cloud (AWS, Azure, GCP, etc.).\nDe m\xeame, selon que vous souhaitez ex\xe9cuter une application HTTP typique avec plusieurs routes/points de terminaison ou simplement fournir une seule route (ou ex\xe9cuter une partie sp\xe9cifique du code),\nle code de votre application sera diff\xe9rent (par exemple, pour l'approche endpoint par fonction, vous pourriez utiliser "),e.j41(219,"code"),e.EFF(220,"NestFactory.createApplicationContext"),e.k0s(),e.EFF(221," au lieu de d\xe9marrer le serveur HTTP, de configurer le middleware, etc.)"),e.k0s(),e.j41(222,"p"),e.EFF(223,"Juste \xe0 des fins d'illustration, nous allons int\xe9grer Nest (en utilisant "),e.j41(224,"code"),e.EFF(225,"@nestjs/platform-express"),e.k0s(),e.EFF(226," et en faisant tourner l'ensemble du routeur HTTP enti\xe8rement fonctionnel)\navec le framework "),e.j41(227,"a",19),e.EFF(228,"Serverless"),e.k0s(),e.EFF(229," (dans ce cas, ciblant AWS Lambda). Comme nous l'avons mentionn\xe9 pr\xe9c\xe9demment, votre code sera diff\xe9rent en fonction du fournisseur de cloud que vous choisissez, et de nombreux autres facteurs."),e.k0s(),e.j41(230,"p"),e.EFF(231,"Tout d'abord, installons les packages n\xe9cessaires :"),e.k0s(),e.j41(232,"pre")(233,"code",20),e.EFF(234,"\n$ npm i @codegenie/serverless-express aws-lambda\n$ npm i -D @types/aws-lambda serverless-offline\n"),e.k0s()(),e.j41(235,"blockquote",8)(236,"strong"),e.EFF(237,"Astuce"),e.k0s(),e.EFF(238," Pour acc\xe9l\xe9rer les cycles de d\xe9veloppement, nous installons le plugin "),e.j41(239,"code"),e.EFF(240,"serverless-offline"),e.k0s(),e.EFF(241," qui \xe9mule AWS \u03bb et API Gateway.\n"),e.k0s(),e.j41(242,"p"),e.EFF(243,"Une fois le processus d'installation termin\xe9, cr\xe9ons le fichier "),e.j41(244,"code"),e.EFF(245,"serverless.yml"),e.k0s(),e.EFF(246," pour configurer le framework Serverless :"),e.k0s(),e.j41(247,"pre")(248,"code",21),e.EFF(249,"\nservice: serverless-example\n\nplugins:\n  - serverless-offline\n\nprovider:\n  name: aws\n  runtime: nodejs14.x\n\nfunctions:\n  main:\n    handler: dist/main.handler\n    events:\n      - http:\n          method: ANY\n          path: /\n      - http:\n          method: ANY\n          path: '{proxy+}'\n"),e.k0s()(),e.j41(250,"blockquote",8)(251,"strong"),e.EFF(252,"Astuce"),e.k0s(),e.EFF(253," Pour en savoir plus sur le framework Serverless, consultez la "),e.j41(254,"a",22),e.EFF(255,"documentation officielle"),e.k0s(),e.EFF(256,".\n"),e.k0s(),e.j41(257,"p"),e.EFF(258,"Avec cela, nous pouvons maintenant naviguer vers le fichier "),e.j41(259,"code"),e.EFF(260,"main.ts"),e.k0s(),e.EFF(261," et mettre \xe0 jour notre code bootstrap avec le boilerplate requis :"),e.k0s(),e.j41(262,"app-copy-button")(263,"pre")(264,"code",12),e.EFF(265,"\nimport { NestFactory } from '@nestjs/core';\nimport serverlessExpress from '@codegenie/serverless-express';\nimport { Callback, Context, Handler } from 'aws-lambda';\nimport { AppModule } from './app.module';\n\nlet server: Handler;\n\nasync function bootstrap(): Promise<Handler> {\n  const app = await NestFactory.create(AppModule);\n  await app.init();\n\n  const expressApp = app.getHttpAdapter().getInstance();\n  return serverlessExpress({ app: expressApp });\n}\n\nexport const handler: Handler = async (\n  event: any,\n  context: Context,\n  callback: Callback,\n) => {\n  server = server ?? (await bootstrap());\n  return server(event, context, callback);\n};\n"),e.k0s()()(),e.j41(266,"blockquote",8)(267,"strong"),e.EFF(268,"Astuce"),e.k0s(),e.EFF(269," Pour cr\xe9er plusieurs fonctions sans serveur et partager des modules communs entre elles, nous recommandons d'utiliser le "),e.j41(270,"a",23),e.EFF(271,"mode Monorepo"),e.k0s(),e.EFF(272,".\n"),e.k0s(),e.j41(273,"blockquote",24)(274,"strong"),e.EFF(275,"Attention"),e.k0s(),e.EFF(276," Si vous utilisez le paquet "),e.j41(277,"code"),e.EFF(278,"@nestjs/swagger"),e.k0s(),e.EFF(279,", il y a quelques \xe9tapes suppl\xe9mentaires requises pour le faire fonctionner correctement dans le contexte de la fonction sans serveur. Consultez ce "),e.j41(280,"a",25),e.EFF(281,"thread"),e.k0s(),e.EFF(282," pour plus d'informations.\n"),e.k0s(),e.j41(283,"p"),e.EFF(284,"Ensuite, ouvrez le fichier "),e.j41(285,"code"),e.EFF(286,"tsconfig.json"),e.k0s(),e.EFF(287," et assurez-vous d'activer l'option "),e.j41(288,"code"),e.EFF(289,"esModuleInterop"),e.k0s(),e.EFF(290," pour que le paquet "),e.j41(291,"code"),e.EFF(292,"@codegenie/serverless-express"),e.k0s(),e.EFF(293," se charge correctement."),e.k0s(),e.j41(294,"pre")(295,"code",26),e.EFF(296,'\n{\n  "compilerOptions": {\n    ...\n    "esModuleInterop": true\n  }\n}\n'),e.k0s()(),e.j41(297,"p"),e.EFF(298,"Maintenant nous pouvons construire notre application (avec "),e.j41(299,"code"),e.EFF(300,"nest build"),e.k0s(),e.EFF(301," ou "),e.j41(302,"code"),e.EFF(303,"tsc"),e.k0s(),e.EFF(304,") et utiliser le CLI "),e.j41(305,"code"),e.EFF(306,"serverless"),e.k0s(),e.EFF(307," pour d\xe9marrer notre fonction lambda localement :"),e.k0s(),e.j41(308,"pre")(309,"code",20),e.EFF(310,"\n$ npm run build\n$ npx serverless offline\n"),e.k0s()(),e.j41(311,"p"),e.EFF(312,"Une fois l'application lanc\xe9e, ouvrez votre navigateur et naviguez vers "),e.j41(313,"code"),e.EFF(314,"http://localhost:3000/dev/[ANY_ROUTE]"),e.k0s(),e.EFF(315," (o\xf9 "),e.j41(316,"code"),e.EFF(317,"[ANY_ROUTE]"),e.k0s(),e.EFF(318," est n'importe quel point de terminaison enregistr\xe9 dans votre application)."),e.k0s(),e.j41(319,"p"),e.EFF(320,"Dans les sections pr\xe9c\xe9dentes, nous avons montr\xe9 que l'utilisation de "),e.j41(321,"code"),e.EFF(322,"webpack"),e.k0s(),e.EFF(323," et l'empaquetage de votre application peuvent avoir un impact significatif sur le temps de d\xe9marrage global.\nCependant, pour que cela fonctionne dans notre exemple, il y a quelques configurations suppl\xe9mentaires que vous devez ajouter dans votre fichier "),e.j41(324,"code"),e.EFF(325,"webpack.config.js"),e.k0s(),e.EFF(326,". G\xe9n\xe9ralement,\npour s'assurer que notre fonction "),e.j41(327,"code"),e.EFF(328,"handler"),e.k0s(),e.EFF(329," sera r\xe9cup\xe9r\xe9e, nous devons changer la propri\xe9t\xe9 "),e.j41(330,"code"),e.EFF(331,"output.libraryTarget"),e.k0s(),e.EFF(332," en "),e.j41(333,"code"),e.EFF(334,"commonjs2"),e.k0s(),e.EFF(335,"."),e.k0s(),e.j41(336,"pre")(337,"code",14),e.EFF(338,"\nreturn {\n  ...options,\n  externals: [],\n  output: {\n    ...options.output,\n    libraryTarget: 'commonjs2',\n  },\n  // ... le reste de la configuration\n};\n"),e.k0s()(),e.j41(339,"p"),e.EFF(340,"Avec ceci en place, vous pouvez maintenant utiliser "),e.j41(341,"code"),e.EFF(342,"$ nest build --webpack"),e.k0s(),e.EFF(343," pour compiler le code de votre fonction (et ensuite "),e.j41(344,"code"),e.EFF(345,"$ npx serverless offline"),e.k0s(),e.EFF(346," pour la tester)."),e.k0s(),e.j41(347,"p"),e.EFF(348,"Il est \xe9galement recommand\xe9 (mais "),e.j41(349,"strong"),e.EFF(350,"non obligatoire"),e.k0s(),e.EFF(351," car cela ralentira votre processus de construction) d'installer le paquet "),e.j41(352,"code"),e.EFF(353,"terser-webpack-plugin"),e.k0s(),e.EFF(354," et de surcharger sa configuration pour garder les noms de classe intacts lors de la minification de votre construction de production. Ne pas le faire peut r\xe9sulter en un comportement incorrect lors de l'utilisation de "),e.j41(355,"code"),e.EFF(356,"class-validator"),e.k0s(),e.EFF(357," dans votre application."),e.k0s(),e.j41(358,"pre")(359,"code",14),e.EFF(360,"\nconst TerserPlugin = require('terser-webpack-plugin');\n\nreturn {\n  ...options,\n  externals: [],\n  optimization: {\n    minimizer: [\n      new TerserPlugin({\n        terserOptions: {\n          keep_classnames: true,\n        },\n      }),\n    ],\n  },\n  output: {\n    ...options.output,\n    libraryTarget: 'commonjs2',\n  },\n  // ... le reste de la configuration\n};\n"),e.k0s()(),e.j41(361,"h4",27)(362,"span"),e.EFF(363,"Utilisation de la fonction d'application ind\xe9pendante"),e.k0s()(),e.j41(364,"p"),e.EFF(365,"Alternativement, si vous voulez garder votre fonction tr\xe8s l\xe9g\xe8re et que vous n'avez besoin d'aucune fonctionnalit\xe9 li\xe9e \xe0 HTTP (routage, mais aussi gardes, intercepteurs, pipes, etc.),\nvous pouvez simplement utiliser "),e.j41(366,"code"),e.EFF(367,"NestFactory.createApplicationContext"),e.k0s(),e.EFF(368," (comme mentionn\xe9 plus t\xf4t) au lieu de lancer le serveur HTTP entier (et "),e.j41(369,"code"),e.EFF(370,"express"),e.k0s(),e.EFF(371," sous le capot), comme suit :"),e.k0s(),e.j41(372,"app-copy-button",28)(373,"span",29),e.EFF(374),e.nI1(375,"extension"),e.nrm(376,"app-tabs",null,1),e.k0s(),e.j41(378,"pre")(379,"code",12),e.EFF(380,"\nimport { HttpStatus } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { Callback, Context, Handler } from 'aws-lambda';\nimport { AppModule } from './app.module';\nimport { AppService } from './app.service';\n\nexport const handler: Handler = async (\n  event: any,\n  context: Context,\n  callback: Callback,\n) => {\n  const appContext = await NestFactory.createApplicationContext(AppModule);\n  const appService = appContext.get(AppService);\n\n  return {\n    body: appService.getHello(),\n    statusCode: HttpStatus.OK,\n  };\n};\n"),e.k0s()()(),e.j41(381,"blockquote",8)(382,"strong"),e.EFF(383,"Astuce"),e.k0s(),e.EFF(384," Soyez conscient que "),e.j41(385,"code"),e.EFF(386,"NestFactory.createApplicationContext"),e.k0s(),e.EFF(387," n'enveloppe pas les m\xe9thodes du contr\xf4leur avec des am\xe9liorations ( garde, intercepteurs, etc.). Pour cela, vous devez utiliser la m\xe9thode "),e.j41(388,"code"),e.EFF(389,"NestFactory.create"),e.k0s(),e.EFF(390,".\n"),e.k0s(),e.j41(391,"p"),e.EFF(392,"Vous pouvez \xe9galement transmettre l'objet "),e.j41(393,"code"),e.EFF(394,"event"),e.k0s(),e.EFF(395," \xe0, disons, un fournisseur "),e.j41(396,"code"),e.EFF(397,"EventsService"),e.k0s(),e.EFF(398," qui peut le traiter et renvoyer une valeur correspondante (en fonction de la valeur d'entr\xe9e et de votre logique m\xe9tier)."),e.k0s(),e.j41(399,"app-copy-button")(400,"pre")(401,"code",12),e.EFF(402,"\nexport const handler: Handler = async (\n  event: any,\n  context: Context,\n  callback: Callback,\n) => {\n  const appContext = await NestFactory.createApplicationContext(AppModule);\n  const eventsService = appContext.get(EventsService);\n  return eventsService.process(event);\n};\n"),e.k0s()()()()),2&n){const p=e.sdS(377);e.R7$(374),e.SpI(" ",e.i5U(375,1,"main",p.isJsActive),"\n")}},dependencies:[l.O,u.a,i.z,c.Wk,q.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Serverless - FAQ"}}];let A=(()=>{class s{static \u0275fac=function(n){return new(n||s)};static \u0275mod=e.$C({type:s});static \u0275inj=e.G2t({imports:[F.MD,E.G,c.iI.forChild(x)]})}return s})()}}]);