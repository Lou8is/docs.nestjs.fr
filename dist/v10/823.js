"use strict";(self.webpackChunkdocs_nestjs_com=self.webpackChunkdocs_nestjs_com||[]).push([[823],{4823:(z,q,i)=>{i.r(q),i.d(q,{FundamentalsModule:()=>P});var C=i(177),d=i(685),y=i(445),l=i(8050),e=i(4438),E=i(4819),p=i(2469);let x=(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-async-components"]],features:[e.Vt3],decls:52,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/async-components.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","fournisseurs-asynchrones"],[1,"language-typescript"],[1,"info"],["routerLink","/fundamentals/custom-providers"],["appAnchor","","id","injection"],["appAnchor","","id","exemple"],["routerLink","/recipes/sql-typeorm"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Fournisseurs asynchrones"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Parfois, le d\xe9marrage de l'application doit \xeatre retard\xe9 jusqu'\xe0 ce qu'une ou plusieurs "),e.j41(9,"strong"),e.EFF(10,"t\xe2ches asynchrones"),e.k0s(),e.EFF(11," soient termin\xe9es. Par exemple, il se peut que vous ne souhaitiez pas commencer \xe0 accepter des requ\xeates tant que la connexion avec la base de donn\xe9es n'a pas \xe9t\xe9 \xe9tablie. Vous pouvez y parvenir en utilisant des fournisseurs asynchrones."),e.k0s(),e.j41(12,"p"),e.EFF(13,"La syntaxe pour cela est d'utiliser "),e.j41(14,"code"),e.EFF(15,"async/await"),e.k0s(),e.EFF(16," avec la syntaxe "),e.j41(17,"code"),e.EFF(18,"useFactory"),e.k0s(),e.EFF(19,". La factory renvoie une "),e.j41(20,"code"),e.EFF(21,"Promise"),e.k0s(),e.EFF(22,", et la fonction factory peut "),e.j41(23,"code"),e.EFF(24,"await"),e.k0s(),e.EFF(25," les t\xe2ches asynchrones. Nest attendra la r\xe9solution de la promesse avant d'instancier toute classe qui d\xe9pend d'un tel fournisseur (qui l'injecte)."),e.k0s(),e.j41(26,"app-copy-button")(27,"pre")(28,"code",6),e.EFF(29,"\n{\n  provide: 'ASYNC_CONNECTION',\n  useFactory: async () => {\n    const connection = await createConnection(options);\n    return connection;\n  },\n}\n"),e.k0s()()(),e.j41(30,"blockquote",7)(31,"strong"),e.EFF(32,"Astuce"),e.k0s(),e.EFF(33," Apprenez-en plus sur la syntaxe des fournisseurs personnalis\xe9s "),e.j41(34,"a",8),e.EFF(35,"ici"),e.k0s(),e.EFF(36,".\n"),e.k0s(),e.j41(37,"h4",9)(38,"span"),e.EFF(39,"Injection"),e.k0s()(),e.j41(40,"p"),e.EFF(41,"Les fournisseurs asynchrones sont inject\xe9s dans d'autres composants par leurs jetons, comme n'importe quel autre fournisseur. Dans l'exemple ci-dessus, vous utiliseriez la construction "),e.j41(42,"code"),e.EFF(43,"@Inject('ASYNC_CONNECTION')"),e.k0s(),e.EFF(44,"."),e.k0s(),e.j41(45,"h4",10)(46,"span"),e.EFF(47,"Exemple"),e.k0s()(),e.j41(48,"p")(49,"a",11),e.EFF(50,"The TypeORM recipe"),e.k0s(),e.EFF(51," pr\xe9sente un exemple plus substantiel de fournisseur asynchrone."),e.k0s()())},dependencies:[E.a,p.z,d.Wk],encapsulation:2,changeDetection:0})}return s})();var f=i(5119),k=i(5663);let S=(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-circular-dependency"]],features:[e.Vt3],decls:154,vars:24,consts:[["contentReference",""],["app6c27aaa5452856943775e8685071469f99c7b7dd",""],["appf59967a1b1ae35f1788b7292755e850a0e5406c9",""],["app8ba992d0ba213c8979354ee12e44d39a9f98642d",""],["appcf9702cf20d8da443e6befb8630fcb1178a89aea",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/circular-dependency.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","d\xe9pendance-circulaire"],[1,"warning"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/issues/1181#issuecomment-430197191"],["appAnchor","","id","r\xe9f\xe9rence-avanc\xe9e"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/issues/5778"],["appAnchor","","id","alternative-de-la-classe-moduleref"],["routerLink","/fundamentals/module-ref"],["appAnchor","","id","r\xe9f\xe9rence-avanc\xe9e-de-module"]],template:function(t,o){if(1&t&&(e.j41(0,"div",5,0)(2,"div",6)(3,"a",7),e.nrm(4,"i",8),e.k0s()(),e.j41(5,"h3",9),e.EFF(6,"D\xe9pendance circulaire"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Une d\xe9pendance circulaire se produit lorsque deux classes d\xe9pendent l'une de l'autre. Par exemple, la classe A a besoin de la classe B, et la classe B a \xe9galement besoin de la classe A. Les d\xe9pendances circulaires peuvent appara\xeetre dans Nest entre les modules et entre les fournisseurs."),e.k0s(),e.j41(9,"p"),e.EFF(10,"Les d\xe9pendances circulaires doivent \xeatre \xe9vit\xe9es dans la mesure du possible, mais ce n'est pas toujours possible. Dans ce cas, Nest permet de r\xe9soudre les d\xe9pendances circulaires entre les fournisseurs de deux mani\xe8res. Dans ce chapitre, nous d\xe9crivons l'utilisation de "),e.j41(11,"strong"),e.EFF(12,"r\xe9f\xe9rences avanc\xe9es"),e.k0s(),e.EFF(13," comme une technique, et l'utilisation de la classe "),e.j41(14,"strong"),e.EFF(15,"ModuleRef"),e.k0s(),e.EFF(16," pour r\xe9cup\xe9rer une instance de fournisseur dans le conteneur DI comme une autre technique."),e.k0s(),e.j41(17,"p"),e.EFF(18,"Nous d\xe9crivons \xe9galement la r\xe9solution des d\xe9pendances circulaires entre les modules."),e.k0s(),e.j41(19,"blockquote",10)(20,"strong"),e.EFF(21,"Attention"),e.k0s(),e.EFF(22," Une d\xe9pendance circulaire peut \xe9galement \xeatre caus\xe9e par l'utilisation de \"barrel files\"/index.ts pour regrouper les importations. Les \"barrel files\" doivent \xeatre omis lorsqu'il s'agit de classes de modules/fournisseurs. Par exemple, les barrel files ne devraient pas \xeatre utilis\xe9s lors de l'importation de fichiers dans le m\xeame r\xe9pertoire que le barrel file, c'est-\xe0-dire que "),e.j41(23,"code"),e.EFF(24,"cats/cats.controller"),e.k0s(),e.EFF(25," ne devrait pas importer "),e.j41(26,"code"),e.EFF(27,"cats"),e.k0s(),e.EFF(28," pour importer le fichier "),e.j41(29,"code"),e.EFF(30,"cats/cats.service"),e.k0s(),e.EFF(31,". Pour plus de d\xe9tails, veuillez \xe9galement consulter "),e.j41(32,"a",11),e.EFF(33,"ce probl\xe8me github"),e.k0s(),e.EFF(34,".\n"),e.k0s(),e.j41(35,"h4",12)(36,"span"),e.EFF(37,"R\xe9f\xe9rence avanc\xe9e"),e.k0s()(),e.j41(38,"p"),e.EFF(39,"Une "),e.j41(40,"strong"),e.EFF(41,"r\xe9f\xe9rence avanc\xe9e"),e.k0s(),e.EFF(42," permet \xe0 Nest de r\xe9f\xe9rencer des classes qui ne sont pas encore d\xe9finies en utilisant la fonction utilitaire "),e.j41(43,"code"),e.EFF(44,"forwardRef()"),e.k0s(),e.EFF(45,". Par exemple, si "),e.j41(46,"code"),e.EFF(47,"CatsService"),e.k0s(),e.EFF(48," et "),e.j41(49,"code"),e.EFF(50,"CommonService"),e.k0s(),e.EFF(51," d\xe9pendent l'un de l'autre, les deux parties de la relation peuvent utiliser "),e.j41(52,"code"),e.EFF(53,"@Inject()"),e.k0s(),e.EFF(54," et l'utilitaire "),e.j41(55,"code"),e.EFF(56,"forwardRef()"),e.k0s(),e.EFF(57," pour r\xe9soudre la d\xe9pendance circulaire. Sinon Nest ne les instanciera pas car toutes les m\xe9tadonn\xe9es essentielles ne seront pas disponibles. Voici un exemple :"),e.k0s(),e.j41(58,"app-copy-button",13)(59,"span",14),e.EFF(60),e.nI1(61,"extension"),e.nrm(62,"app-tabs",null,1),e.k0s(),e.j41(64,"pre")(65,"code",15),e.EFF(66,"\n@Injectable()\nexport class CatsService {\n  constructor(\n    @Inject(forwardRef(() => CommonService))\n    private commonService: CommonService,\n  ) {}\n}\n"),e.k0s()(),e.j41(67,"pre")(68,"code",15),e.EFF(69,"\n@Injectable()\n@Dependencies(forwardRef(() => CommonService))\nexport class CatsService {\n  constructor(commonService) {\n    this.commonService = commonService;\n  }\n}\n"),e.k0s()()(),e.j41(70,"blockquote",16)(71,"strong"),e.EFF(72,"Astuce"),e.k0s(),e.EFF(73," La fonction "),e.j41(74,"code"),e.EFF(75,"forwardRef()"),e.k0s(),e.EFF(76," est import\xe9e du paquet "),e.j41(77,"code"),e.EFF(78,"@nestjs/common"),e.k0s(),e.EFF(79,".\n"),e.k0s(),e.j41(80,"p"),e.EFF(81,"Cela couvre un c\xf4t\xe9 de la relation. Faisons maintenant la m\xeame chose avec "),e.j41(82,"code"),e.EFF(83,"CommonService"),e.k0s(),e.EFF(84," :"),e.k0s(),e.j41(85,"app-copy-button",13)(86,"span",14),e.EFF(87),e.nI1(88,"extension"),e.nrm(89,"app-tabs",null,2),e.k0s(),e.j41(91,"pre")(92,"code",15),e.EFF(93,"\n@Injectable()\nexport class CommonService {\n  constructor(\n    @Inject(forwardRef(() => CatsService))\n    private catsService: CatsService,\n  ) {}\n}\n"),e.k0s()(),e.j41(94,"pre")(95,"code",15),e.EFF(96,"\n@Injectable()\n@Dependencies(forwardRef(() => CatsService))\nexport class CommonService {\n  constructor(catsService) {\n    this.catsService = catsService;\n  }\n}\n"),e.k0s()()(),e.j41(97,"blockquote",10)(98,"strong"),e.EFF(99,"Attention"),e.k0s(),e.EFF(100," L'ordre d'instanciation est ind\xe9termin\xe9. Assurez-vous que votre code ne d\xe9pend pas du constructeur appel\xe9 en premier. Avoir des d\xe9pendances circulaires qui d\xe9pendent de providers avec "),e.j41(101,"code"),e.EFF(102,"Scope.REQUEST"),e.k0s(),e.EFF(103," peut conduire \xe0 des d\xe9pendances non d\xe9finies. Plus d'informations disponibles "),e.j41(104,"a",17),e.EFF(105,"ici"),e.k0s()(),e.j41(106,"h4",18)(107,"span"),e.EFF(108,"Alternative de la classe ModuleRef"),e.k0s()(),e.j41(109,"p"),e.EFF(110,"Une alternative \xe0 l'utilisation de "),e.j41(111,"code"),e.EFF(112,"forwardRef()"),e.k0s(),e.EFF(113," est de remanier votre code et d'utiliser la classe "),e.j41(114,"code"),e.EFF(115,"ModuleRef"),e.k0s(),e.EFF(116," pour r\xe9cup\xe9rer un fournisseur d'un c\xf4t\xe9 de la relation (autrement) circulaire. Pour en savoir plus sur la classe utilitaire "),e.j41(117,"code"),e.EFF(118,"ModuleRef"),e.k0s(),e.EFF(119,", cliquez "),e.j41(120,"a",19),e.EFF(121,"ici"),e.k0s(),e.EFF(122,"."),e.k0s(),e.j41(123,"h4",20)(124,"span"),e.EFF(125,"R\xe9f\xe9rence avanc\xe9e de module"),e.k0s()(),e.j41(126,"p"),e.EFF(127,"Afin de r\xe9soudre les d\xe9pendances circulaires entre les modules, utilisez la m\xeame fonction utilitaire "),e.j41(128,"code"),e.EFF(129,"forwardRef()"),e.k0s(),e.EFF(130," des deux c\xf4t\xe9s de l'association des modules. Par exemple :"),e.k0s(),e.j41(131,"app-copy-button",13)(132,"span",14),e.EFF(133),e.nI1(134,"extension"),e.nrm(135,"app-tabs",null,3),e.k0s(),e.j41(137,"pre")(138,"code",15),e.EFF(139,"\n@Module({\n  imports: [forwardRef(() => CatsModule)],\n})\nexport class CommonModule {}\n"),e.k0s()()(),e.j41(140,"p"),e.EFF(141,"Cela couvre un aspect de la relation. Faisons maintenant la m\xeame chose avec "),e.j41(142,"code"),e.EFF(143,"CatsModule"),e.k0s(),e.EFF(144," :"),e.k0s(),e.j41(145,"app-copy-button",13)(146,"span",14),e.EFF(147),e.nI1(148,"extension"),e.nrm(149,"app-tabs",null,4),e.k0s(),e.j41(151,"pre")(152,"code",15),e.EFF(153,"\n@Module({\n  imports: [forwardRef(() => CommonModule)],\n})\nexport class CatsModule {}\n"),e.k0s()()()()),2&t){const u=e.sdS(63),r=e.sdS(90),a=e.sdS(136),c=e.sdS(150);e.R7$(60),e.SpI(" ",e.i5U(61,12,"cats.service",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(20),e.SpI(" ",e.i5U(88,15,"common.service",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(39),e.SpI(" ",e.i5U(134,18,"common.module",a.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(148,21,"cats.module",c.isJsActive),"\n")}},dependencies:[f.O,E.a,p.z,d.Wk,k.M],encapsulation:2,changeDetection:0})}return s})();var v=i(5749);let M=(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-dependency-injection"]],features:[e.Vt3],decls:474,vars:36,consts:[["contentReference",""],["appf3b0530cbaa4a2b7fc51128b1771a13c08bbd687",""],["appdb00b4ee0bde7fd87c049c31e67f0e9314cffb6f",""],["app32e0cf4dc056ef714836b7ca8aaf9f6c241a9de5",""],["appaa9cd8bb3405a2ed2f52221790becf5fdd0fa144",""],["appeacaf511395a68bb1c728f17c7ace34bef62ee2d",""],["app7bcaf7eeb32f8f9a7ea7cfd2f01700fbd674ff21",""],["appfa3acad2000c26d23f6209fa77243c7ac76961c9",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/dependency-injection.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","fournisseurs-personnalis\xe9s"],["href","/providers#injection-de-d%C3%A9pendance"],["appAnchor","","id","principes-de-base-de-lid"],["rel","nofollow","target","_blank","href","https://en.wikipedia.org/wiki/Inversion_of_control"],["routerLink","/providers"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],["start","3"],["href","/fundamentals/custom-providers#fournisseurs-standards"],["appAnchor","","id","fournisseurs-standards"],["appAnchor","","id","fournisseurs-personnalis\xe9s-1"],[1,"info"],["appAnchor","","id","fournisseurs-de-valeur--usevalue"],["rel","nofollow","target","_blank","href","https://www.typescriptlang.org/docs/handbook/type-compatibility.html"],["appAnchor","","id","jetons-de-fournisseur-non-bas\xe9s-sur-une-classe"],["href","/fundamentals/custom-providers#principes-de-base-de-lid"],[1,"warning"],["rel","nofollow","target","_blank","href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"],["rel","nofollow","target","_blank","href","https://www.typescriptlang.org/docs/handbook/enums.html"],["appAnchor","","id","fournisseurs-de-classe--useclass"],["appAnchor","","id","fournisseurs-de-factory--usefactory"],["appAnchor","","id","fournisseurs-dalias--useexisting"],["appAnchor","","id","fournisseurs-non-bas\xe9s-sur-les-services"],["appAnchor","","id","exporter-un-fournisseur-personnalis\xe9"]],template:function(t,o){if(1&t&&(e.j41(0,"div",8,0)(2,"div",9)(3,"a",10),e.nrm(4,"i",11),e.k0s()(),e.j41(5,"h3",12),e.EFF(6,"Fournisseurs personnalis\xe9s"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Dans les chapitres pr\xe9c\xe9dents, nous avons abord\xe9 divers aspects de "),e.j41(9,"strong"),e.EFF(10,"l'injection de d\xe9pendances (ID)"),e.k0s(),e.EFF(11," et la fa\xe7on dont elle est utilis\xe9e dans Nest. Un exemple est l'injection de d\xe9pendance "),e.j41(12,"a",13),e.EFF(13,"bas\xe9e sur le constructeur"),e.k0s(),e.EFF(14," utilis\xe9e pour injecter des instances (souvent des fournisseurs de services) dans les classes. Vous ne serez pas surpris d'apprendre que l'injection de d\xe9pendances est int\xe9gr\xe9e de mani\xe8re fondamentale dans le noyau de Nest. Jusqu'\xe0 pr\xe9sent, nous n'avons explor\xe9 qu'un seul mod\xe8le principal. Au fur et \xe0 mesure que votre application se complexifie, vous aurez peut-\xeatre besoin de tirer parti de toutes les fonctionnalit\xe9s du syst\xe8me d'injection de d\xe9pendances, alors explorons-les plus en d\xe9tail."),e.k0s(),e.j41(15,"h4",14)(16,"span"),e.EFF(17,"Principes de base de l'ID"),e.k0s()(),e.j41(18,"p"),e.EFF(19,"L'injection de d\xe9pendances est une technique "),e.j41(20,"a",15),e.EFF(21,"d'inversion de contr\xf4le (IoC)"),e.k0s(),e.EFF(22," dans laquelle vous d\xe9l\xe9guez l'instanciation des d\xe9pendances au conteneur IoC (dans notre cas, le syst\xe8me d'ex\xe9cution NestJS), au lieu de le faire imp\xe9rativement dans votre propre code. Examinons ce qui se passe dans cet exemple tir\xe9 du chapitre sur les "),e.j41(23,"a",16),e.EFF(24,"fournisseurs"),e.k0s(),e.EFF(25,"."),e.k0s(),e.j41(26,"p"),e.EFF(27,"Tout d'abord, nous d\xe9finissons un fournisseur. Le d\xe9corateur "),e.j41(28,"code"),e.EFF(29,"@Injectable()"),e.k0s(),e.EFF(30," marque la classe "),e.j41(31,"code"),e.EFF(32,"CatsService"),e.k0s(),e.EFF(33," comme fournisseur."),e.k0s(),e.j41(34,"app-copy-button",17)(35,"span",18),e.EFF(36),e.nI1(37,"extension"),e.nrm(38,"app-tabs",null,1),e.k0s(),e.j41(40,"pre")(41,"code",19),e.EFF(42,"\nimport { Injectable } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: Cat[] = [];\n\n  findAll(): Cat[] {\n    return this.cats;\n  }\n}\n"),e.k0s()(),e.j41(43,"pre")(44,"code",19),e.EFF(45,"\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CatsService {\n  constructor() {\n    this.cats = [];\n  }\n\n  findAll() {\n    return this.cats;\n  }\n}\n"),e.k0s()()(),e.j41(46,"p"),e.EFF(47,"Ensuite, nous demandons \xe0 Nest d'injecter le fournisseur dans notre classe de contr\xf4leur :"),e.k0s(),e.j41(48,"app-copy-button",17)(49,"span",18),e.EFF(50),e.nI1(51,"extension"),e.nrm(52,"app-tabs",null,2),e.k0s(),e.j41(54,"pre")(55,"code",19),e.EFF(56,"\nimport { Controller, Get } from '@nestjs/common';\nimport { CatsService } from './cats.service';\nimport { Cat } from './interfaces/cat.interface';\n\n@Controller('cats')\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n\n  @Get()\n  async findAll(): Promise<Cat[]> {\n    return this.catsService.findAll();\n  }\n}\n"),e.k0s()(),e.j41(57,"pre")(58,"code",19),e.EFF(59,"\nimport { Controller, Get, Bind, Dependencies } from '@nestjs/common';\nimport { CatsService } from './cats.service';\n\n@Controller('cats')\n@Dependencies(CatsService)\nexport class CatsController {\n  constructor(catsService) {\n    this.catsService = catsService;\n  }\n\n  @Get()\n  async findAll() {\n    return this.catsService.findAll();\n  }\n}\n"),e.k0s()()(),e.j41(60,"p"),e.EFF(61,"Enfin, nous enregistrons le fournisseur aupr\xe8s du conteneur Nest IoC :"),e.k0s(),e.j41(62,"app-copy-button",17)(63,"span",18),e.EFF(64),e.nI1(65,"extension"),e.nrm(66,"app-tabs",null,3),e.k0s(),e.j41(68,"pre")(69,"code",19),e.EFF(70,"\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats/cats.controller';\nimport { CatsService } from './cats/cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(71,"p"),e.EFF(72,"Que se passe-t-il exactement en coulisses pour que cela fonctionne ? Il y a trois \xe9tapes cl\xe9s dans le processus :"),e.k0s(),e.j41(73,"ol")(74,"li"),e.EFF(75,"Dans "),e.j41(76,"code"),e.EFF(77,"cats.service.ts"),e.k0s(),e.EFF(78,", le d\xe9corateur "),e.j41(79,"code"),e.EFF(80,"@Injectable()"),e.k0s(),e.EFF(81," d\xe9clare la classe "),e.j41(82,"code"),e.EFF(83,"CatsService"),e.k0s(),e.EFF(84," comme une classe qui peut \xeatre g\xe9r\xe9e par le conteneur IoC Nest."),e.k0s(),e.j41(85,"li"),e.EFF(86,"Dans "),e.j41(87,"code"),e.EFF(88,"cats.controller.ts"),e.k0s(),e.EFF(89,", "),e.j41(90,"code"),e.EFF(91,"CatsController"),e.k0s(),e.EFF(92," d\xe9clare une d\xe9pendance sur le jeton "),e.j41(93,"code"),e.EFF(94,"CatsService"),e.k0s(),e.EFF(95," avec injection de constructeur :"),e.k0s()(),e.j41(96,"app-copy-button")(97,"pre")(98,"code",19),e.EFF(99,"\n  constructor(private catsService: CatsService)\n"),e.k0s()()(),e.j41(100,"ol",20)(101,"li"),e.EFF(102,"Dans "),e.j41(103,"code"),e.EFF(104,"app.module.ts"),e.k0s(),e.EFF(105,", nous associons le jeton "),e.j41(106,"code"),e.EFF(107,"CatsService"),e.k0s(),e.EFF(108," avec la classe "),e.j41(109,"code"),e.EFF(110,"CatsService"),e.k0s(),e.EFF(111," du fichier "),e.j41(112,"code"),e.EFF(113,"cats.service.ts"),e.k0s(),e.EFF(114,". Nous allons "),e.j41(115,"a",21),e.EFF(116,"voir ci-dessous"),e.k0s(),e.EFF(117," comment cette association (aussi appel\xe9e "),e.j41(118,"em"),e.EFF(119,"enregistrement"),e.k0s(),e.EFF(120,") se produit."),e.k0s()(),e.j41(121,"p"),e.EFF(122,"Quand le conteneur Nest IoC instancie un "),e.j41(123,"code"),e.EFF(124,"CatsController"),e.k0s(),e.EFF(125,", il recherche d'abord les d\xe9pendances. Quand il trouve la d\xe9pendance "),e.j41(126,"code"),e.EFF(127,"CatsService"),e.k0s(),e.EFF(128,", il effectue une recherche sur le jeton "),e.j41(129,"code"),e.EFF(130,"CatsService"),e.k0s(),e.EFF(131,", qui retourne la classe "),e.j41(132,"code"),e.EFF(133,"CatsService"),e.k0s(),e.EFF(134,", selon l'\xe9tape d'enregistrement (#3 ci-dessus). En supposant une port\xe9e "),e.j41(135,"code"),e.EFF(136,"SINGLETON"),e.k0s(),e.EFF(137," (le comportement par d\xe9faut), Nest va alors soit cr\xe9er une instance de "),e.j41(138,"code"),e.EFF(139,"CatsService"),e.k0s(),e.EFF(140,", la mettre en cache, et la retourner, ou si une instance est d\xe9j\xe0 mise en cache, retourner l'instance existante."),e.k0s(),e.j41(141,"p"),e.EFF(142,"*Cette explication est un peu simplifi\xe9e pour illustrer le propos. Un point important que nous avons n\xe9glig\xe9 est que le processus d'analyse du code pour les d\xe9pendances est tr\xe8s sophistiqu\xe9 et se d\xe9roule pendant l'amor\xe7age de l'application. Une caract\xe9ristique cl\xe9 est que l'analyse des d\xe9pendances (ou \"cr\xe9ation du graphe des d\xe9pendances\") est "),e.j41(143,"strong"),e.EFF(144,"transitive"),e.k0s(),e.EFF(145,". Dans l'exemple ci-dessus, si le "),e.j41(146,"code"),e.EFF(147,"CatsService"),e.k0s(),e.EFF(148,' lui-m\xeame avait des d\xe9pendances, celles-ci seraient \xe9galement r\xe9solues. Le graphe de d\xe9pendance garantit que les d\xe9pendances sont r\xe9solues dans le bon ordre - essentiellement "de bas en haut". Ce m\xe9canisme \xe9vite au d\xe9veloppeur d\'avoir \xe0 g\xe9rer des graphes de d\xe9pendances aussi complexes.'),e.k0s(),e.j41(149,"p"),e.nrm(150,"app-banner-courses"),e.k0s(),e.j41(151,"h4",22)(152,"span"),e.EFF(153,"Fournisseurs standards"),e.k0s()(),e.j41(154,"p"),e.EFF(155,"Regardons de plus pr\xe8s le d\xe9corateur "),e.j41(156,"code"),e.EFF(157,"@Module()"),e.k0s(),e.EFF(158,". Dans "),e.j41(159,"code"),e.EFF(160,"app.module"),e.k0s(),e.EFF(161,", nous d\xe9clarons :"),e.k0s(),e.j41(162,"app-copy-button")(163,"pre")(164,"code",19),e.EFF(165,"\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\n"),e.k0s()()(),e.j41(166,"p"),e.EFF(167,"La propri\xe9t\xe9 "),e.j41(168,"code"),e.EFF(169,"providers"),e.k0s(),e.EFF(170," prend une liste de "),e.j41(171,"code"),e.EFF(172,"providers"),e.k0s(),e.EFF(173,". Jusqu'\xe0 pr\xe9sent, nous avons fourni ces fournisseurs via une liste de noms de classes. En fait, la syntaxe "),e.j41(174,"code"),e.EFF(175,"providers : [CatsService]"),e.k0s(),e.EFF(176," est un raccourci pour la syntaxe plus compl\xe8te :"),e.k0s(),e.j41(177,"app-copy-button")(178,"pre")(179,"code",19),e.EFF(180,"\nproviders: [\n  {\n    provide: CatsService,\n    useClass: CatsService,\n  },\n];\n"),e.k0s()()(),e.j41(181,"p"),e.EFF(182,"Maintenant que nous voyons cette construction explicite, nous pouvons comprendre le processus d'enregistrement. Ici, nous associons clairement le jeton "),e.j41(183,"code"),e.EFF(184,"CatsService"),e.k0s(),e.EFF(185," \xe0 la classe "),e.j41(186,"code"),e.EFF(187,"CatsService"),e.k0s(),e.EFF(188,". La notation abr\xe9g\xe9e est simplement une commodit\xe9 pour simplifier le cas d'utilisation le plus courant, o\xf9 le jeton est utilis\xe9 pour requ\xe9rir une instance d'une classe portant le m\xeame nom."),e.k0s(),e.j41(189,"h4",23)(190,"span"),e.EFF(191,"Fournisseurs personnalis\xe9s"),e.k0s()(),e.j41(192,"p"),e.EFF(193,"Que se passe-t-il lorsque vos besoins vont au-del\xe0 de ce que proposent les "),e.j41(194,"em"),e.EFF(195,"fournisseurs standard"),e.k0s(),e.EFF(196," ? Voici quelques exemples :"),e.k0s(),e.j41(197,"ul")(198,"li"),e.EFF(199,"Vous souhaitez cr\xe9er une instance personnalis\xe9e au lieu de demander \xe0 Nest d'instancier (ou de renvoyer une instance mise en cache) une classe."),e.k0s(),e.j41(200,"li"),e.EFF(201,"Vous souhaitez r\xe9utiliser une classe existante dans une deuxi\xe8me d\xe9pendance"),e.k0s(),e.j41(202,"li"),e.EFF(203,"Vous souhaitez remplacer une classe par une version factice \xe0 des fins de test."),e.k0s()(),e.j41(204,"p"),e.EFF(205,"Nest vous permet de d\xe9finir des fournisseurs personnalis\xe9s pour traiter ces cas. Il existe plusieurs fa\xe7ons de d\xe9finir des fournisseurs personnalis\xe9s. Passons-les en revue."),e.k0s(),e.j41(206,"blockquote",24)(207,"strong"),e.EFF(208,"Astuce"),e.k0s(),e.EFF(209," Si vous avez des probl\xe8mes avec la r\xe9solution des d\xe9pendances, vous pouvez d\xe9finir la variable d'environnement "),e.j41(210,"code"),e.EFF(211,"NEST_DEBUG"),e.k0s(),e.EFF(212," et obtenir des logs suppl\xe9mentaires de r\xe9solution des d\xe9pendances pendant le d\xe9marrage.\n"),e.k0s(),e.j41(213,"h4",25)(214,"span"),e.EFF(215,"Fournisseurs de valeur : "),e.j41(216,"code"),e.EFF(217,"useValue"),e.k0s()()(),e.j41(218,"p"),e.EFF(219,"La syntaxe "),e.j41(220,"code"),e.EFF(221,"useValue"),e.k0s(),e.EFF(222," est utile pour injecter une valeur constante, mettre une biblioth\xe8que externe dans le conteneur Nest, ou remplacer une impl\xe9mentation r\xe9elle par un objet factice. Supposons que vous souhaitiez forcer Nest \xe0 utiliser un simulacre de "),e.j41(223,"code"),e.EFF(224,"CatsService"),e.k0s(),e.EFF(225," \xe0 des fins de test."),e.k0s(),e.j41(226,"app-copy-button")(227,"pre")(228,"code",19),e.EFF(229,"\nimport { CatsService } from './cats.service';\n\nconst mockCatsService = {\n  /* impl\xe9mentation factice\n  ...\n  */\n};\n\n@Module({\n  imports: [CatsModule],\n  providers: [\n    {\n      provide: CatsService,\n      useValue: mockCatsService,\n    },\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(230,"p"),e.EFF(231,"Dans cet exemple, le jeton "),e.j41(232,"code"),e.EFF(233,"CatsService"),e.k0s(),e.EFF(234," r\xe9soudra l'objet factice "),e.j41(235,"code"),e.EFF(236,"mockCatsService"),e.k0s(),e.EFF(237,". "),e.j41(238,"code"),e.EFF(239,"useValue"),e.k0s(),e.EFF(240," requiert une valeur - dans ce cas un objet litt\xe9ral qui a la m\xeame interface que la classe "),e.j41(241,"code"),e.EFF(242,"CatsService"),e.k0s(),e.EFF(243," qu'il remplace. Gr\xe2ce au "),e.j41(244,"a",26),e.EFF(245,"typage structurel"),e.k0s(),e.EFF(246," de TypeScript , vous pouvez utiliser n'importe quel objet ayant une interface compatible, y compris un objet litt\xe9ral ou une instance de classe instanci\xe9e avec "),e.j41(247,"code"),e.EFF(248,"new"),e.k0s(),e.EFF(249,"."),e.k0s(),e.j41(250,"h4",27)(251,"span"),e.EFF(252,"Jetons de fournisseur non bas\xe9s sur une classe"),e.k0s()(),e.j41(253,"p"),e.EFF(254,"Jusqu'\xe0 pr\xe9sent, nous avons utilis\xe9 des noms de classe comme jetons de fournisseur (la valeur de la propri\xe9t\xe9 "),e.j41(255,"code"),e.EFF(256,"provide"),e.k0s(),e.EFF(257," d'un fournisseur list\xe9 dans le tableau "),e.j41(258,"code"),e.EFF(259,"providers"),e.k0s(),e.EFF(260,"). Ceci correspond au mod\xe8le standard utilis\xe9 avec l'"),e.j41(261,"a",13),e.EFF(262,"injection bas\xe9e sur le constructeur"),e.k0s(),e.EFF(263,", o\xf9 le jeton est \xe9galement un nom de classe. ( Voir "),e.j41(264,"a",28),e.EFF(265,"Principes de base de l'ID"),e.k0s(),e.EFF(266," pour un rappel sur les tokens si ce concept n'est pas tout \xe0 fait clair). Parfois, nous pouvons souhaiter avoir la possibilit\xe9 d'utiliser des cha\xeenes ou des symboles comme jeton ID. Par exemple :"),e.k0s(),e.j41(267,"app-copy-button")(268,"pre")(269,"code",19),e.EFF(270,"\nimport { connection } from './connection';\n\n@Module({\n  providers: [\n    {\n      provide: 'CONNECTION',\n      useValue: connection,\n    },\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(271,"p"),e.EFF(272,"Dans cet exemple, nous associons un jeton \xe0 valeur de cha\xeene ("),e.j41(273,"code"),e.EFF(274,"'CONNECTION'"),e.k0s(),e.EFF(275,") \xe0 un objet `connection' pr\xe9existant que nous avons import\xe9 d'un fichier externe."),e.k0s(),e.j41(276,"blockquote",29)(277,"strong"),e.EFF(278,"Remarque"),e.k0s(),e.EFF(279," Outre l'utilisation de cha\xeenes comme valeurs de jeton, vous pouvez \xe9galement utiliser des "),e.j41(280,"a",30),e.EFF(281,"symboles JavaScript"),e.k0s(),e.EFF(282," ou des "),e.j41(283,"a",31),e.EFF(284,"enums TypeScript"),e.k0s(),e.EFF(285,".\n"),e.k0s(),e.j41(286,"p"),e.EFF(287,"Nous avons vu pr\xe9c\xe9demment comment injecter un fournisseur en utilisant le mod\xe8le standard d'"),e.j41(288,"a",13),e.EFF(289,"injection bas\xe9e sur le constructeur"),e.k0s(),e.EFF(290,". Ce sch\xe9ma "),e.j41(291,"strong"),e.EFF(292,"exige"),e.k0s(),e.EFF(293," que la d\xe9pendance soit d\xe9clar\xe9e avec un nom de classe. Le fournisseur personnalis\xe9 "),e.j41(294,"code"),e.EFF(295,"'CONNECTION'"),e.k0s(),e.EFF(296," utilise une cha\xeene de caract\xe8res. Voyons comment injecter un tel fournisseur. Pour ce faire, nous utilisons le d\xe9corateur "),e.j41(297,"code"),e.EFF(298,"@Inject()"),e.k0s(),e.EFF(299,". Ce d\xe9corateur prend un seul argument - le jeton."),e.k0s(),e.j41(300,"app-copy-button",17)(301,"span",18),e.nrm(302,"app-tabs",null,4),e.k0s(),e.j41(304,"pre")(305,"code",19),e.EFF(306,"\n@Injectable()\nexport class CatsRepository {\n  constructor(@Inject('CONNECTION') connection: Connection) {}\n}\n"),e.k0s()(),e.j41(307,"pre")(308,"code",19),e.EFF(309,"\n@Injectable()\n@Dependencies('CONNECTION')\nexport class CatsRepository {\n  constructor(connection) {}\n}\n"),e.k0s()()(),e.j41(310,"blockquote",24)(311,"strong"),e.EFF(312,"Astuce"),e.k0s(),e.EFF(313," Le d\xe9corateur "),e.j41(314,"code"),e.EFF(315,"@Inject()"),e.k0s(),e.EFF(316," est import\xe9 du package "),e.j41(317,"code"),e.EFF(318,"@nestjs/common"),e.k0s(),e.EFF(319,".\n"),e.k0s(),e.j41(320,"p"),e.EFF(321,"Bien que nous utilisions directement la cha\xeene "),e.j41(322,"code"),e.EFF(323,"'CONNECTION'"),e.k0s(),e.EFF(324," dans les exemples ci-dessus \xe0 des fins d'illustration, pour une organisation propre du code, il est pr\xe9f\xe9rable de d\xe9finir les tokens dans un fichier s\xe9par\xe9, tel que "),e.j41(325,"code"),e.EFF(326,"constants.ts"),e.k0s(),e.EFF(327,". Traitez-les comme vous le feriez avec des symboles ou des enums qui sont d\xe9finis dans leur propre fichier et import\xe9s l\xe0 o\xf9 c'est n\xe9cessaire."),e.k0s(),e.j41(328,"h4",32)(329,"span"),e.EFF(330,"Fournisseurs de classe : "),e.j41(331,"code"),e.EFF(332,"useClass"),e.k0s()()(),e.j41(333,"p"),e.EFF(334,"La syntaxe "),e.j41(335,"code"),e.EFF(336,"useClass"),e.k0s(),e.EFF(337," vous permet de d\xe9terminer dynamiquement une classe \xe0 laquelle un jeton doit \xeatre r\xe9solu. Par exemple, supposons que nous ayons une classe abstraite (ou par d\xe9faut) "),e.j41(338,"code"),e.EFF(339,"ConfigService"),e.k0s(),e.EFF(340,". En fonction de l'environnement actuel, nous voulons que Nest fournisse une impl\xe9mentation diff\xe9rente du service de configuration. Le code suivant impl\xe9mente une telle strat\xe9gie."),e.k0s(),e.j41(341,"app-copy-button")(342,"pre")(343,"code",19),e.EFF(344,"\nconst configServiceProvider = {\n  provide: ConfigService,\n  useClass:\n    process.env.NODE_ENV === 'development'\n      ? DevelopmentConfigService\n      : ProductionConfigService,\n};\n\n@Module({\n  providers: [configServiceProvider],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(345,"p"),e.EFF(346,"Examinons quelques d\xe9tails de cet exemple de code. Vous remarquerez que nous d\xe9finissons "),e.j41(347,"code"),e.EFF(348,"configServiceProvider"),e.k0s(),e.EFF(349," avec un objet litt\xe9ral d'abord, puis nous le passons dans la propri\xe9t\xe9 "),e.j41(350,"code"),e.EFF(351,"providers"),e.k0s(),e.EFF(352," du d\xe9corateur de module. C'est juste un peu d'organisation de code, mais c'est fonctionnellement \xe9quivalent aux exemples que nous avons utilis\xe9s jusqu'\xe0 pr\xe9sent dans ce chapitre."),e.k0s(),e.j41(353,"p"),e.EFF(354,"De plus, nous avons utilis\xe9 le nom de la classe "),e.j41(355,"code"),e.EFF(356,"ConfigService"),e.k0s(),e.EFF(357," comme token. Pour toute classe qui d\xe9pend de "),e.j41(358,"code"),e.EFF(359,"ConfigService"),e.k0s(),e.EFF(360,", Nest injectera une instance de la classe fournie ("),e.j41(361,"code"),e.EFF(362,"DevelopmentConfigService"),e.k0s(),e.EFF(363," ou "),e.j41(364,"code"),e.EFF(365,"ProductionConfigService"),e.k0s(),e.EFF(366,") en rempla\xe7ant toute impl\xe9mentation par d\xe9faut qui aurait pu \xeatre d\xe9clar\xe9e ailleurs (par exemple, un "),e.j41(367,"code"),e.EFF(368,"ConfigService"),e.k0s(),e.EFF(369," d\xe9clar\xe9 avec un d\xe9corateur "),e.j41(370,"code"),e.EFF(371,"@Injectable()"),e.k0s(),e.EFF(372,")."),e.k0s(),e.j41(373,"h4",33)(374,"span"),e.EFF(375,"Fournisseurs de factory : "),e.j41(376,"code"),e.EFF(377,"useFactory"),e.k0s()()(),e.j41(378,"p"),e.EFF(379,"La syntaxe "),e.j41(380,"code"),e.EFF(381,"useFactory"),e.k0s(),e.EFF(382," permet de cr\xe9er des fournisseurs "),e.j41(383,"strong"),e.EFF(384,"dynamiquement"),e.k0s(),e.EFF(385,". Le fournisseur r\xe9el sera fourni par la valeur renvoy\xe9e par une fonction \"factory\". La fonction factory peut \xeatre aussi simple ou complexe que n\xe9cessaire. Une fabrique simple ne peut d\xe9pendre d'aucun autre fournisseur. Une fabrique plus complexe peut elle-m\xeame injecter d'autres fournisseurs dont elle a besoin pour calculer son r\xe9sultat. Dans ce dernier cas, la syntaxe du fournisseur d'usine dispose d'une paire de m\xe9canismes connexes :"),e.k0s(),e.j41(386,"ol")(387,"li"),e.EFF(388,"La fonction factory peut accepter des arguments (facultatifs)."),e.k0s(),e.j41(389,"li"),e.EFF(390,"La propri\xe9t\xe9 (optionnelle) "),e.j41(391,"code"),e.EFF(392,"inject"),e.k0s(),e.EFF(393," accepte un tableau de fournisseurs que Nest va r\xe9soudre et passer comme arguments \xe0 la fonction factory pendant le processus d'instanciation. De plus, ces fournisseurs peuvent \xeatre marqu\xe9s comme optionnels. Les deux listes doivent \xeatre corr\xe9l\xe9es : Nest passera les instances de la liste "),e.j41(394,"code"),e.EFF(395,"inject"),e.k0s(),e.EFF(396," comme arguments \xe0 la fonction factory dans le m\xeame ordre. L'exemple ci-dessous le d\xe9montre."),e.k0s()(),e.j41(397,"app-copy-button",17)(398,"span",18),e.nrm(399,"app-tabs",null,5),e.k0s(),e.j41(401,"pre")(402,"code",19),e.EFF(403,"\nconst connectionProvider = {\n  provide: 'CONNECTION',\n  useFactory: (optionsProvider: MyOptionsProvider, optionalProvider?: string) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [MyOptionsProvider, { token: 'SomeOptionalProvider', optional: true }],\n  //       \\______________/             \\__________________/\n  //        Ce fournisseur           Le fournisseur avec ce jeton\n  //       est obligatoire         peut \xeatre r\xe9solu en `undefined`.\n};\n\n@Module({\n  providers: [\n    connectionProvider,\n    MyOptionsProvider, // fournisseur bas\xe9 sur la classe\n    // { provide: 'SomeOptionalProvider', useValue: 'anything' },\n  ],\n})\nexport class AppModule {}\n"),e.k0s()(),e.j41(404,"pre")(405,"code",19),e.EFF(406,"\nconst connectionProvider = {\n  provide: 'CONNECTION',\n  useFactory: (optionsProvider, optionalProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider, { token: 'SomeOptionalProvider', optional: true }],\n  //       \\_____________/            \\__________________/\n  //        Ce fournisseur         Le fournisseur avec ce jeton\n  //       est obligatoire        peut \xeatre r\xe9solu en `undefined`.\n};\n\n@Module({\n  providers: [\n    connectionProvider,\n    OptionsProvider,\n    // { provide: 'SomeOptionalProvider', useValue: 'anything' },\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(407,"h4",34)(408,"span"),e.EFF(409,"Fournisseurs d'alias : "),e.j41(410,"code"),e.EFF(411,"useExisting"),e.k0s()()(),e.j41(412,"p"),e.EFF(413,"La syntaxe "),e.j41(414,"code"),e.EFF(415,"useExisting"),e.k0s(),e.EFF(416," vous permet de cr\xe9er des alias pour des fournisseurs existants. Cela cr\xe9e deux fa\xe7ons d'acc\xe9der au m\xeame fournisseur. Dans l'exemple ci-dessous, le jeton (bas\xe9 sur une cha\xeene) "),e.j41(417,"code"),e.EFF(418,"'AliasedLoggerService'"),e.k0s(),e.EFF(419," est un alias pour le jeton (bas\xe9 sur une classe) "),e.j41(420,"code"),e.EFF(421,"LoggerService"),e.k0s(),e.EFF(422,". Supposons que nous ayons deux d\xe9pendances diff\xe9rentes, une pour "),e.j41(423,"code"),e.EFF(424,"'AliasedLoggerService'' et une pour "),e.k0s(),e.EFF(425,"LoggerService"),e.j41(426,"code"),e.EFF(427,". Si les deux d\xe9pendances sont sp\xe9cifi\xe9es avec la port\xe9e "),e.k0s(),e.EFF(428,"SINGLETON`, elles seront toutes deux r\xe9solues dans la m\xeame instance."),e.k0s(),e.j41(429,"app-copy-button")(430,"pre")(431,"code",19),e.EFF(432,"\n@Injectable()\nclass LoggerService {\n  /* implementation details */\n}\n\nconst loggerAliasProvider = {\n  provide: 'AliasedLoggerService',\n  useExisting: LoggerService,\n};\n\n@Module({\n  providers: [LoggerService, loggerAliasProvider],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(433,"h4",35)(434,"span"),e.EFF(435,"Fournisseurs non bas\xe9s sur les services"),e.k0s()(),e.j41(436,"p"),e.EFF(437,"Si les fournisseurs proposent souvent des services, ils ne sont pas limit\xe9s \xe0 cet usage. Un fournisseur peut fournir "),e.j41(438,"strong"),e.EFF(439,"n'importe quelle"),e.k0s(),e.EFF(440," valeur. Par exemple, un fournisseur peut fournir un tableau d'objets de configuration bas\xe9s sur l'environnement actuel, comme indiqu\xe9 ci-dessous :"),e.k0s(),e.j41(441,"app-copy-button")(442,"pre")(443,"code",19),e.EFF(444,"\nconst configFactory = {\n  provide: 'CONFIG',\n  useFactory: () => {\n    return process.env.NODE_ENV === 'development' ? devConfig : prodConfig;\n  },\n};\n\n@Module({\n  providers: [configFactory],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(445,"h4",36)(446,"span"),e.EFF(447,"Exporter un fournisseur personnalis\xe9"),e.k0s()(),e.j41(448,"p"),e.EFF(449,"Comme tout fournisseur, un fournisseur personnalis\xe9 est limit\xe9 au module qui le d\xe9clare. Pour qu'il soit visible par d'autres modules, il doit \xeatre export\xe9. Pour exporter un fournisseur personnalis\xe9, nous pouvons utiliser son jeton ou l'objet complet du fournisseur."),e.k0s(),e.j41(450,"p"),e.EFF(451,"L'exemple suivant montre l'exportation \xe0 l'aide du jeton :"),e.k0s(),e.j41(452,"app-copy-button",17)(453,"span",18),e.nrm(454,"app-tabs",null,6),e.k0s(),e.j41(456,"pre")(457,"code",19),e.EFF(458,"\nconst connectionFactory = {\n  provide: 'CONNECTION',\n  useFactory: (optionsProvider: OptionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: ['CONNECTION'],\n})\nexport class AppModule {}\n"),e.k0s()(),e.j41(459,"pre")(460,"code",19),e.EFF(461,"\nconst connectionFactory = {\n  provide: 'CONNECTION',\n  useFactory: (optionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: ['CONNECTION'],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(462,"p"),e.EFF(463,"Il est \xe9galement possible d'exporter avec l'objet complet du fournisseur :"),e.k0s(),e.j41(464,"app-copy-button",17)(465,"span",18),e.nrm(466,"app-tabs",null,7),e.k0s(),e.j41(468,"pre")(469,"code",19),e.EFF(470,"\nconst connectionFactory = {\n  provide: 'CONNECTION',\n  useFactory: (optionsProvider: OptionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: [connectionFactory],\n})\nexport class AppModule {}\n"),e.k0s()(),e.j41(471,"pre")(472,"code",19),e.EFF(473,"\nconst connectionFactory = {\n  provide: 'CONNECTION',\n  useFactory: (optionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: [connectionFactory],\n})\nexport class AppModule {}\n"),e.k0s()()()()),2&t){const u=e.sdS(39),r=e.sdS(53),a=e.sdS(67),c=e.sdS(303),j=e.sdS(400),F=e.sdS(455),m=e.sdS(467);e.R7$(36),e.SpI(" ",e.i5U(37,27,"cats.service",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(7),e.SpI(" ",e.i5U(51,30,"cats.controller",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(7),e.SpI(" ",e.i5U(65,33,"app.module",a.isJsActive),"\n"),e.R7$(240),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(94),e.AVh("hide",j.isJsActive),e.R7$(3),e.AVh("hide",!j.isJsActive),e.R7$(52),e.AVh("hide",F.isJsActive),e.R7$(3),e.AVh("hide",!F.isJsActive),e.R7$(9),e.AVh("hide",m.isJsActive),e.R7$(3),e.AVh("hide",!m.isJsActive)}},dependencies:[f.O,E.a,v.Q,p.z,d.Wk,k.M],encapsulation:2,changeDetection:0})}return s})();var A=i(7077);let I=(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-dynamic-modules"]],features:[e.Vt3],decls:906,vars:28,consts:[["contentReference",""],["app2673a84f6fbf2594da1527e57f65b9e6cc9c3605",""],["app6de4dca0b698df12fe8c271453936b0d16104326",""],["app38f6f3c4dab646081783aea1c5e8e57e4a80f9bd",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/dynamic-modules.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","modules-dynamiques"],["routerLink","/modules"],["href","/modules#modules-dynamiques"],["appAnchor","","id","introduction"],["routerLink","/providers"],["routerLink","/controllers"],[1,"language-typescript"],["routerLink","/fundamentals/custom-providers"],["appAnchor","","id","cas-dutilisation-dun-module-dynamique"],["appAnchor","","id","exemple-de-module-de-configuration"],["href","/techniques/configuration#service"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/tree/master/sample/25-dynamic-modules"],[1,"info"],["appAnchor","","id","configuration-du-module"],["href","/fundamentals/custom-providers#fournisseurs-non-bas%C3%A9s-sur-les-services"],["href","/fundamentals/custom-providers#jetons-de-fournisseur-non-bas%C3%A9s-sur-une-classe"],["appAnchor","","id","exemple"],["appAnchor","","id","lignes-directrices-pour-la-communaut\xe9"],["appAnchor","","id","constructeur-de-modules-configurables"],[1,"with-heading"],[1,"filename"],["appAnchor","","id","cl\xe9-de-m\xe9thode-personnalis\xe9e"],["appAnchor","","id","classe-usine-doptions-personnalis\xe9es"],["appAnchor","","id","options-suppl\xe9mentaires"],["appAnchor","","id","\xe9tendre-les-m\xe9thodes-g\xe9n\xe9r\xe9es-automatiquement"]],template:function(t,o){if(1&t&&(e.j41(0,"div",4,0)(2,"div",5)(3,"a",6),e.nrm(4,"i",7),e.k0s()(),e.j41(5,"h3",8),e.EFF(6,"Modules dynamiques"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Le "),e.j41(9,"a",9),e.EFF(10,"chapitre Modules"),e.k0s(),e.EFF(11," couvre les bases des modules Nest et comprend une br\xe8ve introduction aux "),e.j41(12,"a",10),e.EFF(13,"modules dynamiques"),e.k0s(),e.EFF(14,". Ce chapitre d\xe9veloppe le sujet des modules dynamiques. \xc0 l'issue de ce chapitre, vous devriez avoir une bonne compr\xe9hension de ce que sont les modules dynamiques, ainsi que de la mani\xe8re et du moment de les utiliser."),e.k0s(),e.j41(15,"h4",11)(16,"span"),e.EFF(17,"Introduction"),e.k0s()(),e.j41(18,"p"),e.EFF(19,"La plupart des exemples de code d'application pr\xe9sent\xe9s dans la section "),e.j41(20,"strong"),e.EFF(21,"Aper\xe7u"),e.k0s(),e.EFF(22," de la documentation utilisent des modules r\xe9guliers ou statiques. Les modules d\xe9finissent des groupes de composants tels que les "),e.j41(23,"a",12),e.EFF(24,"fournisseurs"),e.k0s(),e.EFF(25," et les "),e.j41(26,"a",13),e.EFF(27,"contr\xf4leurs"),e.k0s(),e.EFF(28," qui s'int\xe8grent en tant que partie modulaire d'une application globale. Ils fournissent un contexte d'ex\xe9cution, ou champ d'application, pour ces composants. Par exemple, les fournisseurs d\xe9finis dans un module sont visibles par les autres membres du module sans qu'il soit n\xe9cessaire de les exporter. Lorsqu'un fournisseur doit \xeatre visible en dehors d'un module, il est d'abord export\xe9 de son module h\xf4te, puis import\xe9 dans son module consommateur."),e.k0s(),e.j41(29,"p"),e.EFF(30,"Prenons un exemple familier."),e.k0s(),e.j41(31,"p"),e.EFF(32,"Tout d'abord, nous allons d\xe9finir un "),e.j41(33,"code"),e.EFF(34,"UsersModule"),e.k0s(),e.EFF(35," pour fournir et exporter un "),e.j41(36,"code"),e.EFF(37,"UsersService"),e.k0s(),e.EFF(38,". "),e.j41(39,"code"),e.EFF(40,"UsersModule"),e.k0s(),e.EFF(41," est le module "),e.j41(42,"strong"),e.EFF(43,"h\xf4te"),e.k0s(),e.EFF(44," de "),e.j41(45,"code"),e.EFF(46,"UsersService"),e.k0s(),e.EFF(47,"."),e.k0s(),e.j41(48,"app-copy-button")(49,"pre")(50,"code",14),e.EFF(51,"\nimport { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n"),e.k0s()()(),e.j41(52,"p"),e.EFF(53,"Ensuite, nous allons d\xe9finir un "),e.j41(54,"code"),e.EFF(55,"AuthModule"),e.k0s(),e.EFF(56,", qui importe "),e.j41(57,"code"),e.EFF(58,"UsersModule"),e.k0s(),e.EFF(59,", rendant les fournisseurs export\xe9s par "),e.j41(60,"code"),e.EFF(61,"UsersModule"),e.k0s(),e.EFF(62," disponibles dans "),e.j41(63,"code"),e.EFF(64,"AuthModule"),e.k0s(),e.EFF(65," :"),e.k0s(),e.j41(66,"app-copy-button")(67,"pre")(68,"code",14),e.EFF(69,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n"),e.k0s()()(),e.j41(70,"p"),e.EFF(71,"Ces constructions nous permettent d'injecter "),e.j41(72,"code"),e.EFF(73,"UsersService"),e.k0s(),e.EFF(74," dans, par exemple, le "),e.j41(75,"code"),e.EFF(76,"AuthService"),e.k0s(),e.EFF(77," qui est h\xe9berg\xe9 dans "),e.j41(78,"code"),e.EFF(79,"AuthModule"),e.k0s(),e.EFF(80," :"),e.k0s(),e.j41(81,"app-copy-button")(82,"pre")(83,"code",14),e.EFF(84,"\nimport { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private usersService: UsersService) {}\n  /*\n    Impl\xe9mentation qui utilise this.usersService\n  */\n}\n"),e.k0s()()(),e.j41(85,"p"),e.EFF(86,"C'est ce que nous appellerons la liaison "),e.j41(87,"strong"),e.EFF(88,"statique"),e.k0s(),e.EFF(89," des modules. Toutes les informations dont Nest a besoin pour relier les modules entre eux ont d\xe9j\xe0 \xe9t\xe9 d\xe9clar\xe9es dans les modules h\xf4te et consommateur. D\xe9cortiquons ce qui se passe durant ce processus. Nest rend "),e.j41(90,"code"),e.EFF(91,"UsersService"),e.k0s(),e.EFF(92," disponible dans "),e.j41(93,"code"),e.EFF(94,"AuthModule"),e.k0s(),e.EFF(95," par :"),e.k0s(),e.j41(96,"ol")(97,"li"),e.EFF(98,"L'instanciation de "),e.j41(99,"code"),e.EFF(100,"UsersModule"),e.k0s(),e.EFF(101,", y compris l'importation transitive d'autres modules que "),e.j41(102,"code"),e.EFF(103,"UsersModule"),e.k0s(),e.EFF(104," consomme lui-m\xeame, et la r\xe9solution transitive de toutes les d\xe9pendances (voir les "),e.j41(105,"a",15),e.EFF(106,"fournisseurs personnalis\xe9s"),e.k0s(),e.EFF(107,")."),e.k0s(),e.j41(108,"li"),e.EFF(109,"L'instanciation de "),e.j41(110,"code"),e.EFF(111,"AuthModule"),e.k0s(),e.EFF(112,", et la mise \xe0 disposition des fournisseurs export\xe9s de "),e.j41(113,"code"),e.EFF(114,"UsersModule"),e.k0s(),e.EFF(115," aux composants de "),e.j41(116,"code"),e.EFF(117,"AuthModule"),e.k0s(),e.EFF(118," (comme s'ils avaient \xe9t\xe9 d\xe9clar\xe9s dans "),e.j41(119,"code"),e.EFF(120,"AuthModule"),e.k0s(),e.EFF(121,")."),e.k0s(),e.j41(122,"li"),e.EFF(123,"L'injection d'une instance de "),e.j41(124,"code"),e.EFF(125,"UsersService"),e.k0s(),e.EFF(126," dans "),e.j41(127,"code"),e.EFF(128,"AuthService"),e.k0s(),e.EFF(129,"."),e.k0s()(),e.j41(130,"h4",16)(131,"span"),e.EFF(132,"Cas d'utilisation d'un module dynamique"),e.k0s()(),e.j41(133,"p"),e.EFF(134,"Avec la liaison statique des modules, le module consommateur n'a pas la possibilit\xe9 d'influer sur la configuration des fournisseurs du module h\xf4te. En quoi cela est-il important ? Prenons le cas d'un module \xe0 usage g\xe9n\xe9ral qui doit se comporter diff\xe9remment selon les cas d'utilisation. Ce cas est analogue au concept de \"plugin\" dans de nombreux syst\xe8mes, o\xf9 une fonction g\xe9n\xe9rique n\xe9cessite une certaine configuration avant de pouvoir \xeatre utilis\xe9e par un consommateur."),e.k0s(),e.j41(135,"p"),e.EFF(136,"Un bon exemple avec Nest est un "),e.j41(137,"strong"),e.EFF(138,"module de configuration"),e.k0s(),e.EFF(139,". De nombreuses applications trouvent utile d'externaliser les d\xe9tails de la configuration en utilisant un module de configuration. Cela facilite la modification dynamique des param\xe8tres de l'application dans diff\xe9rents d\xe9ploiements : par exemple, une base de donn\xe9es de d\xe9veloppement pour les d\xe9veloppeurs, une base de donn\xe9es de mise en sc\xe8ne pour l'environnement de mise en sc\xe8ne/de test, etc. En d\xe9l\xe9guant la gestion des param\xe8tres de configuration \xe0 un module de configuration, le code source de l'application reste ind\xe9pendant des param\xe8tres de configuration."),e.k0s(),e.j41(140,"p"),e.EFF(141,"Le probl\xe8me est que le module de configuration lui-m\xeame, puisqu'il est g\xe9n\xe9rique (semblable \xe0 un \"plugin\"), doit \xeatre personnalis\xe9 par le module qui le consomme. C'est l\xe0 que les "),e.j41(142,"em"),e.EFF(143,"modules dynamiques"),e.k0s(),e.EFF(144," entrent en jeu. En utilisant les caract\xe9ristiques des modules dynamiques, nous pouvons rendre notre module de configuration "),e.j41(145,"strong"),e.EFF(146,"dynamique"),e.k0s(),e.EFF(147," afin que le module consommateur puisse utiliser une API pour contr\xf4ler la fa\xe7on dont le module de configuration est personnalis\xe9 au moment o\xf9 il est import\xe9."),e.k0s(),e.j41(148,"p"),e.EFF(149,"En d'autres termes, les modules dynamiques fournissent une API permettant d'importer un module dans un autre et de personnaliser les propri\xe9t\xe9s et le comportement de ce module lorsqu'il est import\xe9, contrairement aux liaisons statiques que nous avons vues jusqu'\xe0 pr\xe9sent."),e.k0s(),e.j41(150,"p"),e.nrm(151,"app-banner-devtools"),e.k0s(),e.j41(152,"h4",17)(153,"span"),e.EFF(154,"Exemple de module de configuration"),e.k0s()(),e.j41(155,"p"),e.EFF(156,"Nous utiliserons la version de base du code d'exemple du "),e.j41(157,"a",18),e.EFF(158,"chapitre sur la configuration"),e.k0s(),e.EFF(159," pour cette section. La version compl\xe9t\xe9e \xe0 la fin de ce chapitre est disponible sous la forme d'un "),e.j41(160,"a",19),e.EFF(161,"exemple ici"),e.k0s(),e.EFF(162,"."),e.k0s(),e.j41(163,"p"),e.EFF(164,"Notre exigence est de faire en sorte que "),e.j41(165,"code"),e.EFF(166,"ConfigModule"),e.k0s(),e.EFF(167," accepte un objet "),e.j41(168,"code"),e.EFF(169,"options"),e.k0s(),e.EFF(170," pour le personnaliser. Voici la fonctionnalit\xe9 que nous voulons supporter. L'exemple de base code en dur l'emplacement du fichier "),e.j41(171,"code"),e.EFF(172,".env"),e.k0s(),e.EFF(173," dans le dossier racine du projet. Supposons que nous voulions rendre cela configurable, de sorte que vous puissiez g\xe9rer vos fichiers "),e.j41(174,"code"),e.EFF(175,".env"),e.k0s(),e.EFF(176," dans n'importe quel dossier de votre choix. Par exemple, imaginez que vous vouliez stocker vos diff\xe9rents fichiers "),e.j41(177,"code"),e.EFF(178,".env"),e.k0s(),e.EFF(179," dans un dossier sous la racine du projet appel\xe9 "),e.j41(180,"code"),e.EFF(181,"config"),e.k0s(),e.EFF(182," (c'est-\xe0-dire un dossier fr\xe8re de "),e.j41(183,"code"),e.EFF(184,"src"),e.k0s(),e.EFF(185,"). Vous aimeriez pouvoir choisir des dossiers diff\xe9rents lorsque vous utilisez le module "),e.j41(186,"code"),e.EFF(187,"ConfigModule"),e.k0s(),e.EFF(188," dans diff\xe9rents projets."),e.k0s(),e.j41(189,"p"),e.EFF(190,"Les modules dynamiques nous donnent la possibilit\xe9 de passer des param\xe8tres au module import\xe9 afin de modifier son comportement. Voyons comment cela fonctionne. Il est utile de partir de l'objectif final, c'est \xe0 dire de la fa\xe7on dont cela peut se pr\xe9senter du point de vue du module consommateur, et de travailler ensuite en sens inverse. Tout d'abord, revoyons rapidement l'exemple de l'importation "),e.j41(191,"em"),e.EFF(192,"statique"),e.k0s(),e.EFF(193," du "),e.j41(194,"code"),e.EFF(195,"ConfigModule"),e.k0s(),e.EFF(196," (c'est \xe0 dire une approche qui n'a aucune capacit\xe9 \xe0 influencer le comportement du module import\xe9). Portez une attention particuli\xe8re au tableau "),e.j41(197,"code"),e.EFF(198,"imports"),e.k0s(),e.EFF(199," dans le d\xe9corateur "),e.j41(200,"code"),e.EFF(201,"@Module()"),e.k0s(),e.EFF(202," :"),e.k0s(),e.j41(203,"app-copy-button")(204,"pre")(205,"code",14),e.EFF(206,"\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from './config/config.module';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(207,"p"),e.EFF(208,"Consid\xe9rons ce \xe0 quoi pourrait ressembler un import de "),e.j41(209,"em"),e.EFF(210,"module dynamique"),e.k0s(),e.EFF(211,", o\xf9 nous passons un objet de configuration. Comparez la diff\xe9rence dans le tableau "),e.j41(212,"code"),e.EFF(213,"imports"),e.k0s(),e.EFF(214," entre ces deux exemples :"),e.k0s(),e.j41(215,"app-copy-button")(216,"pre")(217,"code",14),e.EFF(218,"\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from './config/config.module';\n\n@Module({\n  imports: [ConfigModule.register({ folder: './config' })],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(219,"p"),e.EFF(220,"Voyons ce qui se passe dans l'exemple dynamique ci-dessus. Quelles-en sont les parties mobiles ?"),e.k0s(),e.j41(221,"ol")(222,"li")(223,"code"),e.EFF(224,"ConfigModule"),e.k0s(),e.EFF(225," est une classe normale, nous pouvons donc en d\xe9duire qu'elle doit avoir une "),e.j41(226,"strong"),e.EFF(227,"m\xe9thode statique"),e.k0s(),e.EFF(228," appel\xe9e "),e.j41(229,"code"),e.EFF(230,"register()"),e.k0s(),e.EFF(231,". Nous savons qu'elle est statique parce que nous l'appelons sur la classe "),e.j41(232,"code"),e.EFF(233,"ConfigModule"),e.k0s(),e.EFF(234,", et non sur une "),e.j41(235,"strong"),e.EFF(236,"instance"),e.k0s(),e.EFF(237," de la classe. Note : cette m\xe9thode, que nous allons cr\xe9er bient\xf4t, peut avoir n'importe quel nom arbitraire, mais par convention nous devrions l'appeler soit "),e.j41(238,"code"),e.EFF(239,"forRoot()"),e.k0s(),e.EFF(240," soit "),e.j41(241,"code"),e.EFF(242,"register()"),e.k0s(),e.EFF(243,"."),e.k0s(),e.j41(244,"li"),e.EFF(245,"La m\xe9thode "),e.j41(246,"code"),e.EFF(247,"register()"),e.k0s(),e.EFF(248," est d\xe9finie par nous, donc nous pouvons accepter n'importe quel argument d'entr\xe9e. Dans ce cas, nous allons accepter un simple objet "),e.j41(249,"code"),e.EFF(250,"options"),e.k0s(),e.EFF(251," avec les propri\xe9t\xe9s appropri\xe9es, ce qui est le cas typique."),e.k0s(),e.j41(252,"li"),e.EFF(253,"Nous pouvons en d\xe9duire que la m\xe9thode "),e.j41(254,"code"),e.EFF(255,"register()"),e.k0s(),e.EFF(256," doit retourner quelque chose comme un "),e.j41(257,"code"),e.EFF(258,"module"),e.k0s(),e.EFF(259," puisque sa valeur de retour appara\xeet dans la liste famili\xe8re "),e.j41(260,"code"),e.EFF(261,"imports"),e.k0s(),e.EFF(262,", qui, comme nous l'avons vu jusqu'\xe0 pr\xe9sent, inclut une liste de modules."),e.k0s()(),e.j41(263,"p"),e.EFF(264,"En fait, ce que notre m\xe9thode "),e.j41(265,"code"),e.EFF(266,"register()"),e.k0s(),e.EFF(267," retournera est un "),e.j41(268,"code"),e.EFF(269,"DynamicModule"),e.k0s(),e.EFF(270,". Un module dynamique n'est rien d'autre qu'un module cr\xe9\xe9 \xe0 l'ex\xe9cution, avec les m\xeames propri\xe9t\xe9s qu'un module statique, plus une propri\xe9t\xe9 suppl\xe9mentaire appel\xe9e "),e.j41(271,"code"),e.EFF(272,"module"),e.k0s(),e.EFF(273,". Passons rapidement en revue un exemple de d\xe9claration de module statique, en pr\xeatant une attention particuli\xe8re aux options de module pass\xe9es au d\xe9corateur :"),e.k0s(),e.j41(274,"app-copy-button")(275,"pre")(276,"code",14),e.EFF(277,"\n@Module({\n  imports: [DogsModule],\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService]\n})\n"),e.k0s()()(),e.j41(278,"p"),e.EFF(279,"Les modules dynamiques doivent renvoyer un objet ayant exactement la m\xeame interface, plus une propri\xe9t\xe9 suppl\xe9mentaire appel\xe9e "),e.j41(280,"code"),e.EFF(281,"module"),e.k0s(),e.EFF(282,". La propri\xe9t\xe9 "),e.j41(283,"code"),e.EFF(284,"module"),e.k0s(),e.EFF(285," sert de nom au module et doit \xeatre identique au nom de la classe du module, comme le montre l'exemple ci-dessous."),e.k0s(),e.j41(286,"blockquote",20)(287,"strong"),e.EFF(288,"Astuce"),e.k0s(),e.EFF(289," Pour un module dynamique, toutes les propri\xe9t\xe9s de l'objet module options sont optionnelles "),e.j41(290,"strong"),e.EFF(291,"sauf"),e.k0s(),e.j41(292,"code"),e.EFF(293,"module"),e.k0s(),e.EFF(294,".\n"),e.k0s(),e.j41(295,"p"),e.EFF(296,"Qu'en est-il de la m\xe9thode statique "),e.j41(297,"code"),e.EFF(298,"register()"),e.k0s(),e.EFF(299," ? Nous pouvons maintenant voir que son r\xf4le est de retourner un objet qui poss\xe8de l'interface "),e.j41(300,"code"),e.EFF(301,"DynamicModule"),e.k0s(),e.EFF(302,". Lorsque nous l'appelons, nous fournissons effectivement un module \xe0 la liste "),e.j41(303,"code"),e.EFF(304,"imports"),e.k0s(),e.EFF(305,", de la m\xeame mani\xe8re que nous le ferions dans le cas statique en listant le nom de la classe du module. En d'autres termes, l'API de module dynamique retourne simplement un module, mais plut\xf4t que de fixer les propri\xe9t\xe9s dans le d\xe9corateur "),e.j41(306,"code"),e.EFF(307,"@Module"),e.k0s(),e.EFF(308,", nous les sp\xe9cifions programmatiquement."),e.k0s(),e.j41(309,"p"),e.EFF(310,"Il reste encore quelques d\xe9tails \xe0 couvrir pour que le tout soit bien complet :"),e.k0s(),e.j41(311,"ol")(312,"li"),e.EFF(313,"Nous pouvons maintenant affirmer que la propri\xe9t\xe9 "),e.j41(314,"code"),e.EFF(315,"@Module()"),e.k0s(),e.EFF(316," du d\xe9corateur "),e.j41(317,"code"),e.EFF(318,"@imports"),e.k0s(),e.EFF(319," peut prendre non seulement un nom de classe de module (par exemple, "),e.j41(320,"code"),e.EFF(321,"imports : [UsersModule]"),e.k0s(),e.EFF(322,"), mais aussi une fonction "),e.j41(323,"strong"),e.EFF(324,"renvoyant"),e.k0s(),e.EFF(325," un module dynamique (par exemple, "),e.j41(326,"code"),e.EFF(327,"imports : [ConfigModule.register(...)]"),e.k0s(),e.EFF(328,")."),e.k0s(),e.j41(329,"li"),e.EFF(330,"Un module dynamique peut lui-m\xeame importer d'autres modules. Nous ne le ferons pas dans cet exemple, mais si le module dynamique d\xe9pend de fournisseurs d'autres modules, vous les importerez en utilisant la propri\xe9t\xe9 optionnelle "),e.j41(331,"code"),e.EFF(332,"imports"),e.k0s(),e.EFF(333,". Encore une fois, c'est exactement analogue \xe0 la fa\xe7on dont vous d\xe9clareriez des m\xe9tadonn\xe9es pour un module statique en utilisant le d\xe9corateur "),e.j41(334,"code"),e.EFF(335,"@Module()"),e.k0s(),e.EFF(336,"."),e.k0s()(),e.j41(337,"p"),e.EFF(338,"Forts de cette compr\xe9hension, nous pouvons maintenant voir \xe0 quoi doit ressembler notre d\xe9claration dynamique "),e.j41(339,"code"),e.EFF(340,"ConfigModule"),e.k0s(),e.EFF(341,". Essayons de le faire."),e.k0s(),e.j41(342,"app-copy-button")(343,"pre")(344,"code",14),e.EFF(345,"\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({})\nexport class ConfigModule {\n  static register(): DynamicModule {\n    return {\n      module: ConfigModule,\n      providers: [ConfigService],\n      exports: [ConfigService],\n    };\n  }\n}\n"),e.k0s()()(),e.j41(346,"p"),e.EFF(347,"Il devrait maintenant \xeatre clair de quelle mani\xe8re les diff\xe9rents \xe9l\xe9ments s'articulent entre eux. L'appel \xe0 "),e.j41(348,"code"),e.EFF(349,"ConfigModule.register(...)"),e.k0s(),e.EFF(350," renvoie un objet "),e.j41(351,"code"),e.EFF(352,"DynamicModule"),e.k0s(),e.EFF(353," avec des propri\xe9t\xe9s qui sont essentiellement les m\xeames que celles que, jusqu'\xe0 pr\xe9sent, nous avons fournies comme m\xe9tadonn\xe9es via le d\xe9corateur "),e.j41(354,"code"),e.EFF(355,"@Module()"),e.k0s(),e.EFF(356,"."),e.k0s(),e.j41(357,"blockquote",20)(358,"strong"),e.EFF(359,"Astuce"),e.k0s(),e.EFF(360," Importez "),e.j41(361,"code"),e.EFF(362,"DynamicModule"),e.k0s(),e.EFF(363," depuis "),e.j41(364,"code"),e.EFF(365,"@nestjs/common"),e.k0s(),e.EFF(366,".\n"),e.k0s(),e.j41(367,"p"),e.EFF(368,"Notre module dynamique n'est pas encore tr\xe8s int\xe9ressant, cependant, car nous n'avons pas introduit de capacit\xe9 \xe0 "),e.j41(369,"strong"),e.EFF(370,"configurer"),e.k0s(),e.EFF(371," le module comme nous avons dit que nous aimerions le faire. Nous allons y rem\xe9dier."),e.k0s(),e.j41(372,"h4",21)(373,"span"),e.EFF(374,"Configuration du module"),e.k0s()(),e.j41(375,"p"),e.EFF(376,"La solution \xe9vidente pour personnaliser le comportement du "),e.j41(377,"code"),e.EFF(378,"ConfigModule"),e.k0s(),e.EFF(379," est de lui passer un objet "),e.j41(380,"code"),e.EFF(381,"options"),e.k0s(),e.EFF(382," dans la m\xe9thode statique "),e.j41(383,"code"),e.EFF(384,"register()"),e.k0s(),e.EFF(385,", comme nous l'avons devin\xe9 plus haut. Regardons encore une fois la propri\xe9t\xe9 "),e.j41(386,"code"),e.EFF(387,"imports"),e.k0s(),e.EFF(388," de notre module de consommation :"),e.k0s(),e.j41(389,"app-copy-button")(390,"pre")(391,"code",14),e.EFF(392,"\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from './config/config.module';\n\n@Module({\n  imports: [ConfigModule.register({ folder: './config' })],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(393,"p"),e.EFF(394,"Cela permet de passer un objet "),e.j41(395,"code"),e.EFF(396,"options"),e.k0s(),e.EFF(397," \xe0 notre module dynamique. Comment utiliser ensuite cet objet "),e.j41(398,"code"),e.EFF(399,"options"),e.k0s(),e.EFF(400," dans le "),e.j41(401,"code"),e.EFF(402,"Module de Configuration"),e.k0s(),e.EFF(403," ? R\xe9fl\xe9chissons-y un instant. Nous savons que notre "),e.j41(404,"code"),e.EFF(405,"ConfigModule"),e.k0s(),e.EFF(406," est fondamentalement un h\xf4te pour fournir et exporter un service injectable - le "),e.j41(407,"code"),e.EFF(408,"ConfigService"),e.k0s(),e.EFF(409," - pour qu'il soit utilis\xe9 par d'autres fournisseurs. C'est en fait notre "),e.j41(410,"code"),e.EFF(411,"ConfigService"),e.k0s(),e.EFF(412," qui a besoin de lire l'objet "),e.j41(413,"code"),e.EFF(414,"options"),e.k0s(),e.EFF(415," pour personnaliser son comportement. Supposons pour l'instant que nous sachions comment obtenir les "),e.j41(416,"code"),e.EFF(417,"options"),e.k0s(),e.EFF(418," de la m\xe9thode "),e.j41(419,"code"),e.EFF(420,"register()"),e.k0s(),e.EFF(421," dans le "),e.j41(422,"code"),e.EFF(423,"ConfigService"),e.k0s(),e.EFF(424,". Avec cette supposition, nous pouvons faire quelques changements au service pour personnaliser son comportement bas\xe9 sur les propri\xe9t\xe9s de l'objet "),e.j41(425,"code"),e.EFF(426,"options"),e.k0s(),e.EFF(427,". ("),e.j41(428,"strong"),e.EFF(429,"Remarque"),e.k0s(),e.EFF(430," : pour l'instant, puisque nous n'avons pas encore d\xe9termin\xe9 comment le passer, nous allons coder en dur "),e.j41(431,"code"),e.EFF(432,"options"),e.k0s(),e.EFF(433,". Nous corrigerons cela dans une minute)."),e.k0s(),e.j41(434,"app-copy-button")(435,"pre")(436,"code",14),e.EFF(437,"\nimport { Injectable } from '@nestjs/common';\nimport * as dotenv from 'dotenv';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { EnvConfig } from './interfaces';\n\n@Injectable()\nexport class ConfigService {\n  private readonly envConfig: EnvConfig;\n\n  constructor() {\n    const options = { folder: './config' };\n\n    const filePath = `${process.env.NODE_ENV || 'development'}.env`;\n    const envFile = path.resolve(__dirname, '../../', options.folder, filePath);\n    this.envConfig = dotenv.parse(fs.readFileSync(envFile));\n  }\n\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n}\n"),e.k0s()()(),e.j41(438,"p"),e.EFF(439,"Maintenant notre "),e.j41(440,"code"),e.EFF(441,"ConfigService"),e.k0s(),e.EFF(442," sait comment trouver le fichier "),e.j41(443,"code"),e.EFF(444,".env"),e.k0s(),e.EFF(445," dans le dossier que nous avons sp\xe9cifi\xe9 dans "),e.j41(446,"code"),e.EFF(447,"options"),e.k0s(),e.EFF(448,"."),e.k0s(),e.j41(449,"p"),e.EFF(450,"Notre t\xe2che restante est d'injecter d'une mani\xe8re ou d'une autre l'objet "),e.j41(451,"code"),e.EFF(452,"options"),e.k0s(),e.EFF(453," de l'\xe9tape "),e.j41(454,"code"),e.EFF(455,"register()"),e.k0s(),e.EFF(456," dans notre "),e.j41(457,"code"),e.EFF(458,"ConfigService"),e.k0s(),e.EFF(459,". Et bien s\xfbr, nous allons utiliser l'injection de d\xe9pendance pour le faire. C'est un point cl\xe9, alors assurez-vous de bien le comprendre. Notre "),e.j41(460,"code"),e.EFF(461,"ConfigModule"),e.k0s(),e.EFF(462," fournit "),e.j41(463,"code"),e.EFF(464,"ConfigService"),e.k0s(),e.EFF(465,". Le "),e.j41(466,"code"),e.EFF(467,"ConfigService"),e.k0s(),e.EFF(468," d\xe9pend \xe0 son tour de l'objet "),e.j41(469,"code"),e.EFF(470,"options"),e.k0s(),e.EFF(471," qui n'est fourni qu'\xe0 l'ex\xe9cution. Donc, \xe0 l'ex\xe9cution, nous devrons d'abord lier l'objet "),e.j41(472,"code"),e.EFF(473,"options"),e.k0s(),e.EFF(474," au conteneur IoC de Nest, et ensuite l'injecter dans notre "),e.j41(475,"code"),e.EFF(476,"ConfigService"),e.k0s(),e.EFF(477,". Rappelez-vous du chapitre "),e.j41(478,"strong"),e.EFF(479,"Fournisseurs personnalis\xe9s"),e.k0s(),e.EFF(480," que les fournisseurs peuvent "),e.j41(481,"a",22),e.EFF(482,"inclure n'importe quelle valeur"),e.k0s(),e.EFF(483," et pas seulement les services, donc nous pouvons utiliser l'injection de d\xe9pendances pour g\xe9rer un simple objet "),e.j41(484,"code"),e.EFF(485,"options"),e.k0s(),e.EFF(486,"."),e.k0s(),e.j41(487,"p"),e.EFF(488,"Commen\xe7ons par lier l'objet options au conteneur IoC. Nous le faisons dans notre m\xe9thode statique "),e.j41(489,"code"),e.EFF(490,"register()"),e.k0s(),e.EFF(491,". Souvenez-vous que nous construisons dynamiquement un module, et qu'une des propri\xe9t\xe9s d'un module est sa liste de fournisseurs. Nous devons donc d\xe9finir notre objet options comme un fournisseur. Cela le rendra injectable dans le "),e.j41(492,"code"),e.EFF(493,"ConfigService"),e.k0s(),e.EFF(494,", ce dont nous profiterons dans l'\xe9tape suivante. Dans le code ci-dessous, faites attention \xe0 la liste "),e.j41(495,"code"),e.EFF(496,"providers"),e.k0s(),e.EFF(497," :"),e.k0s(),e.j41(498,"app-copy-button")(499,"pre")(500,"code",14),e.EFF(501,"\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({})\nexport class ConfigModule {\n  static register(options: Record<string, any>): DynamicModule {\n    return {\n      module: ConfigModule,\n      providers: [\n        {\n          provide: 'CONFIG_OPTIONS',\n          useValue: options,\n        },\n        ConfigService,\n      ],\n      exports: [ConfigService],\n    };\n  }\n}\n"),e.k0s()()(),e.j41(502,"p"),e.EFF(503,"Maintenant nous pouvons terminer le processus en injectant le fournisseur "),e.j41(504,"code"),e.EFF(505,"'CONFIG_OPTIONS'"),e.k0s(),e.EFF(506," dans le "),e.j41(507,"code"),e.EFF(508,"ConfigService"),e.k0s(),e.EFF(509,". Rappelons que lorsque nous d\xe9finissons un fournisseur en utilisant un jeton qui n'est pas une classe, nous devons utiliser le d\xe9corateur "),e.j41(510,"code"),e.EFF(511,"@Inject()"),e.k0s(),e.j41(512,"a",23),e.EFF(513,"comme d\xe9crit ici"),e.k0s(),e.EFF(514,"."),e.k0s(),e.j41(515,"app-copy-button")(516,"pre")(517,"code",14),e.EFF(518,"\nimport * as dotenv from 'dotenv';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { Injectable, Inject } from '@nestjs/common';\nimport { EnvConfig } from './interfaces';\n\n@Injectable()\nexport class ConfigService {\n  private readonly envConfig: EnvConfig;\n\n  constructor(@Inject('CONFIG_OPTIONS') private options: Record<string, any>) {\n    const filePath = `${process.env.NODE_ENV || 'development'}.env`;\n    const envFile = path.resolve(__dirname, '../../', options.folder, filePath);\n    this.envConfig = dotenv.parse(fs.readFileSync(envFile));\n  }\n\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n}\n"),e.k0s()()(),e.j41(519,"p"),e.EFF(520,"Une derni\xe8re note : pour des raisons de simplicit\xe9, nous avons utilis\xe9 un jeton d'injection bas\xe9 sur une cha\xeene de caract\xe8res ("),e.j41(521,"code"),e.EFF(522,"'CONFIG_OPTIONS'"),e.k0s(),e.EFF(523,") ci-dessus, mais la meilleure pratique est de le d\xe9finir comme une constante (ou "),e.j41(524,"code"),e.EFF(525,"Symbol"),e.k0s(),e.EFF(526,") dans un fichier s\xe9par\xe9, et d'importer ce fichier. Par exemple :"),e.k0s(),e.j41(527,"app-copy-button")(528,"pre")(529,"code",14),e.EFF(530,"\nexport const CONFIG_OPTIONS = 'CONFIG_OPTIONS';\n"),e.k0s()()(),e.j41(531,"h4",24)(532,"span"),e.EFF(533,"Exemple"),e.k0s()(),e.j41(534,"p"),e.EFF(535,"Un exemple complet du code de ce chapitre est disponible "),e.j41(536,"a",19),e.EFF(537,"ici"),e.k0s(),e.EFF(538,"."),e.k0s(),e.j41(539,"h4",25)(540,"span"),e.EFF(541,"Lignes directrices pour la communaut\xe9"),e.k0s()(),e.j41(542,"p"),e.EFF(543,"Vous avez peut-\xeatre vu l'utilisation de m\xe9thodes comme "),e.j41(544,"code"),e.EFF(545,"forRoot"),e.k0s(),e.EFF(546,", "),e.j41(547,"code"),e.EFF(548,"register"),e.k0s(),e.EFF(549,", et "),e.j41(550,"code"),e.EFF(551,"forFeature"),e.k0s(),e.EFF(552," dans certains des packages "),e.j41(553,"code"),e.EFF(554,"@nestjs/"),e.k0s(),e.EFF(555," et vous vous demandez peut-\xeatre quelle est la diff\xe9rence entre toutes ces m\xe9thodes. Il n'y a pas de r\xe8gle stricte \xe0 ce sujet, mais les packages "),e.j41(556,"code"),e.EFF(557,"@nestjs/"),e.k0s(),e.EFF(558," essaient de suivre ces lignes directrices :"),e.k0s(),e.j41(559,"p"),e.EFF(560,"Lors de la cr\xe9ation d'un module avec :"),e.k0s(),e.j41(561,"ul")(562,"li")(563,"p")(564,"code"),e.EFF(565,"register"),e.k0s(),e.EFF(566,", vous vous attendez \xe0 configurer un module dynamique avec une configuration sp\xe9cifique qui ne sera utilis\xe9e que par le module appelant. Par exemple, avec Nest "),e.j41(567,"code"),e.EFF(568,"@nestjs/axios"),e.k0s(),e.EFF(569," : "),e.j41(570,"code"),e.EFF(571),e.k0s(),e.EFF(572,". Si, dans un autre module, vous utilisez "),e.j41(573,"code"),e.EFF(574),e.k0s(),e.EFF(575,", il aura une configuration diff\xe9rente. Vous pouvez faire cela pour autant de modules que vous le souhaitez."),e.k0s()(),e.j41(576,"li")(577,"p")(578,"code"),e.EFF(579,"forRoot"),e.k0s(),e.EFF(580,", vous vous attendez \xe0 configurer un module dynamique une seule fois et \xe0 r\xe9utiliser cette configuration \xe0 de multiples endroits (bien qu'\xe0 votre insu puisque c'est abstrait). C'est pourquoi vous avez un "),e.j41(581,"code"),e.EFF(582,"GraphQLModule.forRoot()"),e.k0s(),e.EFF(583,", un "),e.j41(584,"code"),e.EFF(585,"TypeOrmModule.forRoot()"),e.k0s(),e.EFF(586,", etc."),e.k0s()(),e.j41(587,"li")(588,"p")(589,"code"),e.EFF(590,"forFeature"),e.k0s(),e.EFF(591,", vous vous attendez \xe0 utiliser la configuration d'un module dynamique "),e.j41(592,"code"),e.EFF(593,"forRoot"),e.k0s(),e.EFF(594," mais vous devez modifier une configuration sp\xe9cifique aux besoins du module appelant (par exemple, le r\xe9f\xe9rentiel auquel ce module doit avoir acc\xe8s, ou le contexte qu'un logger doit utiliser)."),e.k0s()()(),e.j41(595,"p"),e.EFF(596,"Tous ces \xe9l\xe9ments ont g\xe9n\xe9ralement leur \xe9quivalent "),e.j41(597,"code"),e.EFF(598,"async"),e.k0s(),e.EFF(599,", "),e.j41(600,"code"),e.EFF(601,"registerAsync"),e.k0s(),e.EFF(602,", "),e.j41(603,"code"),e.EFF(604,"forRootAsync"),e.k0s(),e.EFF(605,", et "),e.j41(606,"code"),e.EFF(607,"forFeatureAsync"),e.k0s(),e.EFF(608,", qui signifient la m\xeame chose, mais qui utilisent l'injection de d\xe9pendance de Nest pour la configuration."),e.k0s(),e.j41(609,"h4",26)(610,"span"),e.EFF(611,"Constructeur de modules configurables"),e.k0s()(),e.j41(612,"p"),e.EFF(613,"Comme la cr\xe9ation manuelle de modules dynamiques hautement configurables qui exposent des m\xe9thodes "),e.j41(614,"code"),e.EFF(615,"async"),e.k0s(),e.EFF(616," ("),e.j41(617,"code"),e.EFF(618,"registerAsync"),e.k0s(),e.EFF(619,", "),e.j41(620,"code"),e.EFF(621,"forRootAsync"),e.k0s(),e.EFF(622,", etc.) est assez compliqu\xe9e, en particulier pour les nouveaux venus, Nest expose la classe "),e.j41(623,"code"),e.EFF(624,"ConfigurableModuleBuilder"),e.k0s(),e.EFF(625,' qui facilite ce processus et vous permet de construire un " plan " de module en seulement quelques lignes de code.'),e.k0s(),e.j41(626,"p"),e.EFF(627,"For example, let's take the example we used above ("),e.j41(628,"code"),e.EFF(629,"ConfigModule"),e.k0s(),e.EFF(630,") and convert it to use the "),e.j41(631,"code"),e.EFF(632,"ConfigurableModuleBuilder"),e.k0s(),e.EFF(633,". Before we start, let's make sure we create a dedicated interface that represents what options our "),e.j41(634,"code"),e.EFF(635,"ConfigModule"),e.k0s(),e.EFF(636," takes in."),e.k0s(),e.j41(637,"app-copy-button")(638,"pre")(639,"code",14),e.EFF(640,"\nexport interface ConfigModuleOptions {\n  folder: string;\n}\n"),e.k0s()()(),e.j41(641,"p"),e.EFF(642,"Avec ceci en place, cr\xe9ez un nouveau fichier d\xe9di\xe9 (\xe0 c\xf4t\xe9 du fichier "),e.j41(643,"code"),e.EFF(644,"config.module.ts"),e.k0s(),e.EFF(645," existant) et nommez-le "),e.j41(646,"code"),e.EFF(647,"config.module-definition.ts"),e.k0s(),e.EFF(648,". Dans ce fichier, utilisons le "),e.j41(649,"code"),e.EFF(650,"ConfigurableModuleBuilder"),e.k0s(),e.EFF(651," pour construire la d\xe9finition du "),e.j41(652,"code"),e.EFF(653,"ConfigModule"),e.k0s(),e.EFF(654,"."),e.k0s(),e.j41(655,"app-copy-button",27)(656,"span",28),e.EFF(657),e.nI1(658,"extension"),e.nrm(659,"app-tabs",null,1),e.k0s(),e.j41(661,"pre")(662,"code",14),e.EFF(663,"\nimport { ConfigurableModuleBuilder } from '@nestjs/common';\nimport { ConfigModuleOptions } from './interfaces/config-module-options.interface';\n\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN } =\n  new ConfigurableModuleBuilder<ConfigModuleOptions>().build();\n"),e.k0s()(),e.j41(664,"pre")(665,"code",14),e.EFF(666,"\nimport { ConfigurableModuleBuilder } from '@nestjs/common';\n\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN } =\n  new ConfigurableModuleBuilder().build();\n"),e.k0s()()(),e.j41(667,"p"),e.EFF(668,"Maintenant, ouvrons le fichier "),e.j41(669,"code"),e.EFF(670,"config.module.ts"),e.k0s(),e.EFF(671," et modifions son impl\xe9mentation pour tirer parti de la "),e.j41(672,"code"),e.EFF(673,"ConfigurableModuleClass"),e.k0s(),e.EFF(674," auto-g\xe9n\xe9r\xe9e :"),e.k0s(),e.j41(675,"app-copy-button")(676,"pre")(677,"code",14),e.EFF(678,"\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\nimport { ConfigurableModuleClass } from './config.module-definition';\n\n@Module({\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule extends ConfigurableModuleClass {}\n"),e.k0s()()(),e.j41(679,"p"),e.EFF(680,"L'extension de la classe "),e.j41(681,"code"),e.EFF(682,"ConfigurableModuleClass"),e.k0s(),e.EFF(683," signifie que "),e.j41(684,"code"),e.EFF(685,"ConfigModule"),e.k0s(),e.EFF(686," fournit maintenant non seulement la m\xe9thode "),e.j41(687,"code"),e.EFF(688,"register"),e.k0s(),e.EFF(689," (comme pr\xe9c\xe9demment avec l'impl\xe9mentation personnalis\xe9e), mais aussi la m\xe9thode "),e.j41(690,"code"),e.EFF(691,"registerAsync"),e.k0s(),e.EFF(692," qui permet aux consommateurs de configurer ce module de mani\xe8re asynchrone, par exemple, en fournissant des factories asynchrones :"),e.k0s(),e.j41(693,"app-copy-button")(694,"pre")(695,"code",14),e.EFF(696,"\n@Module({\n  imports: [\n    ConfigModule.register({ folder: './config' }),\n    // or alternatively:\n    // ConfigModule.registerAsync({\n    //   useFactory: () => {\n    //     return {\n    //       folder: './config',\n    //     }\n    //   },\n    //   inject: [...any extra dependencies...]\n    // }),\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(697,"p"),e.EFF(698,"Enfin, mettons \xe0 jour la classe "),e.j41(699,"code"),e.EFF(700,"ConfigService"),e.k0s(),e.EFF(701," pour injecter le fournisseur d'options du module g\xe9n\xe9r\xe9 au lieu de "),e.j41(702,"code"),e.EFF(703,"'CONFIG_OPTIONS'"),e.k0s(),e.EFF(704," que nous avons utilis\xe9 jusqu'\xe0 pr\xe9sent."),e.k0s(),e.j41(705,"app-copy-button")(706,"pre")(707,"code",14),e.EFF(708,"\n@Injectable()\nexport class ConfigService {\n  constructor(@Inject(MODULE_OPTIONS_TOKEN) private options: ConfigModuleOptions) { ... }\n}\n"),e.k0s()()(),e.j41(709,"h4",29)(710,"span"),e.EFF(711,"Cl\xe9 de m\xe9thode personnalis\xe9e"),e.k0s()(),e.j41(712,"p"),e.EFF(713,"La classe "),e.j41(714,"code"),e.EFF(715,"ConfigurableModuleClass"),e.k0s(),e.EFF(716," fournit par d\xe9faut les m\xe9thodes "),e.j41(717,"code"),e.EFF(718,"register"),e.k0s(),e.EFF(719," et son \xe9quivalent "),e.j41(720,"code"),e.EFF(721,"registerAsync"),e.k0s(),e.EFF(722,". Pour utiliser un nom de m\xe9thode diff\xe9rent, utilisez la m\xe9thode "),e.j41(723,"code"),e.EFF(724,"ConfigurableModuleBuilder#setClassMethodName"),e.k0s(),e.EFF(725,", comme suit :"),e.k0s(),e.j41(726,"app-copy-button",27)(727,"span",28),e.EFF(728),e.nI1(729,"extension"),e.nrm(730,"app-tabs",null,2),e.k0s(),e.j41(732,"pre")(733,"code",14),e.EFF(734,"\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN } =\n  new ConfigurableModuleBuilder<ConfigModuleOptions>().setClassMethodName('forRoot').build();\n"),e.k0s()(),e.j41(735,"pre")(736,"code",14),e.EFF(737,"\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN } =\n  new ConfigurableModuleBuilder().setClassMethodName('forRoot').build();\n"),e.k0s()()(),e.j41(738,"p"),e.EFF(739,"Cette construction demandera \xe0 "),e.j41(740,"code"),e.EFF(741,"ConfigurableModuleBuilder"),e.k0s(),e.EFF(742," de g\xe9n\xe9rer une classe qui expose "),e.j41(743,"code"),e.EFF(744,"forRoot"),e.k0s(),e.EFF(745," et "),e.j41(746,"code"),e.EFF(747,"forRootAsync"),e.k0s(),e.EFF(748," \xe0 la place. Exemple :"),e.k0s(),e.j41(749,"app-copy-button")(750,"pre")(751,"code",14),e.EFF(752,"\n@Module({\n  imports: [\n    ConfigModule.forRoot({ folder: './config' }), // <-- note the use of \"forRoot\" instead of \"register\"\n    // or alternatively:\n    // ConfigModule.forRootAsync({\n    //   useFactory: () => {\n    //     return {\n    //       folder: './config',\n    //     }\n    //   },\n    //   inject: [...any extra dependencies...]\n    // }),\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(753,"h4",30)(754,"span"),e.EFF(755,"Classe usine d'options personnalis\xe9es"),e.k0s()(),e.j41(756,"p"),e.EFF(757,"Puisque la m\xe9thode "),e.j41(758,"code"),e.EFF(759,"registerAsync"),e.k0s(),e.EFF(760," (ou "),e.j41(761,"code"),e.EFF(762,"forRootAsync"),e.k0s(),e.EFF(763," ou tout autre nom, selon la configuration) permet au consommateur de passer une d\xe9finition de fournisseur qui r\xe9sout la configuration du module, un consommateur de biblioth\xe8que pourrait potentiellement fournir une classe \xe0 utiliser pour construire l'objet de configuration."),e.k0s(),e.j41(764,"app-copy-button")(765,"pre")(766,"code",14),e.EFF(767,"\n@Module({\n  imports: [\n    ConfigModule.registerAsync({\n      useClass: ConfigModuleOptionsFactory,\n    }),\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(768,"p"),e.EFF(769,"Cette classe, par d\xe9faut, doit fournir la m\xe9thode "),e.j41(770,"code"),e.EFF(771,"create()"),e.k0s(),e.EFF(772," qui retourne un objet de configuration de module. Cependant, si votre biblioth\xe8que suit une convention de nommage diff\xe9rente, vous pouvez changer ce comportement et indiquer \xe0 "),e.j41(773,"code"),e.EFF(774,"ConfigurableModuleBuilder"),e.k0s(),e.EFF(775," de s'attendre \xe0 une m\xe9thode diff\xe9rente, par exemple, "),e.j41(776,"code"),e.EFF(777,"createConfigOptions"),e.k0s(),e.EFF(778,", en utilisant la m\xe9thode "),e.j41(779,"code"),e.EFF(780,"ConfigurableModuleBuilder#setFactoryMethodName"),e.k0s(),e.EFF(781," :"),e.k0s(),e.j41(782,"app-copy-button",27)(783,"span",28),e.EFF(784),e.nI1(785,"extension"),e.nrm(786,"app-tabs",null,3),e.k0s(),e.j41(788,"pre")(789,"code",14),e.EFF(790,"\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN } =\n  new ConfigurableModuleBuilder<ConfigModuleOptions>().setFactoryMethodName('createConfigOptions').build();\n"),e.k0s()(),e.j41(791,"pre")(792,"code",14),e.EFF(793,"\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN } =\n  new ConfigurableModuleBuilder().setFactoryMethodName('createConfigOptions').build();\n"),e.k0s()()(),e.j41(794,"p"),e.EFF(795,"D\xe9sormais, la classe "),e.j41(796,"code"),e.EFF(797,"ConfigModuleOptionsFactory"),e.k0s(),e.EFF(798," doit exposer la m\xe9thode "),e.j41(799,"code"),e.EFF(800,"createConfigOptions"),e.k0s(),e.EFF(801," (au lieu de "),e.j41(802,"code"),e.EFF(803,"create"),e.k0s(),e.EFF(804,") :"),e.k0s(),e.j41(805,"app-copy-button")(806,"pre")(807,"code",14),e.EFF(808,'\n@Module({\n  imports: [\n    ConfigModule.registerAsync({\n      useClass: ConfigModuleOptionsFactory, // <-- this class must provide the "createConfigOptions" method\n    }),\n  ],\n})\nexport class AppModule {}\n'),e.k0s()()(),e.j41(809,"h4",31)(810,"span"),e.EFF(811,"Options suppl\xe9mentaires"),e.k0s()(),e.j41(812,"p"),e.EFF(813,"Il y a des cas limites o\xf9 votre module peut avoir besoin de prendre des options suppl\xe9mentaires qui d\xe9terminent comment il est suppos\xe9 se comporter (un bon exemple d'une telle option est le drapeau "),e.j41(814,"code"),e.EFF(815,"isGlobal"),e.k0s(),e.EFF(816," - ou juste "),e.j41(817,"code"),e.EFF(818,"global"),e.k0s(),e.EFF(819,") qui, en m\xeame temps, ne devrait pas \xeatre inclus dans le fournisseur "),e.j41(820,"code"),e.EFF(821,"MODULE_OPTIONS_TOKEN"),e.k0s(),e.EFF(822," (car ils ne sont pas pertinents pour les services/fournisseurs enregistr\xe9s dans ce module, par exemple, "),e.j41(823,"code"),e.EFF(824,"ConfigService"),e.k0s(),e.EFF(825," n'a pas besoin de savoir si son module h\xf4te est enregistr\xe9 en tant que module global)."),e.k0s(),e.j41(826,"p"),e.EFF(827,"Dans ce cas, la m\xe9thode "),e.j41(828,"code"),e.EFF(829,"ConfigurableModuleBuilder#setExtras"),e.k0s(),e.EFF(830," peut \xeatre utilis\xe9e. Voir l'exemple suivant :"),e.k0s(),e.j41(831,"app-copy-button")(832,"pre")(833,"code",14),e.EFF(834,"\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN } = new ConfigurableModuleBuilder<ConfigModuleOptions>()\n  .setExtras(\n    {\n      isGlobal: true,\n    },\n    (definition, extras) => ({\n      ...definition,\n      global: extras.isGlobal,\n    }),\n  )\n  .build();\n"),e.k0s()()(),e.j41(835,"p"),e.EFF(836,"Dans l'exemple ci-dessus, le premier argument pass\xe9 \xe0 la m\xe9thode "),e.j41(837,"code"),e.EFF(838,"setExtras"),e.k0s(),e.EFF(839,' est un objet contenant les valeurs par d\xe9faut des propri\xe9t\xe9s "extra". Le second argument est une fonction qui prend une d\xe9finition de module auto-g\xe9n\xe9r\xe9e (avec '),e.j41(840,"code"),e.EFF(841,"provider"),e.k0s(),e.EFF(842,", "),e.j41(843,"code"),e.EFF(844,"exports"),e.k0s(),e.EFF(845,", etc.) et l'objet "),e.j41(846,"code"),e.EFF(847,"extras"),e.k0s(),e.EFF(848," qui repr\xe9sente les propri\xe9t\xe9s suppl\xe9mentaires (soit sp\xe9cifi\xe9es par le consommateur, soit par d\xe9faut). La valeur retourn\xe9e par cette fonction est une d\xe9finition de module modifi\xe9e. Dans cet exemple sp\xe9cifique, nous prenons la propri\xe9t\xe9 "),e.j41(849,"code"),e.EFF(850,"extras.isGlobal"),e.k0s(),e.EFF(851," et l'assignons \xe0 la propri\xe9t\xe9 "),e.j41(852,"code"),e.EFF(853,"global"),e.k0s(),e.EFF(854," de la d\xe9finition du module (qui \xe0 son tour d\xe9termine si un module est global ou non, en savoir plus "),e.j41(855,"a",10),e.EFF(856,"ici"),e.k0s(),e.EFF(857,")."),e.k0s(),e.j41(858,"p"),e.EFF(859,"Maintenant, lorsque l'on consomme ce module, le drapeau suppl\xe9mentaire "),e.j41(860,"code"),e.EFF(861,"isGlobal"),e.k0s(),e.EFF(862," peut \xeatre pass\xe9, comme suit :"),e.k0s(),e.j41(863,"app-copy-button")(864,"pre")(865,"code",14),e.EFF(866,"\n@Module({\n  imports: [\n    ConfigModule.register({\n      isGlobal: true,\n      folder: './config',\n    }),\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(867,"p"),e.EFF(868,"Cependant, puisque "),e.j41(869,"code"),e.EFF(870,"isGlobal"),e.k0s(),e.EFF(871,' est d\xe9clar\xe9e comme une propri\xe9t\xe9 "extra", elle ne sera pas disponible dans le fournisseur '),e.j41(872,"code"),e.EFF(873,"MODULE_OPTIONS_TOKEN"),e.k0s(),e.EFF(874," :"),e.k0s(),e.j41(875,"app-copy-button")(876,"pre")(877,"code",14),e.EFF(878,'\n@Injectable()\nexport class ConfigService {\n  constructor(@Inject(MODULE_OPTIONS_TOKEN) private options: ConfigModuleOptions) {\n    // L\'objet "options" n\'aura pas la propri\xe9t\xe9 "isGlobal".\n    // ...\n  }\n}\n'),e.k0s()()(),e.j41(879,"h4",32)(880,"span"),e.EFF(881,"\xc9tendre les m\xe9thodes g\xe9n\xe9r\xe9es automatiquement"),e.k0s()(),e.j41(882,"p"),e.EFF(883,"Les m\xe9thodes statiques auto-g\xe9n\xe9r\xe9es ("),e.j41(884,"code"),e.EFF(885,"register"),e.k0s(),e.EFF(886,", "),e.j41(887,"code"),e.EFF(888,"registerAsync"),e.k0s(),e.EFF(889,", etc.) peuvent \xeatre \xe9tendues si n\xe9cessaire, comme suit :"),e.k0s(),e.j41(890,"app-copy-button")(891,"pre")(892,"code",14),e.EFF(893,"\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\nimport { ConfigurableModuleClass, ASYNC_OPTIONS_TYPE, OPTIONS_TYPE } from './config.module-definition';\n\n@Module({\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule extends ConfigurableModuleClass {\n  static register(options: typeof OPTIONS_TYPE): DynamicModule {\n    return {\n      // votre logique personnalis\xe9e ici\n      ...super.register(options),\n    };\n  }\n\n  static registerAsync(options: typeof ASYNC_OPTIONS_TYPE): DynamicModule {\n    return {\n      // votre logique personnalis\xe9e ici\n      ...super.registerAsync(options),\n    };\n  }\n}\n"),e.k0s()()(),e.j41(894,"p"),e.EFF(895,"Notez l'utilisation des types "),e.j41(896,"code"),e.EFF(897,"OPTIONS_TYPE"),e.k0s(),e.EFF(898," et "),e.j41(899,"code"),e.EFF(900,"ASYNC_OPTIONS_TYPE"),e.k0s(),e.EFF(901," qui doivent \xeatre export\xe9s depuis le fichier de d\xe9finition du module :"),e.k0s(),e.j41(902,"app-copy-button")(903,"pre")(904,"code",14),e.EFF(905,"\nexport const { ConfigurableModuleClass, MODULE_OPTIONS_TOKEN, OPTIONS_TYPE, ASYNC_OPTIONS_TYPE } = new ConfigurableModuleBuilder<ConfigModuleOptions>().build();\n"),e.k0s()()()()),2&t){const u=e.sdS(660),r=e.sdS(731),a=e.sdS(787);e.R7$(571),e.Lme("HttpModule.register(","{"," baseUrl : 'someUrl' ","}",")"),e.R7$(3),e.Lme("HttpModule.register(","{"," baseUrl : 'somewhere else' ","}",")"),e.R7$(83),e.SpI(" ",e.i5U(658,19,"config.module-definition",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(64),e.SpI(" ",e.i5U(729,22,"config.module-definition",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(49),e.SpI(" ",e.i5U(785,25,"config.module-definition",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive)}},dependencies:[f.O,E.a,A._,p.z,d.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),R=(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-lifecycle-events"]],features:[e.Vt3],decls:312,vars:12,consts:[["contentReference",""],["app865292f5f2d6033042d8511714c05552d25b8830",""],["appc31bf09baa001ddaf714c5133fa9b64f78e77f9c",""],["app60d141cd86a42cf918c4c322f846b4e46b11a3d8",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/lifecycle-events.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","\xe9v\xe9nements-du-cycle-de-vie"],["appAnchor","","id","s\xe9quence-du-cycle-de-vie"],["src","/assets/lifecycle-events.png",1,"illustrative-image"],["appAnchor","","id","\xe9v\xe9nements-du-cycle-de-vie-1"],["href","/fundamentals/lifecycle-events#arr%C3%AAt-de-lapplication"],["href","fundamentals/lifecycle-events#arr%C3%AAt-de-lapplication"],[1,"warning"],[1,"info"],["appAnchor","","id","usage"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],["appAnchor","","id","initialisation-asynchrone"],["appAnchor","","id","arr\xeat-de-lapplication"],["rel","nofollow","target","_blank","href","https://kubernetes.io/"],["rel","nofollow","target","_blank","href","https://www.heroku.com/"],["rel","nofollow","target","_blank","href","https://nodejs.org/api/process.html#process_signal_events"],["rel","nofollow","target","_blank","href","https://docs.libuv.org/en/v1.x/signal.html"]],template:function(t,o){if(1&t&&(e.j41(0,"div",4,0)(2,"div",5)(3,"a",6),e.nrm(4,"i",7),e.k0s()(),e.j41(5,"h3",8),e.EFF(6,"\xc9v\xe9nements du cycle de vie"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Une application Nest, ainsi que chaque \xe9l\xe9ment de l'application, a un cycle de vie g\xe9r\xe9 par Nest. Nest fournit des "),e.j41(9,"strong"),e.EFF(10,"hooks de cycle de vie"),e.k0s(),e.EFF(11," qui donnent une visibilit\xe9 sur les \xe9v\xe9nements cl\xe9s du cycle de vie, et la possibilit\xe9 d'agir (ex\xe9cuter le code enregistr\xe9 sur vos modules, fournisseurs ou contr\xf4leurs) lorsqu'ils se produisent."),e.k0s(),e.j41(12,"h4",9)(13,"span"),e.EFF(14,"S\xe9quence du cycle de vie"),e.k0s()(),e.j41(15,"p"),e.EFF(16,"Le diagramme suivant illustre la s\xe9quence des \xe9v\xe9nements cl\xe9s du cycle de vie de l'application, depuis le d\xe9marrage de l'application jusqu'\xe0 la fin du processus node. Nous pouvons diviser le cycle de vie global en trois phases : "),e.j41(17,"strong"),e.EFF(18,"initialisation"),e.k0s(),e.EFF(19,", "),e.j41(20,"strong"),e.EFF(21,"ex\xe9cution"),e.k0s(),e.EFF(22," et "),e.j41(23,"strong"),e.EFF(24,"arr\xeat"),e.k0s(),e.EFF(25,". Gr\xe2ce \xe0 ce cycle de vie, vous pouvez planifier l'initialisation appropri\xe9e des modules et des services, g\xe9rer les connexions actives et arr\xeater gracieusement votre application lorsqu'elle re\xe7oit un signal d'arr\xeat."),e.k0s(),e.j41(26,"figure"),e.nrm(27,"img",10),e.k0s(),e.j41(28,"h4",11)(29,"span"),e.EFF(30,"\xc9v\xe9nements du cycle de vie"),e.k0s()(),e.j41(31,"p"),e.EFF(32,"Les \xe9v\xe9nements du cycle de vie se produisent pendant le d\xe9marrage et l'arr\xeat de l'application. Nest appelle les m\xe9thodes de hook de cycle de vie enregistr\xe9es sur les modules, les fournisseurs et les contr\xf4leurs \xe0 chacun des \xe9v\xe9nements de cycle de vie suivants ("),e.j41(33,"strong"),e.EFF(34,"les hooks d'arr\xeat"),e.k0s(),e.EFF(35," doivent \xeatre activ\xe9s en premier, comme d\xe9crit "),e.j41(36,"a",12),e.EFF(37,"ci-dessous"),e.k0s(),e.EFF(38,"). Comme le montre le diagramme ci-dessus, Nest appelle \xe9galement les m\xe9thodes sous-jacentes appropri\xe9es pour commencer \xe0 \xe9couter les connexions, et pour arr\xeater d'\xe9couter les connexions."),e.k0s(),e.j41(39,"p"),e.EFF(40,"Dans le tableau suivant, "),e.j41(41,"code"),e.EFF(42,"onModuleInit"),e.k0s(),e.EFF(43," et "),e.j41(44,"code"),e.EFF(45,"onApplicationBootstrap"),e.k0s(),e.EFF(46," ne sont d\xe9clench\xe9s que si vous appelez explicitement "),e.j41(47,"code"),e.EFF(48,"app.init()"),e.k0s(),e.EFF(49," ou "),e.j41(50,"code"),e.EFF(51,"app.listen()"),e.k0s(),e.EFF(52,"."),e.k0s(),e.j41(53,"p"),e.EFF(54,"Dans le tableau suivant, "),e.j41(55,"code"),e.EFF(56,"onModuleDestroy"),e.k0s(),e.EFF(57,", "),e.j41(58,"code"),e.EFF(59,"beforeApplicationShutdown"),e.k0s(),e.EFF(60," et "),e.j41(61,"code"),e.EFF(62,"onApplicationShutdown"),e.k0s(),e.EFF(63," ne sont d\xe9clench\xe9s que si vous appelez explicitement "),e.j41(64,"code"),e.EFF(65,"app.close()"),e.k0s(),e.EFF(66," ou si le processus re\xe7oit un signal syst\xe8me sp\xe9cial (tel que SIGTERM) et que vous avez correctement appel\xe9 "),e.j41(67,"code"),e.EFF(68,"enableShutdownHooks"),e.k0s(),e.EFF(69," au d\xe9marrage de l'application (voir ci-dessous la partie "),e.j41(70,"strong"),e.EFF(71,"Arr\xeat de l'application"),e.k0s(),e.EFF(72,")."),e.k0s(),e.j41(73,"table")(74,"thead")(75,"tr")(76,"th"),e.EFF(77,"M\xe9thode hook du cycle de vie"),e.k0s(),e.j41(78,"th"),e.EFF(79,"\xc9v\xe9nement du cycle de vie d\xe9clenchant l'appel \xe0 la m\xe9thode hook"),e.k0s()()(),e.j41(80,"tbody")(81,"tr")(82,"td")(83,"code"),e.EFF(84,"onModuleInit()"),e.k0s()(),e.j41(85,"td"),e.EFF(86,"Appel\xe9e une fois que les d\xe9pendances du module h\xf4te ont \xe9t\xe9 r\xe9solues."),e.k0s()(),e.j41(87,"tr")(88,"td")(89,"code"),e.EFF(90,"onApplicationBootstrap()"),e.k0s()(),e.j41(91,"td"),e.EFF(92,"Appel\xe9e une fois que tous les modules ont \xe9t\xe9 initialis\xe9s, mais avant d'\xe9couter les connexions."),e.k0s()(),e.j41(93,"tr")(94,"td")(95,"code"),e.EFF(96,"onModuleDestroy()"),e.k0s(),e.EFF(97,"*"),e.k0s(),e.j41(98,"td"),e.EFF(99,"Appel\xe9e apr\xe8s r\xe9ception d'un signal de fin (par exemple, "),e.j41(100,"code"),e.EFF(101,"SIGTERM"),e.k0s(),e.EFF(102,")."),e.k0s()(),e.j41(103,"tr")(104,"td")(105,"code"),e.EFF(106,"beforeApplicationShutdown()"),e.k0s(),e.EFF(107,"*"),e.k0s(),e.j41(108,"td"),e.EFF(109,"Appel\xe9e apr\xe8s que tous les gestionnaires "),e.j41(110,"code"),e.EFF(111,"onModuleDestroy()"),e.k0s(),e.EFF(112," aient termin\xe9 (promesses r\xe9solues ou rejet\xe9es);"),e.nrm(113,"br"),e.EFF(114,"une fois termin\xe9 (promesses r\xe9solues ou rejet\xe9es), toutes les connexions existantes seront ferm\xe9es ("),e.j41(115,"code"),e.EFF(116,"app.close()"),e.k0s(),e.EFF(117," appel\xe9z)."),e.k0s()(),e.j41(118,"tr")(119,"td")(120,"code"),e.EFF(121,"onApplicationShutdown()"),e.k0s(),e.EFF(122,"*"),e.k0s(),e.j41(123,"td"),e.EFF(124,"Appel\xe9e apr\xe8s la fermeture des connexions ("),e.j41(125,"code"),e.EFF(126,"app.close()"),e.k0s(),e.EFF(127," r\xe9sout)."),e.k0s()()()(),e.j41(128,"p"),e.EFF(129,"Pour ces \xe9v\xe9nements, si vous n'appelez pas explicitement "),e.j41(130,"code"),e.EFF(131,"app.close()"),e.k0s(),e.EFF(132,", vous devez choisir de les faire fonctionner avec des signaux syst\xe8me tels que "),e.j41(133,"code"),e.EFF(134,"SIGTERM"),e.k0s(),e.EFF(135,". Voir "),e.j41(136,"a",13),e.EFF(137,"Arr\xeat de l'application"),e.k0s(),e.EFF(138," ci-dessous."),e.k0s(),e.j41(139,"blockquote",14)(140,"strong"),e.EFF(141,"Attention"),e.k0s(),e.EFF(142," Les hooks de cycle de vie \xe9num\xe9r\xe9s ci-dessus ne sont pas d\xe9clench\xe9s pour les classes \xe0 port\xe9e de requ\xeate. Les classes \xe0 port\xe9e de requ\xeate ne sont pas li\xe9es au cycle de vie de l'application et leur dur\xe9e de vie est impr\xe9visible. Elles sont cr\xe9\xe9es exclusivement pour chaque requ\xeate et sont automatiquement mises au rebut apr\xe8s l'envoi de la r\xe9ponse.\n"),e.k0s(),e.j41(143,"blockquote",15)(144,"strong"),e.EFF(145,"Astuce"),e.k0s(),e.EFF(146," L'ordre d'ex\xe9cution de "),e.j41(147,"code"),e.EFF(148,"onModuleInit()"),e.k0s(),e.EFF(149," et "),e.j41(150,"code"),e.EFF(151,"onApplicationBootstrap()"),e.k0s(),e.EFF(152," d\xe9pend directement de l'ordre d'importation des modules, en attendant le hook pr\xe9c\xe9dent.\n"),e.k0s(),e.j41(153,"h4",16)(154,"span"),e.EFF(155,"Usage"),e.k0s()(),e.j41(156,"p"),e.EFF(157,"Chaque crochet du cycle de vie est repr\xe9sent\xe9 par une interface. Les interfaces sont techniquement optionnelles car elles n'existent pas apr\xe8s la compilation de TypeScript. N\xe9anmoins, c'est une bonne pratique de les utiliser afin de b\xe9n\xe9ficier d'un typage fort et des outils de l'\xe9diteur. Pour enregistrer un crochet de cycle de vie, impl\xe9mentez l'interface appropri\xe9e. Par exemple, pour enregistrer une m\xe9thode \xe0 appeler pendant l'initialisation du module sur une classe particuli\xe8re (par exemple, Controller, Provider ou Module), impl\xe9menter l'interface "),e.j41(158,"code"),e.EFF(159,"OnModuleInit"),e.k0s(),e.EFF(160," en fournissant une m\xe9thode "),e.j41(161,"code"),e.EFF(162,"onModuleInit()"),e.k0s(),e.EFF(163,", comme montr\xe9 ci-dessous :"),e.k0s(),e.j41(164,"app-copy-button",17)(165,"span",18),e.nrm(166,"app-tabs",null,1),e.k0s(),e.j41(168,"pre")(169,"code",19),e.EFF(170,"\nimport { Injectable, OnModuleInit } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService implements OnModuleInit {\n  onModuleInit() {\n    console.log(`The module has been initialized.`);\n  }\n}\n"),e.k0s()(),e.j41(171,"pre")(172,"code",19),e.EFF(173,"\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService {\n  onModuleInit() {\n    console.log(`The module has been initialized.`);\n  }\n}\n"),e.k0s()()(),e.j41(174,"h4",20)(175,"span"),e.EFF(176,"Initialisation asynchrone"),e.k0s()(),e.j41(177,"p"),e.EFF(178,"Les crochets "),e.j41(179,"code"),e.EFF(180,"OnModuleInit"),e.k0s(),e.EFF(181," et "),e.j41(182,"code"),e.EFF(183,"OnApplicationBootstrap"),e.k0s(),e.EFF(184," vous permettent de diff\xe9rer le processus d'initialisation de l'application (retour d'une "),e.j41(185,"code"),e.EFF(186,"Promise"),e.k0s(),e.EFF(187," ou marquage de la m\xe9thode comme "),e.j41(188,"code"),e.EFF(189,"async"),e.k0s(),e.EFF(190," et "),e.j41(191,"code"),e.EFF(192,"await"),e.k0s(),e.EFF(193," un ach\xe8vement de m\xe9thode asynchrone dans le corps de la m\xe9thode)."),e.k0s(),e.j41(194,"app-copy-button",17)(195,"span",18),e.nrm(196,"app-tabs",null,2),e.k0s(),e.j41(198,"pre")(199,"code",19),e.EFF(200,"\nasync onModuleInit(): Promise<void> {\n  await this.fetch();\n}\n"),e.k0s()(),e.j41(201,"pre")(202,"code",19),e.EFF(203,"\nasync onModuleInit() {\n  await this.fetch();\n}\n"),e.k0s()()(),e.j41(204,"h4",21)(205,"span"),e.EFF(206,"Arr\xeat de l'application"),e.k0s()(),e.j41(207,"p"),e.EFF(208,"Les hooks "),e.j41(209,"code"),e.EFF(210,"onModuleDestroy()"),e.k0s(),e.EFF(211,", "),e.j41(212,"code"),e.EFF(213,"beforeApplicationShutdown()"),e.k0s(),e.EFF(214," et "),e.j41(215,"code"),e.EFF(216,"onApplicationShutdown()"),e.k0s(),e.EFF(217," sont appel\xe9s dans la phase de terminaison (en r\xe9ponse \xe0 un appel explicite \xe0 "),e.j41(218,"code"),e.EFF(219,"app.close()"),e.k0s(),e.EFF(220," ou \xe0 la r\xe9ception de signaux syst\xe8me tels que SIGTERM si l'option est choisie). Cette fonctionnalit\xe9 est souvent utilis\xe9e avec "),e.j41(221,"a",22),e.EFF(222,"Kubernetes"),e.k0s(),e.EFF(223," pour g\xe9rer les cycles de vie des conteneurs, par "),e.j41(224,"a",23),e.EFF(225,"Heroku"),e.k0s(),e.EFF(226," pour les dynos ou des services similaires."),e.k0s(),e.j41(227,"p"),e.EFF(228,"Les listeners de hooks d'arr\xeat consomment des ressources syst\xe8me, ils sont donc d\xe9sactiv\xe9s par d\xe9faut. Pour utiliser les hooks d'arr\xeat, vous "),e.j41(229,"strong"),e.EFF(230,"devez activer les listeners"),e.k0s(),e.EFF(231," en appelant "),e.j41(232,"code"),e.EFF(233,"enableShutdownHooks()"),e.k0s(),e.EFF(234," :"),e.k0s(),e.j41(235,"app-copy-button")(236,"pre")(237,"code",19),e.EFF(238,"\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  // Commence \xe0 \xe9couter les hooks d'arr\xeat\n  app.enableShutdownHooks();\n\n  await app.listen(process.env.PORT ?? 3000);\n}\nbootstrap();\n"),e.k0s()()(),e.j41(239,"blockquote",14)(240,"strong"),e.EFF(241,"Attention"),e.k0s(),e.EFF(242," En raison des limitations inh\xe9rentes \xe0 la plate-forme, NestJS a un support limit\xe9 pour les hooks d'arr\xeat d'application sous Windows. Vous pouvez vous attendre \xe0 ce que "),e.j41(243,"code"),e.EFF(244,"SIGINT"),e.k0s(),e.EFF(245," fonctionne, ainsi que "),e.j41(246,"code"),e.EFF(247,"SIGBREAK"),e.k0s(),e.EFF(248," et dans une certaine mesure "),e.j41(249,"code"),e.EFF(250,"SIGHUP"),e.k0s(),e.EFF(251," - "),e.j41(252,"a",24),e.EFF(253,"en savoir plus"),e.k0s(),e.EFF(254,". Cependant, "),e.j41(255,"code"),e.EFF(256,"SIGTERM"),e.k0s(),e.EFF(257," ne fonctionnera jamais sous Windows car tuer un processus dans le gestionnaire de t\xe2ches est inconditionnel, \"c'est-\xe0-dire qu'il n'y a aucun moyen pour une application de le d\xe9tecter ou de l'emp\xeacher\". Voici une "),e.j41(258,"a",25),e.EFF(259,"documentation pertinente"),e.k0s(),e.EFF(260," de libuv pour en savoir plus sur la fa\xe7on dont "),e.j41(261,"code"),e.EFF(262,"SIGINT"),e.k0s(),e.EFF(263,", "),e.j41(264,"code"),e.EFF(265,"SIGBREAK"),e.k0s(),e.EFF(266," et d'autres sont g\xe9r\xe9s sous Windows. Voir aussi la documentation Node.js de "),e.j41(267,"a",24),e.EFF(268,"Process Signal Events"),e.k0s()(),e.j41(269,"blockquote",15)(270,"strong"),e.EFF(271,"Info"),e.k0s(),e.j41(272,"code"),e.EFF(273,"enableShutdownHooks"),e.k0s(),e.EFF(274," consomme de la m\xe9moire en d\xe9marrant des listeners. Dans les cas o\xf9 vous ex\xe9cutez plusieurs applications Nest dans un seul processus Node (par exemple, lorsque vous ex\xe9cutez des tests parall\xe8les avec Jest), Node peut se plaindre d'un nombre excessif de processus d'\xe9coute. Pour cette raison, "),e.j41(275,"code"),e.EFF(276,"enableShutdownHooks"),e.k0s(),e.EFF(277," n'est pas activ\xe9 par d\xe9faut. Soyez conscient de cette condition lorsque vous ex\xe9cutez plusieurs instances dans un seul processus Node.\n"),e.k0s(),e.j41(278,"p"),e.EFF(279,"Lorsque l'application re\xe7oit un signal d'arr\xeat, elle appelle toutes les m\xe9thodes enregistr\xe9es "),e.j41(280,"code"),e.EFF(281,"onModuleDestroy()"),e.k0s(),e.EFF(282,", "),e.j41(283,"code"),e.EFF(284,"beforeApplicationShutdown()"),e.k0s(),e.EFF(285,", puis "),e.j41(286,"code"),e.EFF(287,"onApplicationShutdown()"),e.k0s(),e.EFF(288," (dans la s\xe9quence d\xe9crite ci-dessus) avec le signal correspondant comme premier param\xe8tre. Si une fonction enregistr\xe9e attend un appel asynchrone (renvoie une promesse), Nest ne continuera pas dans la s\xe9quence jusqu'\xe0 ce que la promesse soit r\xe9solue ou rejet\xe9e."),e.k0s(),e.j41(289,"app-copy-button",17)(290,"span",18),e.nrm(291,"app-tabs",null,3),e.k0s(),e.j41(293,"pre")(294,"code",19),e.EFF(295,'\n@Injectable()\nclass UsersService implements OnApplicationShutdown {\n  onApplicationShutdown(signal: string) {\n    console.log(signal); // e.g. "SIGINT"\n  }\n}\n'),e.k0s()(),e.j41(296,"pre")(297,"code",19),e.EFF(298,'\n@Injectable()\nclass UsersService implements OnApplicationShutdown {\n  onApplicationShutdown(signal) {\n    console.log(signal); // e.g. "SIGINT"\n  }\n}\n'),e.k0s()()(),e.j41(299,"blockquote",15)(300,"strong"),e.EFF(301,"Info"),e.k0s(),e.EFF(302," Appeler "),e.j41(303,"code"),e.EFF(304,"app.close()"),e.k0s(),e.EFF(305," ne termine pas le processus Node mais d\xe9clenche seulement les hooks "),e.j41(306,"code"),e.EFF(307,"onModuleDestroy()"),e.k0s(),e.EFF(308," et "),e.j41(309,"code"),e.EFF(310,"onApplicationShutdown()"),e.k0s(),e.EFF(311,", donc s'il y a des intervalles, des t\xe2ches de fond qui tournent longtemps, etc. le processus ne sera pas automatiquement termin\xe9.\n"),e.k0s()()),2&t){const u=e.sdS(167),r=e.sdS(197),a=e.sdS(292);e.R7$(168),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(27),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(92),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive)}},dependencies:[f.O,E.a,p.z],encapsulation:2,changeDetection:0})}return s})(),T=(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-module-ref"]],features:[e.Vt3],decls:286,vars:58,consts:[["contentReference",""],["appc86e8831a3e4c7f064ea1e4993afb86766a02eb3",""],["app0b5a366f63c86e6652a56f08080f111b02eba454",""],["app01d21bdcbac1208d25eb817a6dd6b43abd529eda",""],["app4abdc761960228dcc4038292a1019a01a5f0d1c3",""],["app8d4bc6840e7cfb21274aad4ac98fd3152b5d3fda",""],["appeb2cd000e9c70d5d81802d43a0e6ddfc05b96ed2",""],["app63cd120023eebb3747bb6608244803eb25c7704b",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/module-reference.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","r\xe9f\xe9rence-de-module"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","r\xe9cup\xe9rer-des-instances"],[1,"warning"],["href","/fundamentals/module-ref#r\xe9soudre-les-fournisseurs-\xe0-port\xe9e-r\xe9duite"],["routerLink","/fundamentals/injection-scopes"],["appAnchor","","id","r\xe9soudre-les-fournisseurs-\xe0-port\xe9e-r\xe9duite"],["appAnchor","","id","enregistrement-du-fournisseur-request"],["appAnchor","","id","obtenir-la-sous-arborescence-actuelle"],["href","/fundamentals/injection-scopes#requ%C3%AAte-au-fournisseur"],["appAnchor","","id","instancier-des-classes-personnalis\xe9es-de-mani\xe8re-dynamique"]],template:function(t,o){if(1&t&&(e.j41(0,"div",8,0)(2,"div",9)(3,"a",10),e.nrm(4,"i",11),e.k0s()(),e.j41(5,"h3",12),e.EFF(6,"R\xe9f\xe9rence de module"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Nest fournit la classe "),e.j41(9,"code"),e.EFF(10,"ModuleRef"),e.k0s(),e.EFF(11," pour naviguer dans la liste interne des fournisseurs et obtenir une r\xe9f\xe9rence \xe0 n'importe quel fournisseur en utilisant son jeton d'injection comme cl\xe9 de recherche. La classe "),e.j41(12,"code"),e.EFF(13,"ModuleRef"),e.k0s(),e.EFF(14," fournit \xe9galement un moyen d'instancier dynamiquement des fournisseurs statiques et \xe0 port\xe9e. La classe "),e.j41(15,"code"),e.EFF(16,"ModuleRef"),e.k0s(),e.EFF(17," peut \xeatre inject\xe9e dans une classe de la mani\xe8re habituelle :"),e.k0s(),e.j41(18,"app-copy-button",13)(19,"span",14),e.EFF(20),e.nI1(21,"extension"),e.nrm(22,"app-tabs",null,1),e.k0s(),e.j41(24,"pre")(25,"code",15),e.EFF(26,"\n@Injectable()\nexport class CatsService {\n  constructor(private moduleRef: ModuleRef) {}\n}\n"),e.k0s()(),e.j41(27,"pre")(28,"code",15),e.EFF(29,"\n@Injectable()\n@Dependencies(ModuleRef)\nexport class CatsService {\n  constructor(moduleRef) {\n    this.moduleRef = moduleRef;\n  }\n}\n"),e.k0s()()(),e.j41(30,"blockquote",16)(31,"strong"),e.EFF(32,"Astuce"),e.k0s(),e.EFF(33," La classe "),e.j41(34,"code"),e.EFF(35,"ModuleRef"),e.k0s(),e.EFF(36," est import\xe9e du package "),e.j41(37,"code"),e.EFF(38,"@nestjs/core"),e.k0s(),e.EFF(39,".\n"),e.k0s(),e.j41(40,"h4",17)(41,"span"),e.EFF(42,"R\xe9cup\xe9rer des instances"),e.k0s()(),e.j41(43,"p"),e.EFF(44,"L'instance "),e.j41(45,"code"),e.EFF(46,"ModuleRef"),e.k0s(),e.EFF(47," (ci-apr\xe8s nous nous y r\xe9f\xe9rerons en tant que "),e.j41(48,"strong"),e.EFF(49,"r\xe9f\xe9rence de module"),e.k0s(),e.EFF(50,") a une m\xe9thode "),e.j41(51,"code"),e.EFF(52,"get()"),e.k0s(),e.EFF(53,". Par d\xe9faut, cette m\xe9thode renvoie un fournisseur, un contr\xf4leur ou un objet injectable (par exemple, une garde, un intercepteur, etc.) qui a \xe9t\xe9 enregistr\xe9 et instanci\xe9 dans le "),e.j41(54,"strong"),e.EFF(55,"module actuel"),e.k0s(),e.EFF(56," en utilisant son jeton d'injection/nom de classe. Si l'instance n'est pas trouv\xe9e, une exception sera lev\xe9e."),e.k0s(),e.j41(57,"app-copy-button",13)(58,"span",14),e.EFF(59),e.nI1(60,"extension"),e.nrm(61,"app-tabs",null,2),e.k0s(),e.j41(63,"pre")(64,"code",15),e.EFF(65,"\n@Injectable()\nexport class CatsService implements OnModuleInit {\n  private service: Service;\n  constructor(private moduleRef: ModuleRef) {}\n\n  onModuleInit() {\n    this.service = this.moduleRef.get(Service);\n  }\n}\n"),e.k0s()(),e.j41(66,"pre")(67,"code",15),e.EFF(68,"\n@Injectable()\n@Dependencies(ModuleRef)\nexport class CatsService {\n  constructor(moduleRef) {\n    this.moduleRef = moduleRef;\n  }\n\n  onModuleInit() {\n    this.service = this.moduleRef.get(Service);\n  }\n}\n"),e.k0s()()(),e.j41(69,"blockquote",18)(70,"strong"),e.EFF(71,"Attention"),e.k0s(),e.EFF(72," Vous ne pouvez pas r\xe9cup\xe9rer les fournisseurs \xe0 port\xe9e (transient ou request) avec la m\xe9thode "),e.j41(73,"code"),e.EFF(74,"get()"),e.k0s(),e.EFF(75,". Utilisez plut\xf4t la technique d\xe9crite "),e.j41(76,"a",19),e.EFF(77,"ci-dessous"),e.k0s(),e.EFF(78,". Apprenez \xe0 contr\xf4ler les port\xe9es "),e.j41(79,"a",20),e.EFF(80,"ici"),e.k0s(),e.EFF(81,".\n"),e.k0s(),e.j41(82,"p"),e.EFF(83,"Pour r\xe9cup\xe9rer un fournisseur dans le contexte global (par exemple, si le fournisseur a \xe9t\xe9 inject\xe9 dans un module diff\xe9rent), passez l'option "),e.j41(84,"code"),e.EFF(85),e.k0s(),e.EFF(86," comme second argument de "),e.j41(87,"code"),e.EFF(88,"get()"),e.k0s(),e.EFF(89,"."),e.k0s(),e.j41(90,"app-copy-button")(91,"pre")(92,"code",15),e.EFF(93,"\nthis.moduleRef.get(Service, { strict: false });\n"),e.k0s()()(),e.j41(94,"h4",21)(95,"span"),e.EFF(96,"R\xe9soudre les fournisseurs \xe0 port\xe9e r\xe9duite"),e.k0s()(),e.j41(97,"p"),e.EFF(98,"Pour r\xe9soudre dynamiquement un fournisseur \xe0 port\xe9e (transient ou \xe0 request), utilisez la m\xe9thode "),e.j41(99,"code"),e.EFF(100,"resolve()"),e.k0s(),e.EFF(101,", en passant le jeton d'injection du fournisseur comme argument."),e.k0s(),e.j41(102,"app-copy-button",13)(103,"span",14),e.EFF(104),e.nI1(105,"extension"),e.nrm(106,"app-tabs",null,3),e.k0s(),e.j41(108,"pre")(109,"code",15),e.EFF(110,"\n@Injectable()\nexport class CatsService implements OnModuleInit {\n  private transientService: TransientService;\n  constructor(private moduleRef: ModuleRef) {}\n\n  async onModuleInit() {\n    this.transientService = await this.moduleRef.resolve(TransientService);\n  }\n}\n"),e.k0s()(),e.j41(111,"pre")(112,"code",15),e.EFF(113,"\n@Injectable()\n@Dependencies(ModuleRef)\nexport class CatsService {\n  constructor(moduleRef) {\n    this.moduleRef = moduleRef;\n  }\n\n  async onModuleInit() {\n    this.transientService = await this.moduleRef.resolve(TransientService);\n  }\n}\n"),e.k0s()()(),e.j41(114,"p"),e.EFF(115,"La m\xe9thode "),e.j41(116,"code"),e.EFF(117,"resolve()"),e.k0s(),e.EFF(118," renvoie une instance unique du fournisseur, \xe0 partir de sa propre "),e.j41(119,"strong"),e.EFF(120,"sous-arborescence de conteneur DI"),e.k0s(),e.EFF(121,". Chaque sous-arbre a un "),e.j41(122,"strong"),e.EFF(123,"identifiant de contexte"),e.k0s(),e.EFF(124," unique. Par cons\xe9quent, si vous appelez cette m\xe9thode plus d'une fois et comparez les r\xe9f\xe9rences des instances, vous verrez qu'elles ne sont pas \xe9gales."),e.k0s(),e.j41(125,"app-copy-button",13)(126,"span",14),e.EFF(127),e.nI1(128,"extension"),e.nrm(129,"app-tabs",null,4),e.k0s(),e.j41(131,"pre")(132,"code",15),e.EFF(133,"\n@Injectable()\nexport class CatsService implements OnModuleInit {\n  constructor(private moduleRef: ModuleRef) {}\n\n  async onModuleInit() {\n    const transientServices = await Promise.all([\n      this.moduleRef.resolve(TransientService),\n      this.moduleRef.resolve(TransientService),\n    ]);\n    console.log(transientServices[0] === transientServices[1]); // false\n  }\n}\n"),e.k0s()(),e.j41(134,"pre")(135,"code",15),e.EFF(136,"\n@Injectable()\n@Dependencies(ModuleRef)\nexport class CatsService {\n  constructor(moduleRef) {\n    this.moduleRef = moduleRef;\n  }\n\n  async onModuleInit() {\n    const transientServices = await Promise.all([\n      this.moduleRef.resolve(TransientService),\n      this.moduleRef.resolve(TransientService),\n    ]);\n    console.log(transientServices[0] === transientServices[1]); // false\n  }\n}\n"),e.k0s()()(),e.j41(137,"p"),e.EFF(138,"Pour g\xe9n\xe9rer une seule instance \xe0 travers plusieurs appels \xe0 "),e.j41(139,"code"),e.EFF(140,"resolve()"),e.k0s(),e.EFF(141,", et s'assurer qu'ils partagent le m\xeame sous-arbre de conteneur ID g\xe9n\xe9r\xe9, vous pouvez passer un identifiant de contexte \xe0 la m\xe9thode "),e.j41(142,"code"),e.EFF(143,"resolve()"),e.k0s(),e.EFF(144,". Utilisez la classe "),e.j41(145,"code"),e.EFF(146,"ContextIdFactory"),e.k0s(),e.EFF(147," pour g\xe9n\xe9rer un identifiant de contexte. Cette classe fournit une m\xe9thode "),e.j41(148,"code"),e.EFF(149,"create()"),e.k0s(),e.EFF(150," qui retourne un identifiant unique appropri\xe9."),e.k0s(),e.j41(151,"app-copy-button",13)(152,"span",14),e.EFF(153),e.nI1(154,"extension"),e.nrm(155,"app-tabs",null,5),e.k0s(),e.j41(157,"pre")(158,"code",15),e.EFF(159,"\n@Injectable()\nexport class CatsService implements OnModuleInit {\n  constructor(private moduleRef: ModuleRef) {}\n\n  async onModuleInit() {\n    const contextId = ContextIdFactory.create();\n    const transientServices = await Promise.all([\n      this.moduleRef.resolve(TransientService, contextId),\n      this.moduleRef.resolve(TransientService, contextId),\n    ]);\n    console.log(transientServices[0] === transientServices[1]); // true\n  }\n}\n"),e.k0s()(),e.j41(160,"pre")(161,"code",15),e.EFF(162,"\n@Injectable()\n@Dependencies(ModuleRef)\nexport class CatsService {\n  constructor(moduleRef) {\n    this.moduleRef = moduleRef;\n  }\n\n  async onModuleInit() {\n    const contextId = ContextIdFactory.create();\n    const transientServices = await Promise.all([\n      this.moduleRef.resolve(TransientService, contextId),\n      this.moduleRef.resolve(TransientService, contextId),\n    ]);\n    console.log(transientServices[0] === transientServices[1]); // true\n  }\n}\n"),e.k0s()()(),e.j41(163,"blockquote",16)(164,"strong"),e.EFF(165,"Astuce"),e.k0s(),e.EFF(166," La classe "),e.j41(167,"code"),e.EFF(168,"ContextIdFactory"),e.k0s(),e.EFF(169," est import\xe9e du package "),e.j41(170,"code"),e.EFF(171,"@nestjs/core"),e.k0s(),e.EFF(172,".\n"),e.k0s(),e.j41(173,"h4",22)(174,"span"),e.EFF(175,"Enregistrement du fournisseur "),e.j41(176,"code"),e.EFF(177,"REQUEST"),e.k0s(),e.EFF(178,"."),e.k0s()(),e.j41(179,"p"),e.EFF(180,"Les identifiants de contexte g\xe9n\xe9r\xe9s manuellement (avec "),e.j41(181,"code"),e.EFF(182,"ContextIdFactory.create()"),e.k0s(),e.EFF(183,") repr\xe9sentent des sous-arbres ID dans lesquels le fournisseur "),e.j41(184,"code"),e.EFF(185,"REQUEST"),e.k0s(),e.EFF(186," est "),e.j41(187,"code"),e.EFF(188,"ind\xe9fini"),e.k0s(),e.EFF(189," car ils ne sont pas instanci\xe9s et g\xe9r\xe9s par le syst\xe8me d'injection de d\xe9pendances de Nest."),e.k0s(),e.j41(190,"p"),e.EFF(191,"Pour enregistrer un objet "),e.j41(192,"code"),e.EFF(193,"REQUEST"),e.k0s(),e.EFF(194," personnalis\xe9 pour un sous-arbre ID cr\xe9\xe9 manuellement, utilisez la m\xe9thode "),e.j41(195,"code"),e.EFF(196,"ModuleRef#registerRequestByContextId()"),e.k0s(),e.EFF(197,", comme suit :"),e.k0s(),e.j41(198,"app-copy-button")(199,"pre")(200,"code",15),e.EFF(201,"\nconst contextId = ContextIdFactory.create();\nthis.moduleRef.registerRequestByContextId(/* YOUR_REQUEST_OBJECT */, contextId);\n"),e.k0s()()(),e.j41(202,"h4",23)(203,"span"),e.EFF(204,"Obtenir la sous-arborescence actuelle"),e.k0s()(),e.j41(205,"p"),e.EFF(206,"Il peut arriver que vous souhaitiez r\xe9soudre une instance d'un fournisseur \xe0 port\xe9e de requ\xeate dans un "),e.j41(207,"strong"),e.EFF(208,"contexte de requ\xeate"),e.k0s(),e.EFF(209,". Disons que "),e.j41(210,"code"),e.EFF(211,"CatsService"),e.k0s(),e.EFF(212," est \xe0 port\xe9e de requ\xeate et que vous voulez r\xe9soudre l'instance de "),e.j41(213,"code"),e.EFF(214,"CatsRepository"),e.k0s(),e.EFF(215," qui est aussi marqu\xe9e comme un fournisseur \xe0 port\xe9e de requ\xeate. Afin de partager le m\xeame sous-arbre du conteneur ID, vous devez obtenir l'identifiant du contexte actuel au lieu d'en g\xe9n\xe9rer un nouveau (par exemple, avec la fonction "),e.j41(216,"code"),e.EFF(217,"ContextIdFactory.create()"),e.k0s(),e.EFF(218,", comme montr\xe9 ci-dessus). Pour obtenir l'identifiant du contexte actuel, commencez par injecter l'objet de requ\xeate en utilisant le d\xe9corateur "),e.j41(219,"code"),e.EFF(220,"@Inject()"),e.k0s(),e.EFF(221,"."),e.k0s(),e.j41(222,"app-copy-button",13)(223,"span",14),e.EFF(224),e.nI1(225,"extension"),e.nrm(226,"app-tabs",null,6),e.k0s(),e.j41(228,"pre")(229,"code",15),e.EFF(230,"\n@Injectable()\nexport class CatsService {\n  constructor(\n    @Inject(REQUEST) private request: Record<string, unknown>,\n  ) {}\n}\n"),e.k0s()(),e.j41(231,"pre")(232,"code",15),e.EFF(233,"\n@Injectable()\n@Dependencies(REQUEST)\nexport class CatsService {\n  constructor(request) {\n    this.request = request;\n  }\n}\n"),e.k0s()()(),e.j41(234,"blockquote",16)(235,"strong"),e.EFF(236,"Astuce"),e.k0s(),e.EFF(237," Pour en savoir plus sur le fournisseur de la requ\xeate "),e.j41(238,"a",24),e.EFF(239,"ici"),e.k0s(),e.EFF(240,".\n"),e.k0s(),e.j41(241,"p"),e.EFF(242,"Maintenant, utilisez la m\xe9thode "),e.j41(243,"code"),e.EFF(244,"getByRequest()"),e.k0s(),e.EFF(245," de la classe "),e.j41(246,"code"),e.EFF(247,"ContextIdFactory"),e.k0s(),e.EFF(248," pour cr\xe9er un identifiant de contexte bas\xe9 sur l'objet de requ\xeate, et passez-le \xe0 l'appel "),e.j41(249,"code"),e.EFF(250,"resolve()"),e.k0s(),e.EFF(251," :"),e.k0s(),e.j41(252,"app-copy-button")(253,"pre")(254,"code",15),e.EFF(255,"\nconst contextId = ContextIdFactory.getByRequest(this.request);\nconst catsRepository = await this.moduleRef.resolve(CatsRepository, contextId);\n"),e.k0s()()(),e.j41(256,"h4",25)(257,"span"),e.EFF(258,"Instancier des classes personnalis\xe9es de mani\xe8re dynamique"),e.k0s()(),e.j41(259,"p"),e.EFF(260,"Pour instancier dynamiquement une classe qui "),e.j41(261,"strong"),e.EFF(262,"n'a pas \xe9t\xe9 pr\xe9alablement enregistr\xe9e"),e.k0s(),e.EFF(263," en tant que "),e.j41(264,"strong"),e.EFF(265,"fournisseur"),e.k0s(),e.EFF(266,", utilisez la m\xe9thode "),e.j41(267,"code"),e.EFF(268,"create()"),e.k0s(),e.EFF(269," de la r\xe9f\xe9rence du module."),e.k0s(),e.j41(270,"app-copy-button",13)(271,"span",14),e.EFF(272),e.nI1(273,"extension"),e.nrm(274,"app-tabs",null,7),e.k0s(),e.j41(276,"pre")(277,"code",15),e.EFF(278,"\n@Injectable()\nexport class CatsService implements OnModuleInit {\n  private catsFactory: CatsFactory;\n  constructor(private moduleRef: ModuleRef) {}\n\n  async onModuleInit() {\n    this.catsFactory = await this.moduleRef.create(CatsFactory);\n  }\n}\n"),e.k0s()(),e.j41(279,"pre")(280,"code",15),e.EFF(281,"\n@Injectable()\n@Dependencies(ModuleRef)\nexport class CatsService {\n  constructor(moduleRef) {\n    this.moduleRef = moduleRef;\n  }\n\n  async onModuleInit() {\n    this.catsFactory = await this.moduleRef.create(CatsFactory);\n  }\n}\n"),e.k0s()()(),e.j41(282,"p"),e.EFF(283,"Cette technique permet d'instancier de mani\xe8re conditionnelle diff\xe9rentes classes en dehors du conteneur du framework."),e.k0s(),e.j41(284,"p"),e.nrm(285,"app-banner-devtools"),e.k0s()()),2&t){const u=e.sdS(23),r=e.sdS(62),a=e.sdS(107),c=e.sdS(130),j=e.sdS(156),F=e.sdS(227),m=e.sdS(275);e.R7$(20),e.SpI(" ",e.i5U(21,37,"cats.service",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(32),e.SpI(" ",e.i5U(60,40,"cats.service",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(19),e.Lme("","{"," strict : false ","}",""),e.R7$(19),e.SpI(" ",e.i5U(105,43,"cats.service",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(16),e.SpI(" ",e.i5U(128,46,"cats.service",c.isJsActive),"\n"),e.R7$(4),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(19),e.SpI(" ",e.i5U(154,49,"cats.service",j.isJsActive),"\n"),e.R7$(4),e.AVh("hide",j.isJsActive),e.R7$(3),e.AVh("hide",!j.isJsActive),e.R7$(64),e.SpI(" ",e.i5U(225,52,"cats.service",F.isJsActive),"\n"),e.R7$(4),e.AVh("hide",F.isJsActive),e.R7$(3),e.AVh("hide",!F.isJsActive),e.R7$(41),e.SpI(" ",e.i5U(273,55,"cats.service",m.isJsActive),"\n"),e.R7$(4),e.AVh("hide",m.isJsActive),e.R7$(3),e.AVh("hide",!m.isJsActive)}},dependencies:[f.O,E.a,A._,p.z,d.Wk,k.M],encapsulation:2,changeDetection:0})}return s})();var N=i(8149);const L=[{path:"dynamic-modules",component:I,data:{title:"Modules dynamiques"}},{path:"dependency-injection",redirectTo:"custom-providers"},{path:"custom-providers",component:M,data:{title:"Fournisseurs personnalis\xe9s"}},{path:"platform-agnosticism",component:(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-platform-agnosticism"]],features:[e.Vt3],decls:41,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/platform-agnosticism.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","agnosticisme-de-plateforme"],["appAnchor","","id","construire-une-fois-utiliser-partout"],["routerLink","/microservices/basics"],["routerLink","/websockets/gateways"],["routerLink","/graphql/quick-start"],["href","/application-context"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Agnosticisme de plateforme"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Nest est un framework ind\xe9pendant de toute plateforme. Cela signifie que vous pouvez d\xe9velopper des "),e.j41(9,"strong"),e.EFF(10,"parties logiques r\xe9utilisables"),e.k0s(),e.EFF(11," qui peuvent \xeatre utilis\xe9es dans diff\xe9rents types d'applications. Par exemple, la plupart des composants peuvent \xeatre r\xe9utilis\xe9s sans changement \xe0 travers diff\xe9rents frameworks de serveurs HTTP sous-jacents (par exemple, Express et Fastify), et m\xeame \xe0 travers diff\xe9rents "),e.j41(12,"em"),e.EFF(13,"types"),e.k0s(),e.EFF(14," d'applications (par exemple, des frameworks de serveurs HTTP, des microservices avec diff\xe9rentes couches de transport, et des WebSockets)."),e.k0s(),e.j41(15,"h4",6)(16,"span"),e.EFF(17,"Construire une fois, utiliser partout"),e.k0s()(),e.j41(18,"p"),e.EFF(19,"La section "),e.j41(20,"strong"),e.EFF(21,"Vue d'ensemble"),e.k0s(),e.EFF(22," de la documentation montre principalement des techniques de codage utilisant des frameworks de serveurs HTTP (par exemple, des applications fournissant une API REST ou fournissant une application rendue c\xf4t\xe9 serveur de style MVC). Cependant, tous ces blocs de construction peuvent \xeatre utilis\xe9s au-dessus de diff\xe9rentes couches de transport ("),e.j41(23,"a",7),e.EFF(24,"microservices"),e.k0s(),e.EFF(25," ou "),e.j41(26,"a",8),e.EFF(27,"websockets"),e.k0s(),e.EFF(28,")."),e.k0s(),e.j41(29,"p"),e.EFF(30,"En outre, Nest est livr\xe9 avec un module "),e.j41(31,"a",9),e.EFF(32,"GraphQL"),e.k0s(),e.EFF(33," d\xe9di\xe9. Vous pouvez utiliser GraphQL comme couche d'API de mani\xe8re interchangeable avec une API REST."),e.k0s(),e.j41(34,"p"),e.EFF(35,"En outre, la fonctionnalit\xe9 de "),e.j41(36,"a",10),e.EFF(37,"contexte d'application"),e.k0s(),e.EFF(38," permet de cr\xe9er n'importe quel type d'application Node.js - y compris des t\xe2ches CRON et des applications CLI - au-dessus de Nest."),e.k0s(),e.j41(39,"p"),e.EFF(40,"Nest aspire \xe0 \xeatre une plateforme \xe0 part enti\xe8re pour les applications Node.js qui apporte un niveau sup\xe9rieur de modularit\xe9 et de r\xe9utilisation \xe0 vos applications. Construisez une fois, utilisez partout !"),e.k0s()())},dependencies:[E.a,d.Wk],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Agnosticisme de plateforme"}},{path:"async-components",redirectTo:"async-providers"},{path:"async-providers",component:x,data:{title:"Fournisseurs asynchrones"}},{path:"module-ref",component:T,data:{title:"R\xe9f\xe9rence de module"}},{path:"lazy-loading-modules",component:(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-lazy-loading"]],features:[e.Vt3],decls:226,vars:8,consts:[["contentReference",""],["app8da8d10f27f4959662891f8efa66f9791e0baa09",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/lazy-loading-modules.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","lazy-loading-de-modules"],[1,"info"],["rel","nofollow","target","_blank","href","https://angular.dev/"],["rel","nofollow","target","_blank","href","https://angular.dev/guide/ngmodules/lazy-loading#lazy-loading-basics"],[1,"warning"],["href","/fundamentals/lifecycle-events"],["appAnchor","","id","pour-commencer"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"language-bash"],["routerLink","/fundamentals/module-ref"],[1,"language-json"],["rel","nofollow","target","_blank","href","https://webpack.js.org/guides/code-splitting/"],["appAnchor","","id","contr\xf4leurs-passerelles-et-r\xe9solveurs-paresseux"],[1,"error"],["routerLink","/graphql/resolvers"],["routerLink","/websockets/gateways"],["appAnchor","","id","cas-dutilisation-courants"]],template:function(t,o){if(1&t&&(e.j41(0,"div",2,0)(2,"div",3)(3,"a",4),e.nrm(4,"i",5),e.k0s()(),e.j41(5,"h3",6),e.EFF(6,"Lazy loading de modules"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Par d\xe9faut, les modules sont charg\xe9s avec avidit\xe9, ce qui signifie que d\xe8s que l'application est charg\xe9e, tous les modules le sont aussi, qu'ils soient n\xe9cessaires ou non dans l'imm\xe9diat. Bien que cela convienne \xe0 la plupart des applications, cela peut devenir un goulot d'\xe9tranglement pour les applications/travailleurs fonctionnant dans un "),e.j41(9,"strong"),e.EFF(10,"environnement sans serveur"),e.k0s(),e.EFF(11,', o\xf9 la latence de d\xe9marrage ("d\xe9marrage \xe0 froid") est cruciale.'),e.k0s(),e.j41(12,"p"),e.EFF(13,"Le lazy loading peut aider \xe0 r\xe9duire le temps de d\xe9marrage en chargeant uniquement les modules requis par l'invocation sp\xe9cifique de la fonction serverless. En outre, vous pouvez \xe9galement charger d'autres modules de mani\xe8re asynchrone une fois que la fonction sans serveur est \"chaude\" afin d'acc\xe9l\xe9rer encore davantage le temps d'amor\xe7age pour les appels ult\xe9rieurs (enregistrement diff\xe9r\xe9 des modules)."),e.k0s(),e.j41(14,"blockquote",7)(15,"strong"),e.EFF(16,"Astuce"),e.k0s(),e.EFF(17," Si vous \xeates familier avec le framework "),e.j41(18,"strong")(19,"a",8),e.EFF(20,"Angular"),e.k0s()(),e.EFF(21,', vous avez peut-\xeatre d\xe9j\xe0 vu le terme "'),e.j41(22,"a",9),e.EFF(23,"modules lazy-loading"),e.k0s(),e.EFF(24,'". Sachez que cette technique est '),e.j41(25,"strong"),e.EFF(26,"fonctionnellement diff\xe9rente"),e.k0s(),e.EFF(27," dans Nest et qu'il s'agit donc d'une fonctionnalit\xe9 enti\xe8rement diff\xe9rente qui partage des conventions de d\xe9nomination similaires.\n"),e.k0s(),e.j41(28,"blockquote",10)(29,"strong"),e.EFF(30,"Attention"),e.k0s(),e.EFF(31," Notez que les "),e.j41(32,"a",11),e.EFF(33,"m\xe9thodes d'accrochage au cycle de vie"),e.k0s(),e.EFF(34," ne sont pas invoqu\xe9es dans les modules et services charg\xe9s paresseusement.\n"),e.k0s(),e.j41(35,"h4",12)(36,"span"),e.EFF(37,"Pour commencer"),e.k0s()(),e.j41(38,"p"),e.EFF(39,"Pour charger les modules \xe0 la demande, Nest fournit la classe "),e.j41(40,"code"),e.EFF(41,"LazyModuleLoader"),e.k0s(),e.EFF(42," qui peut \xeatre inject\xe9e dans une classe de la mani\xe8re habituelle :"),e.k0s(),e.j41(43,"app-copy-button",13)(44,"span",14),e.EFF(45),e.nI1(46,"extension"),e.nrm(47,"app-tabs",null,1),e.k0s(),e.j41(49,"pre")(50,"code",15),e.EFF(51,"\n@Injectable()\nexport class CatsService {\n  constructor(private lazyModuleLoader: LazyModuleLoader) {}\n}\n"),e.k0s()(),e.j41(52,"pre")(53,"code",15),e.EFF(54,"\n@Injectable()\n@Dependencies(LazyModuleLoader)\nexport class CatsService {\n  constructor(lazyModuleLoader) {\n    this.lazyModuleLoader = lazyModuleLoader;\n  }\n}\n"),e.k0s()()(),e.j41(55,"blockquote",7)(56,"strong"),e.EFF(57,"Astuce"),e.k0s(),e.EFF(58," La classe "),e.j41(59,"code"),e.EFF(60,"LazyModuleLoader"),e.k0s(),e.EFF(61," est import\xe9e du package "),e.j41(62,"code"),e.EFF(63,"@nestjs/core"),e.k0s(),e.EFF(64,".\n"),e.k0s(),e.j41(65,"p"),e.EFF(66,"Alternativement, vous pouvez obtenir une r\xe9f\xe9rence au fournisseur "),e.j41(67,"code"),e.EFF(68,"LazyModuleLoader"),e.k0s(),e.EFF(69," depuis le fichier de d\xe9marrage de votre application ("),e.j41(70,"code"),e.EFF(71,"main.ts"),e.k0s(),e.EFF(72,"), comme suit :"),e.k0s(),e.j41(73,"app-copy-button")(74,"pre")(75,"code",15),e.EFF(76,'\n// "app" repr\xe9sente une instance d\'application Nest\nconst lazyModuleLoader = app.get(LazyModuleLoader);\n'),e.k0s()()(),e.j41(77,"p"),e.EFF(78,"Une fois cette \xe9tape franchie, vous pouvez charger n'importe quel module \xe0 l'aide de la construction suivante :"),e.k0s(),e.j41(79,"app-copy-button")(80,"pre")(81,"code",15),e.EFF(82,"\nconst { LazyModule } = await import('./lazy.module');\nconst moduleRef = await this.lazyModuleLoader.load(() => LazyModule);\n"),e.k0s()()(),e.j41(83,"blockquote",7)(84,"strong"),e.EFF(85,"Astuce"),e.k0s(),e.EFF(86,' Les modules "charg\xe9s paresseusement" sont '),e.j41(87,"strong"),e.EFF(88,"mis en cache"),e.k0s(),e.EFF(89," lors de la premi\xe8re invocation de la m\xe9thode "),e.j41(90,"code"),e.EFF(91,"LazyModuleLoader#load"),e.k0s(),e.EFF(92,". Cela signifie que chaque tentative cons\xe9cutive de chargement de "),e.j41(93,"code"),e.EFF(94,"LazyModule"),e.k0s(),e.EFF(95," sera "),e.j41(96,"strong"),e.EFF(97,"tr\xe8s rapide"),e.k0s(),e.EFF(98," et retournera une instance mise en cache, au lieu de charger \xe0 nouveau le module.\n"),e.j41(99,"pre")(100,"code",16),e.EFF(101,'\nTentative de chargement de "LazyModule" : 1\ndur\xe9e: 2.379ms\nTentative de chargement de "LazyModule" : 2\ndur\xe9e: 0.294ms\nTentative de chargement de "LazyModule" : 3\ndur\xe9e: 0.303ms\n'),e.k0s()(),e.j41(102,"p"),e.EFF(103,'En outre, les modules "charg\xe9s paresseusement" partagent le m\xeame graphe de modules que ceux qui sont charg\xe9s avec empressement au d\xe9marrage de l\'application, ainsi que tous les autres modules paresseux enregistr\xe9s ult\xe9rieurement dans votre application.\nWhere '),e.j41(104,"code"),e.EFF(105,"lazy.module.ts"),e.k0s(),e.EFF(106," is a TypeScript file that exports a "),e.j41(107,"strong"),e.EFF(108,"regular Nest module"),e.k0s(),e.EFF(109," (no extra changes are required)."),e.k0s()(),e.j41(110,"p"),e.EFF(111,"La m\xe9thode "),e.j41(112,"code"),e.EFF(113,"LazyModuleLoader#load"),e.k0s(),e.EFF(114," renvoie la "),e.j41(115,"a",17),e.EFF(116,"r\xe9f\xe9rence de module"),e.k0s(),e.EFF(117," (de "),e.j41(118,"code"),e.EFF(119,"LazyModule"),e.k0s(),e.EFF(120,") qui vous permet de naviguer dans la liste interne des fournisseurs et d'obtenir une r\xe9f\xe9rence \xe0 n'importe quel fournisseur en utilisant son jeton d'injection comme cl\xe9 de recherche."),e.k0s(),e.j41(121,"p"),e.EFF(122,"Par exemple, disons que nous avons un "),e.j41(123,"code"),e.EFF(124,"LazyModule"),e.k0s(),e.EFF(125," avec la d\xe9finition suivante :"),e.k0s(),e.j41(126,"app-copy-button")(127,"pre")(128,"code",15),e.EFF(129,"\n@Module({\n  providers: [LazyService],\n  exports: [LazyService],\n})\nexport class LazyModule {}\n"),e.k0s()()(),e.j41(130,"blockquote",7)(131,"strong"),e.EFF(132,"Astuce"),e.k0s(),e.EFF(133," Les modules charg\xe9s paresseusement ne peuvent pas \xeatre enregistr\xe9s en tant que "),e.j41(134,"strong"),e.EFF(135,"modules globaux"),e.k0s(),e.EFF(136,", car cela n'a aucun sens (puisqu'ils sont enregistr\xe9s paresseusement, \xe0 la demande, lorsque tous les modules enregistr\xe9s statiquement ont d\xe9j\xe0 \xe9t\xe9 instanci\xe9s). De m\xeame, les "),e.j41(137,"strong"),e.EFF(138,"am\xe9liorateurs globaux"),e.k0s(),e.EFF(139," enregistr\xe9s (gardes/intercepteurs/etc.) "),e.j41(140,"strong"),e.EFF(141,"ne fonctionneront pas"),e.k0s(),e.EFF(142," correctement non plus.\n"),e.k0s(),e.j41(143,"p"),e.EFF(144,"Avec cela, nous pouvons obtenir une r\xe9f\xe9rence au fournisseur "),e.j41(145,"code"),e.EFF(146,"LazyService"),e.k0s(),e.EFF(147,", comme suit :"),e.k0s(),e.j41(148,"app-copy-button")(149,"pre")(150,"code",15),e.EFF(151,"\nconst { LazyModule } = await import('./lazy.module');\nconst moduleRef = await this.lazyModuleLoader.load(() => LazyModule);\n\nconst { LazyService } = await import('./lazy.service');\nconst lazyService = moduleRef.get(LazyService);\n"),e.k0s()()(),e.j41(152,"blockquote",10)(153,"strong"),e.EFF(154,"Attention"),e.k0s(),e.EFF(155," Si vous utilisez "),e.j41(156,"strong"),e.EFF(157,"Webpack"),e.k0s(),e.EFF(158,", assurez-vous de mettre \xe0 jour votre fichier "),e.j41(159,"code"),e.EFF(160,"tsconfig.json"),e.k0s(),e.EFF(161," - en r\xe9glant "),e.j41(162,"code"),e.EFF(163,"compilerOptions.module"),e.k0s(),e.EFF(164," sur "),e.j41(165,"code"),e.EFF(166,'"esnext"'),e.k0s(),e.EFF(167," et en ajoutant la propri\xe9t\xe9 "),e.j41(168,"code"),e.EFF(169,"compilerOptions.moduleResolution"),e.k0s(),e.EFF(170," avec "),e.j41(171,"code"),e.EFF(172,'"node"'),e.k0s(),e.EFF(173," comme valeur :\n"),e.j41(174,"pre")(175,"code",18),e.EFF(176,'\n{\n  "compilerOptions": {\n    "module": "esnext",\n    "moduleResolution": "node",\n    ...\n  }\n}\n'),e.k0s()(),e.j41(177,"p"),e.EFF(178,"Une fois ces options param\xe9tr\xe9es, vous pourrez tirer parti de la fonction de "),e.j41(179,"a",19),e.EFF(180,"division du code"),e.k0s(),e.EFF(181,"."),e.k0s()(),e.j41(182,"h4",20)(183,"span"),e.EFF(184,"Contr\xf4leurs, passerelles et r\xe9solveurs paresseux"),e.k0s()(),e.j41(185,"p"),e.EFF(186,"Puisque les contr\xf4leurs (ou les r\xe9solveurs dans les applications GraphQL) dans Nest repr\xe9sentent des ensembles de routes/chemins/sujets (ou requ\xeates/mutations), vous "),e.j41(187,"strong"),e.EFF(188,"ne pouvez pas les charger paresseusement"),e.k0s(),e.EFF(189," en utilisant la classe "),e.j41(190,"code"),e.EFF(191,"LazyModuleLoader"),e.k0s(),e.EFF(192,"."),e.k0s(),e.j41(193,"blockquote",21)(194,"strong"),e.EFF(195,"Attention"),e.k0s(),e.EFF(196," Les contr\xf4leurs, les "),e.j41(197,"a",22),e.EFF(198,"r\xe9solveurs"),e.k0s(),e.EFF(199,", et les "),e.j41(200,"a",23),e.EFF(201,"passerelles"),e.k0s(),e.EFF(202," enregistr\xe9s dans des modules charg\xe9s paresseusement ne se comporteront pas comme pr\xe9vu. De m\xeame, vous ne pouvez pas enregistrer des fonctions middleware (en impl\xe9mentant l'interface "),e.j41(203,"code"),e.EFF(204,"MiddlewareConsumer"),e.k0s(),e.EFF(205,") \xe0 la demande.\n"),e.k0s(),e.j41(206,"p"),e.EFF(207,"Par exemple, disons que vous construisez une API REST (application HTTP) avec un pilote Fastify sous le capot (en utilisant le package "),e.j41(208,"code"),e.EFF(209,"@nestjs/platform-fastify"),e.k0s(),e.EFF(210,"). Fastify ne vous permet pas d'enregistrer des routes apr\xe8s que l'application soit pr\xeate \xe0 \xe9couter des messages. Cela signifie que m\xeame si nous analysons les routes enregistr\xe9es dans les contr\xf4leurs du module, toutes les routes charg\xe9es paresseusement ne seront pas accessibles puisqu'il n'y a aucun moyen de les enregistrer au moment de l'ex\xe9cution."),e.k0s(),e.j41(211,"p"),e.EFF(212,"De m\xeame, certaines strat\xe9gies de transport que nous fournissons dans le cadre du package "),e.j41(213,"code"),e.EFF(214,"@nestjs/microservices"),e.k0s(),e.EFF(215," (y compris Kafka, gRPC, ou RabbitMQ) n\xe9cessitent de s'abonner/\xe9couter \xe0 des sujets/canaux sp\xe9cifiques avant que la connexion ne soit \xe9tablie. Une fois que votre application commence \xe0 \xe9couter des messages, le framework ne sera pas en mesure de s'abonner/\xe9couter de nouveaux sujets."),e.k0s(),e.j41(216,"p"),e.EFF(217,"Enfin, le package "),e.j41(218,"code"),e.EFF(219,"@nestjs/graphql"),e.k0s(),e.EFF(220," avec l'approche code first activ\xe9e g\xe9n\xe8re automatiquement le sch\xe9ma GraphQL \xe0 la vol\xe9e sur la base des m\xe9tadonn\xe9es. Cela signifie que toutes les classes doivent \xeatre charg\xe9es au pr\xe9alable. Sinon, il ne serait pas possible de cr\xe9er un sch\xe9ma appropri\xe9 et valide."),e.k0s(),e.j41(221,"h4",24)(222,"span"),e.EFF(223,"Cas d'utilisation courants"),e.k0s()(),e.j41(224,"p"),e.EFF(225,"Le plus souvent, vous verrez des modules charg\xe9s paresseusement dans des situations o\xf9 votre worker/cron job/lambda & serverless fonction/webhook doit d\xe9clencher diff\xe9rents services (diff\xe9rentes logiques) en fonction des arguments d'entr\xe9e (chemin d'acc\xe8s/date/param\xe8tres de requ\xeate, etc.). D'autre part, les modules \xe0 chargement paresseux peuvent ne pas avoir trop de sens pour les applications monolithiques, o\xf9 le temps de d\xe9marrage est plut\xf4t sans importance."),e.k0s()()),2&t){const u=e.sdS(48);e.R7$(45),e.SpI(" ",e.i5U(46,5,"cats.service",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive)}},dependencies:[f.O,E.a,p.z,d.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Lazy loading de modules"}},{path:"unit-testing",redirectTo:"testing"},{path:"e2e-testing",redirectTo:"testing"},{path:"testing",component:(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-unit-testing"]],features:[e.Vt3],decls:567,vars:24,consts:[["contentReference",""],["appdc41963c0ed637aa6fcfae511d7e68c1b2195770",""],["app161ee3c6b5bf21d928d4216fcf72b24216bbe2aa",""],["app872f8991660ddda6ac49d4519bc173f7e370b227",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/unit-testing.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","tests"],["rel","nofollow","target","_blank","href","https://github.com/facebook/jest"],["rel","nofollow","target","_blank","href","https://github.com/visionmedia/supertest"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","tests-unitaires"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","utilitaires-de-test"],["routerLink","/fundamentals/module-ref"],[1,"warning"],["routerLink","/fundamentals/custom-providers"],["appAnchor","","id","auto-mocking"],["rel","nofollow","target","_blank","href","https://www.npmjs.com/package/jest-mock"],["rel","nofollow","target","_blank","href","https://github.com/golevelup/nestjs/tree/master/packages/testing"],["appAnchor","","id","tests-de-bout-en-bout"],["routerLink","/techniques/performance"],[1,"language-ts"],["rel","nofollow","target","_blank","href","https://en.wikipedia.org/wiki/Fluent_interface"],["href","/fundamentals/module-ref"],["appAnchor","","id","remplacer-les-am\xe9liorateurs-globaux"],["appAnchor","","id","test-des-instances-\xe0-port\xe9e-de-requ\xeate"],["routerLink","/fundamentals/injection-scopes"],["href","/fundamentals/module-ref#r\xe9soudre-les-fournisseurs-\xe0-port\xe9e-r\xe9duite"]],template:function(t,o){if(1&t&&(e.j41(0,"div",4,0)(2,"div",5)(3,"a",6),e.nrm(4,"i",7),e.k0s()(),e.j41(5,"h3",8),e.EFF(6,"Tests"),e.k0s(),e.j41(7,"p"),e.EFF(8,"L'automatisation des tests est consid\xe9r\xe9e comme un \xe9l\xe9ment essentiel de tout effort s\xe9rieux de d\xe9veloppement de logiciels. L'automatisation permet de r\xe9p\xe9ter facilement et rapidement des tests individuels ou des suites de tests au cours du d\xe9veloppement. Cela permet de s'assurer que les versions r\xe9pondent aux objectifs de qualit\xe9 et de performance. L'automatisation permet d'augmenter la couverture et de fournir un retour d'information plus rapide aux d\xe9veloppeurs. L'automatisation augmente la productivit\xe9 des d\xe9veloppeurs et garantit que les tests sont ex\xe9cut\xe9s \xe0 des moments critiques du cycle de d\xe9veloppement, tels que le contr\xf4le du code source, l'int\xe9gration des fonctionnalit\xe9s et la sortie de la version."),e.k0s(),e.j41(9,"p"),e.EFF(10,"Ces tests couvrent souvent une vari\xe9t\xe9 de types, y compris les tests unitaires, les tests de bout en bout (e2e), les tests d'int\xe9gration, etc. Si les avantages sont incontestables, leur mise en place peut s'av\xe9rer fastidieuse. Nest s'efforce de promouvoir les meilleures pratiques de d\xe9veloppement, y compris des tests efficaces, et inclut donc des fonctionnalit\xe9s telles que les suivantes pour aider les d\xe9veloppeurs et les \xe9quipes \xe0 cr\xe9er et \xe0 automatiser des tests. Nest :"),e.k0s(),e.j41(11,"ul")(12,"li"),e.EFF(13,"met automatiquement en place des tests unitaires par d\xe9faut pour les composants et des tests e2e pour les applications"),e.k0s(),e.j41(14,"li"),e.EFF(15,"fournit des outils par d\xe9faut (tels qu'un lanceur de tests qui construit un module isol\xe9/un chargeur d'application)"),e.k0s(),e.j41(16,"li"),e.EFF(17,"fournit une int\xe9gration avec "),e.j41(18,"a",9),e.EFF(19,"Jest"),e.k0s(),e.EFF(20," et "),e.j41(21,"a",10),e.EFF(22,"Supertest"),e.k0s(),e.EFF(23," pr\xeate \xe0 l'emploi, tout en restant agnostique aux outils de test"),e.k0s(),e.j41(24,"li"),e.EFF(25,"rend le syst\xe8me d'injection de d\xe9pendances Nest disponible dans l'environnement de test pour faciliter l'imitation des composants"),e.k0s()(),e.j41(26,"p"),e.EFF(27,"Comme indiqu\xe9, vous pouvez utiliser n'importe quel "),e.j41(28,"strong"),e.EFF(29,"framework de test"),e.k0s(),e.EFF(30,", car Nest n'impose pas d'outil sp\xe9cifique. Remplacez simplement les \xe9l\xe9ments n\xe9cessaires (comme le runner de test), et vous profiterez toujours des avantages des outils de test pr\xeats \xe0 l'emploi de Nest."),e.k0s(),e.j41(31,"h4",11)(32,"span"),e.EFF(33,"Installation"),e.k0s()(),e.j41(34,"p"),e.EFF(35,"Pour commencer, installez d'abord le package requis :"),e.k0s(),e.j41(36,"pre")(37,"code",12),e.EFF(38,"\n$ npm i --save-dev @nestjs/testing\n"),e.k0s()(),e.j41(39,"h4",13)(40,"span"),e.EFF(41,"Tests unitaires"),e.k0s()(),e.j41(42,"p"),e.EFF(43,"Dans l'exemple suivant, nous testons deux classes : "),e.j41(44,"code"),e.EFF(45,"CatsController"),e.k0s(),e.EFF(46," et "),e.j41(47,"code"),e.EFF(48,"CatsService"),e.k0s(),e.EFF(49,". Comme mentionn\xe9, "),e.j41(50,"a",9),e.EFF(51,"Jest"),e.k0s(),e.EFF(52," est fourni comme framework de test par d\xe9faut. Il sert d'ex\xe9cuteur de tests et fournit \xe9galement des fonctions assert et des utilitaires test-double qui aident \xe0 l'imitation, \xe0 l'espionnage, etc. Dans le test de base suivant, nous instancions manuellement ces classes et nous nous assurons que le contr\xf4leur et le service remplissent leur contrat d'API."),e.k0s(),e.j41(53,"app-copy-button",14)(54,"span",15),e.EFF(55),e.nI1(56,"extension"),e.nrm(57,"app-tabs",null,1),e.k0s(),e.j41(59,"pre")(60,"code",16),e.EFF(61,"\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController: CatsController;\n  let catsService: CatsService;\n\n  beforeEach(() => {\n    catsService = new CatsService();\n    catsController = new CatsController(catsService);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});\n"),e.k0s()(),e.j41(62,"pre")(63,"code",16),e.EFF(64,"\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController;\n  let catsService;\n\n  beforeEach(() => {\n    catsService = new CatsService();\n    catsController = new CatsController(catsService);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});\n"),e.k0s()()(),e.j41(65,"blockquote",17)(66,"strong"),e.EFF(67,"Astuce"),e.k0s(),e.EFF(68," Gardez vos fichiers de test \xe0 proximit\xe9 des classes qu'ils testent. Les fichiers de test doivent avoir un suffixe "),e.j41(69,"code"),e.EFF(70,".spec"),e.k0s(),e.EFF(71," ou "),e.j41(72,"code"),e.EFF(73,".test"),e.k0s(),e.EFF(74,".\n"),e.k0s(),e.j41(75,"p"),e.EFF(76,"Parce que l'exemple ci-dessus est trivial, nous ne testons rien de sp\xe9cifique \xe0 Nest. En effet, nous n'utilisons m\xeame pas l'injection de d\xe9pendance (remarquez que nous passons une instance de "),e.j41(77,"code"),e.EFF(78,"CatsService"),e.k0s(),e.EFF(79," \xe0 notre "),e.j41(80,"code"),e.EFF(81,"catsController"),e.k0s(),e.EFF(82,"). Cette forme de test - o\xf9 nous instancions manuellement les classes test\xe9es - est souvent appel\xe9e "),e.j41(83,"strong"),e.EFF(84,"test isol\xe9"),e.k0s(),e.EFF(85," car elle est ind\xe9pendante du framework. Nous allons pr\xe9senter quelques fonctionnalit\xe9s plus avanc\xe9es qui vous aideront \xe0 tester des applications qui font un usage plus intensif des fonctionnalit\xe9s de Nest."),e.k0s(),e.j41(86,"h4",18)(87,"span"),e.EFF(88,"Utilitaires de test"),e.k0s()(),e.j41(89,"p"),e.EFF(90,"Le package "),e.j41(91,"code"),e.EFF(92,"@nestjs/testing"),e.k0s(),e.EFF(93," fournit un ensemble d'utilitaires qui permettent un processus de test plus robuste. R\xe9\xe9crivons l'exemple pr\xe9c\xe9dent en utilisant la classe int\xe9gr\xe9e "),e.j41(94,"code"),e.EFF(95,"Test"),e.k0s(),e.EFF(96," :"),e.k0s(),e.j41(97,"app-copy-button",14)(98,"span",15),e.EFF(99),e.nI1(100,"extension"),e.nrm(101,"app-tabs",null,2),e.k0s(),e.j41(103,"pre")(104,"code",16),e.EFF(105,"\nimport { Test } from '@nestjs/testing';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController: CatsController;\n  let catsService: CatsService;\n\n  beforeEach(async () => {\n    const moduleRef = await Test.createTestingModule({\n        controllers: [CatsController],\n        providers: [CatsService],\n      }).compile();\n\n    catsService = moduleRef.get(CatsService);\n    catsController = moduleRef.get(CatsController);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});\n"),e.k0s()(),e.j41(106,"pre")(107,"code",16),e.EFF(108,"\nimport { Test } from '@nestjs/testing';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController;\n  let catsService;\n\n  beforeEach(async () => {\n    const moduleRef = await Test.createTestingModule({\n        controllers: [CatsController],\n        providers: [CatsService],\n      }).compile();\n\n    catsService = moduleRef.get(CatsService);\n    catsController = moduleRef.get(CatsController);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});\n"),e.k0s()()(),e.j41(109,"p"),e.EFF(110,"La classe "),e.j41(111,"code"),e.EFF(112,"Test"),e.k0s(),e.EFF(113," est utile pour fournir un contexte d'ex\xe9cution d'application qui simule essentiellement le runtime complet de Nest, mais vous donne des hooks qui facilitent la gestion des instances de classe, y compris le mocking et la surcharge. La classe "),e.j41(114,"code"),e.EFF(115,"Test"),e.k0s(),e.EFF(116," a une m\xe9thode "),e.j41(117,"code"),e.EFF(118,"createTestingModule()"),e.k0s(),e.EFF(119," qui prend un objet de m\xe9tadonn\xe9es de module comme argument (le m\xeame objet que vous passez au d\xe9corateur "),e.j41(120,"code"),e.EFF(121,"@Module()"),e.k0s(),e.EFF(122,"). Cette m\xe9thode retourne une instance de "),e.j41(123,"code"),e.EFF(124,"TestingModule"),e.k0s(),e.EFF(125," qui fournit \xe0 son tour quelques m\xe9thodes. Pour les tests unitaires, la plus importante est la m\xe9thode "),e.j41(126,"code"),e.EFF(127,"compile()"),e.k0s(),e.EFF(128,". Cette m\xe9thode d\xe9marre un module avec ses d\xe9pendances (de la m\xeame mani\xe8re qu'une application est d\xe9marr\xe9e dans le fichier "),e.j41(129,"code"),e.EFF(130,"main.ts"),e.k0s(),e.EFF(131," conventionnel en utilisant "),e.j41(132,"code"),e.EFF(133,"NestFactory.create()"),e.k0s(),e.EFF(134,"), et renvoie un module qui est pr\xeat \xe0 \xeatre test\xe9."),e.k0s(),e.j41(135,"blockquote",17)(136,"strong"),e.EFF(137,"Astuce"),e.k0s(),e.EFF(138," La m\xe9thode "),e.j41(139,"code"),e.EFF(140,"compile()"),e.k0s(),e.EFF(141," est "),e.j41(142,"strong"),e.EFF(143,"asynchrone"),e.k0s(),e.EFF(144," et doit donc \xeatre attendue. Une fois que le module est compil\xe9, vous pouvez r\xe9cup\xe9rer toutes les instances "),e.j41(145,"strong"),e.EFF(146,"statiques"),e.k0s(),e.EFF(147," qu'il d\xe9clare (contr\xf4leurs et fournisseurs) en utilisant la m\xe9thode "),e.j41(148,"code"),e.EFF(149,"get()"),e.k0s(),e.EFF(150,".\n"),e.k0s(),e.j41(151,"p")(152,"code"),e.EFF(153,"TestingModule"),e.k0s(),e.EFF(154," h\xe9rite de la classe "),e.j41(155,"a",19),e.EFF(156,"r\xe9f\xe9rence de module"),e.k0s(),e.EFF(157,", et donc de sa capacit\xe9 \xe0 r\xe9soudre dynamiquement les fournisseurs scop\xe9s (transient ou request). Faites-le avec la m\xe9thode "),e.j41(158,"code"),e.EFF(159,"resolve()"),e.k0s(),e.EFF(160," (la m\xe9thode "),e.j41(161,"code"),e.EFF(162,"get()"),e.k0s(),e.EFF(163," ne peut r\xe9cup\xe9rer que des instances statiques)."),e.k0s(),e.j41(164,"app-copy-button")(165,"pre")(166,"code",16),e.EFF(167,"\nconst moduleRef = await Test.createTestingModule({\n  controllers: [CatsController],\n  providers: [CatsService],\n}).compile();\n\ncatsService = await moduleRef.resolve(CatsService);\n"),e.k0s()()(),e.j41(168,"blockquote",20)(169,"strong"),e.EFF(170,"Attention"),e.k0s(),e.EFF(171," La m\xe9thode "),e.j41(172,"code"),e.EFF(173,"resolve()"),e.k0s(),e.EFF(174," renvoie une instance unique du fournisseur, \xe0 partir de sa propre sous-arborescence de "),e.j41(175,"strong"),e.EFF(176,"conteneur ID"),e.k0s(),e.EFF(177,". Chaque sous-arbre a un identifiant de contexte unique. Par cons\xe9quent, si vous appelez cette m\xe9thode plus d'une fois et comparez les r\xe9f\xe9rences des instances, vous verrez qu'elles ne sont pas \xe9gales.\n"),e.k0s(),e.j41(178,"blockquote",17)(179,"strong"),e.EFF(180,"Astuce"),e.k0s(),e.EFF(181," Pour en savoir plus sur les caract\xe9ristiques de r\xe9f\xe9rence du module "),e.j41(182,"a",19),e.EFF(183,"ici"),e.k0s(),e.EFF(184,".\n"),e.k0s(),e.j41(185,"p"),e.EFF(186,"Au lieu d'utiliser la version de production d'un fournisseur, vous pouvez le remplacer par un "),e.j41(187,"a",21),e.EFF(188,"fournisseur personnalis\xe9"),e.k0s(),e.EFF(189," \xe0 des fins de test. Par exemple, vous pouvez simuler un service de base de donn\xe9es au lieu de vous connecter \xe0 une base de donn\xe9es r\xe9elle. Nous aborderons les surcharges dans la section suivante, mais elles sont \xe9galement disponibles pour les tests unitaires."),e.k0s(),e.j41(190,"p"),e.nrm(191,"app-banner-courses"),e.k0s(),e.j41(192,"h4",22)(193,"span"),e.EFF(194,"Auto mocking"),e.k0s()(),e.j41(195,"p"),e.EFF(196,"Nest vous permet \xe9galement de d\xe9finir une factory mock \xe0 appliquer \xe0 toutes vos d\xe9pendances manquantes. C'est utile dans les cas o\xf9 vous avez un grand nombre de d\xe9pendances dans une classe et que les simuler toutes prendrait beaucoup de temps et de configuration. Pour utiliser cette fonctionnalit\xe9, la m\xe9thode "),e.j41(197,"code"),e.EFF(198,"createTestingModule()"),e.k0s(),e.EFF(199," devra \xeatre encha\xeen\xe9e avec la m\xe9thode "),e.j41(200,"code"),e.EFF(201,"useMocker()"),e.k0s(),e.EFF(202,", en passant une fabrique pour vos mocks de d\xe9pendances. Cette fabrique peut prendre un jeton optionnel, qui est un jeton d'instance, n'importe quel jeton qui est valide pour un fournisseur de Nid, et retourne une impl\xe9mentation fictive. Voici un exemple de cr\xe9ation d'un mocker g\xe9n\xe9rique utilisant "),e.j41(203,"a",23)(204,"code"),e.EFF(205,"jest-mock"),e.k0s()(),e.EFF(206," et d'un mocker sp\xe9cifique pour "),e.j41(207,"code"),e.EFF(208,"CatsService"),e.k0s(),e.EFF(209," utilisant "),e.j41(210,"code"),e.EFF(211,"jest.fn()"),e.k0s(),e.EFF(212,"."),e.k0s(),e.j41(213,"app-copy-button")(214,"pre")(215,"code",16),e.EFF(216,"\n// ...\nimport { ModuleMocker, MockFunctionMetadata } from 'jest-mock';\n\nconst moduleMocker = new ModuleMocker(global);\n\ndescribe('CatsController', () => {\n  let controller: CatsController;\n\n  beforeEach(async () => {\n    const moduleRef = await Test.createTestingModule({\n      controllers: [CatsController],\n    })\n      .useMocker((token) => {\n        const results = ['test1', 'test2'];\n        if (token === CatsService) {\n          return { findAll: jest.fn().mockResolvedValue(results) };\n        }\n        if (typeof token === 'function') {\n          const mockMetadata = moduleMocker.getMetadata(\n            token,\n          ) as MockFunctionMetadata<any, any>;\n          const Mock = moduleMocker.generateFromMetadata(mockMetadata);\n          return new Mock();\n        }\n      })\n      .compile();\n\n    controller = moduleRef.get(CatsController);\n  });\n});\n"),e.k0s()()(),e.j41(217,"p"),e.EFF(218,"Vous pouvez \xe9galement r\xe9cup\xe9rer ces mocks hors du conteneur de test comme vous le feriez normalement avec des fournisseurs personnalis\xe9s, "),e.j41(219,"code"),e.EFF(220,"moduleRef.get(CatsService)"),e.k0s(),e.EFF(221,"."),e.k0s(),e.j41(222,"blockquote",17)(223,"strong"),e.EFF(224,"Astuce"),e.k0s(),e.EFF(225," Une factory de mock g\xe9n\xe9rale, comme "),e.j41(226,"code"),e.EFF(227,"createMock"),e.k0s(),e.EFF(228," de "),e.j41(229,"a",24)(230,"code"),e.EFF(231,"@golevelup/ts-jest"),e.k0s()(),e.EFF(232," peut aussi \xeatre pass\xe9e directement.\n"),e.k0s(),e.j41(233,"blockquote",17)(234,"strong"),e.EFF(235,"Astuce"),e.k0s(),e.EFF(236," Les fournisseurs "),e.j41(237,"code"),e.EFF(238,"REQUEST"),e.k0s(),e.EFF(239," et "),e.j41(240,"code"),e.EFF(241,"INQUIRER"),e.k0s(),e.EFF(242," ne peuvent pas \xeatre auto-mock\xe9s car ils sont d\xe9j\xe0 pr\xe9d\xe9finis dans le contexte. Cependant, ils peuvent \xeatre "),e.j41(243,"em"),e.EFF(244,"remplac\xe9s"),e.k0s(),e.EFF(245," en utilisant la syntaxe des fournisseurs personnalis\xe9s ou en utilisant la m\xe9thode "),e.j41(246,"code"),e.EFF(247,".overrideProvider"),e.k0s(),e.EFF(248,".\n"),e.k0s(),e.j41(249,"h4",25)(250,"span"),e.EFF(251,"Tests de bout en bout"),e.k0s()(),e.j41(252,"p"),e.EFF(253,"Contrairement aux tests unitaires, qui se concentrent sur des modules et des classes individuels, les tests de bout en bout (e2e) couvrent l'interaction des classes et des modules \xe0 un niveau plus global - plus proche du type d'interaction que les utilisateurs finaux auront avec le syst\xe8me de production. Au fur et \xe0 mesure qu'une application se d\xe9veloppe, il devient difficile de tester manuellement le comportement de bout en bout de chaque point de terminaison de l'API. Les tests automatis\xe9s de bout en bout nous aident \xe0 nous assurer que le comportement global du syst\xe8me est correct et r\xe9pond aux exigences du projet. Pour effectuer des tests e2e, nous utilisons une configuration similaire \xe0 celle que nous venons d'aborder dans "),e.j41(254,"strong"),e.EFF(255,"les tests unitaires"),e.k0s(),e.EFF(256,". En outre, Nest facilite l'utilisation de la biblioth\xe8que "),e.j41(257,"a",10),e.EFF(258,"Supertest"),e.k0s(),e.EFF(259," pour simuler des requ\xeates HTTP."),e.k0s(),e.j41(260,"app-copy-button",14)(261,"span",15),e.EFF(262),e.nI1(263,"extension"),e.nrm(264,"app-tabs",null,3),e.k0s(),e.j41(266,"pre")(267,"code",16),e.EFF(268,"\nimport * as request from 'supertest';\nimport { Test } from '@nestjs/testing';\nimport { CatsModule } from '../../src/cats/cats.module';\nimport { CatsService } from '../../src/cats/cats.service';\nimport { INestApplication } from '@nestjs/common';\n\ndescribe('Cats', () => {\n  let app: INestApplication;\n  let catsService = { findAll: () => ['test'] };\n\n  beforeAll(async () => {\n    const moduleRef = await Test.createTestingModule({\n      imports: [CatsModule],\n    })\n      .overrideProvider(CatsService)\n      .useValue(catsService)\n      .compile();\n\n    app = moduleRef.createNestApplication();\n    await app.init();\n  });\n\n  it(`/GET cats`, () => {\n    return request(app.getHttpServer())\n      .get('/cats')\n      .expect(200)\n      .expect({\n        data: catsService.findAll(),\n      });\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n});\n"),e.k0s()(),e.j41(269,"pre")(270,"code",16),e.EFF(271,"\nimport * as request from 'supertest';\nimport { Test } from '@nestjs/testing';\nimport { CatsModule } from '../../src/cats/cats.module';\nimport { CatsService } from '../../src/cats/cats.service';\nimport { INestApplication } from '@nestjs/common';\n\ndescribe('Cats', () => {\n  let app: INestApplication;\n  let catsService = { findAll: () => ['test'] };\n\n  beforeAll(async () => {\n    const moduleRef = await Test.createTestingModule({\n      imports: [CatsModule],\n    })\n      .overrideProvider(CatsService)\n      .useValue(catsService)\n      .compile();\n\n    app = moduleRef.createNestApplication();\n    await app.init();\n  });\n\n  it(`/GET cats`, () => {\n    return request(app.getHttpServer())\n      .get('/cats')\n      .expect(200)\n      .expect({\n        data: catsService.findAll(),\n      });\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n});\n"),e.k0s()()(),e.j41(272,"blockquote",17)(273,"strong"),e.EFF(274,"Astuce"),e.k0s(),e.EFF(275," Si vous utilisez "),e.j41(276,"a",26),e.EFF(277,"Fastify"),e.k0s(),e.EFF(278," comme adaptateur HTTP, il n\xe9cessite une configuration l\xe9g\xe8rement diff\xe9rente et dispose de capacit\xe9s de test int\xe9gr\xe9es :\n"),e.j41(279,"app-copy-button")(280,"pre")(281,"code",27),e.EFF(282,"\nlet app: NestFastifyApplication;\n\nbeforeAll(async () => {\n  app = moduleRef.createNestApplication<NestFastifyApplication>(\n    new FastifyAdapter(),\n  );\n\n  await app.init();\n  await app.getHttpAdapter().getInstance().ready();\n});\n\nit(`/GET cats`, () => {\n  return app\n    .inject({\n      method: 'GET',\n      url: '/cats',\n    })\n    .then((result) => {\n      expect(result.statusCode).toEqual(200);\n      expect(result.payload).toEqual(/* expectedPayload */);\n    });\n});\n\nafterAll(async () => {\n  await app.close();\n});\n"),e.k0s()()()(),e.j41(283,"p"),e.EFF(284,"Dans cet exemple, nous nous appuyons sur certains des concepts d\xe9crits pr\xe9c\xe9demment. En plus de la m\xe9thode "),e.j41(285,"code"),e.EFF(286,"compile()"),e.k0s(),e.EFF(287," que nous avons utilis\xe9e pr\xe9c\xe9demment, nous utilisons maintenant la m\xe9thode "),e.j41(288,"code"),e.EFF(289,"createNestApplication()"),e.k0s(),e.EFF(290," pour instancier un environnement d'ex\xe9cution Nest complet."),e.k0s(),e.j41(291,"p"),e.EFF(292,"Une mise en garde s'impose : lorsque votre application est compil\xe9e \xe0 l'aide de la m\xe9thode "),e.j41(293,"code"),e.EFF(294,"compile()"),e.k0s(),e.EFF(295,", le param\xe8tre "),e.j41(296,"code"),e.EFF(297,"HttpAdapterHost#httpAdapter"),e.k0s(),e.EFF(298," sera ind\xe9fini \xe0 ce moment-l\xe0. C'est parce qu'il n'y a pas encore d'adaptateur HTTP ou de serveur cr\xe9\xe9 pendant cette phase de compilation. Si votre test n\xe9cessite l'adaptateur "),e.j41(299,"code"),e.EFF(300,"httpAdapter"),e.k0s(),e.EFF(301,", vous devriez utiliser la m\xe9thode "),e.j41(302,"code"),e.EFF(303,"createNestApplication()"),e.k0s(),e.EFF(304," pour cr\xe9er l'instance de l'application, ou refactoriser votre projet pour \xe9viter cette d\xe9pendance lors de l'initialisation du graphe de d\xe9pendances."),e.k0s(),e.j41(305,"p"),e.EFF(306,"D\xe9composons l'exemple :"),e.k0s(),e.j41(307,"p"),e.EFF(308,"Nous sauvegardons une r\xe9f\xe9rence \xe0 l'application en cours d'ex\xe9cution dans notre variable "),e.j41(309,"code"),e.EFF(310,"app"),e.k0s(),e.EFF(311," afin de pouvoir l'utiliser pour simuler des requ\xeates HTTP."),e.k0s(),e.j41(312,"p"),e.EFF(313,"Nous simulons des tests HTTP en utilisant la fonction "),e.j41(314,"code"),e.EFF(315,"request()"),e.k0s(),e.EFF(316," de Supertest. Nous voulons que ces requ\xeates HTTP soient dirig\xe9es vers notre application Nest en cours d'ex\xe9cution, donc nous passons \xe0 la fonction "),e.j41(317,"code"),e.EFF(318,"request()"),e.k0s(),e.EFF(319," une r\xe9f\xe9rence \xe0 l'auditeur HTTP qui sous-tend Nest (qui, \xe0 son tour, peut \xeatre fourni par la plateforme Express). D'o\xf9 la construction "),e.j41(320,"code"),e.EFF(321,"request(app.getHttpServer())"),e.k0s(),e.EFF(322,". L'appel \xe0 "),e.j41(323,"code"),e.EFF(324,"request()"),e.k0s(),e.EFF(325," nous donne un serveur HTTP envelopp\xe9, maintenant connect\xe9 \xe0 l'application Nest, qui expose des m\xe9thodes pour simuler une requ\xeate HTTP r\xe9elle. Par exemple, l'utilisation de "),e.j41(326,"code"),e.EFF(327,"request(...).get('/cats')"),e.k0s(),e.EFF(328," lancera une requ\xeate vers l'application Nest qui est identique \xe0 une "),e.j41(329,"strong"),e.EFF(330,"r\xe9elle"),e.k0s(),e.EFF(331," requ\xeate HTTP comme "),e.j41(332,"code"),e.EFF(333,"get '/cats'"),e.k0s(),e.EFF(334," arrivant par le r\xe9seau."),e.k0s(),e.j41(335,"p"),e.EFF(336,"Dans cet exemple, nous fournissons \xe9galement une impl\xe9mentation alternative (test-double) de "),e.j41(337,"code"),e.EFF(338,"CatsService"),e.k0s(),e.EFF(339," qui retourne simplement une valeur cod\xe9e en dur que nous pouvons tester. Utilisez "),e.j41(340,"code"),e.EFF(341,"overrideProvider()"),e.k0s(),e.EFF(342," pour fournir une telle impl\xe9mentation alternative. De la m\xeame mani\xe8re, Nest fournit des m\xe9thodes pour surcharger les modules, les gardes, les intercepteurs, les filtres et les pipes avec les m\xe9thodes "),e.j41(343,"code"),e.EFF(344,"overrideModule()"),e.k0s(),e.EFF(345,", "),e.j41(346,"code"),e.EFF(347,"overrideGuard()"),e.k0s(),e.EFF(348,", "),e.j41(349,"code"),e.EFF(350,"overrideInterceptor()"),e.k0s(),e.EFF(351,", "),e.j41(352,"code"),e.EFF(353,"overrideFilter()"),e.k0s(),e.EFF(354,", et "),e.j41(355,"code"),e.EFF(356,"overridePipe()"),e.k0s(),e.EFF(357," respectivement."),e.k0s(),e.j41(358,"p"),e.EFF(359,"Chacune des m\xe9thodes de remplacement (\xe0 l'exception de "),e.j41(360,"code"),e.EFF(361,"overrideModule()"),e.k0s(),e.EFF(362,") renvoie un objet avec 3 m\xe9thodes diff\xe9rentes qui refl\xe8tent celles d\xe9crites pour les "),e.j41(363,"a",21),e.EFF(364,"fournisseurs personnalis\xe9s"),e.k0s(),e.EFF(365," :"),e.k0s(),e.j41(366,"ul")(367,"li")(368,"code"),e.EFF(369,"useClass"),e.k0s(),e.EFF(370," : vous fournissez une classe qui sera instanci\xe9e pour fournir l'instance permettant de surcharger l'objet ( fournisseur, garde, etc.)."),e.k0s(),e.j41(371,"li")(372,"code"),e.EFF(373,"useValue"),e.k0s(),e.EFF(374," : vous fournissez une instance qui remplacera l'objet."),e.k0s(),e.j41(375,"li")(376,"code"),e.EFF(377,"useFactory"),e.k0s(),e.EFF(378," : vous fournissez une fonction qui renvoie une instance qui remplacera l'objet."),e.k0s()(),e.j41(379,"p"),e.EFF(380,"D'autre part, "),e.j41(381,"code"),e.EFF(382,"overrideModule()"),e.k0s(),e.EFF(383," renvoie un objet avec la m\xe9thode "),e.j41(384,"code"),e.EFF(385,"useModule()"),e.k0s(),e.EFF(386,", que vous pouvez utiliser pour fournir un module qui surchargera le module original, comme suit :"),e.k0s(),e.j41(387,"app-copy-button")(388,"pre")(389,"code",16),e.EFF(390,"\nconst moduleRef = await Test.createTestingModule({\n  imports: [AppModule],\n})\n  .overrideModule(CatsModule)\n  .useModule(AlternateCatsModule)\n  .compile();\n"),e.k0s()()(),e.j41(391,"p"),e.EFF(392,"Chaque type de m\xe9thode de surcharge, \xe0 son tour, renvoie l'instance "),e.j41(393,"code"),e.EFF(394,"TestingModule"),e.k0s(),e.EFF(395,", et peut donc \xeatre encha\xeen\xe9 avec d'autres m\xe9thodes dans le "),e.j41(396,"a",28),e.EFF(397,"style fluide"),e.k0s(),e.EFF(398,". Vous devriez utiliser "),e.j41(399,"code"),e.EFF(400,"compile()"),e.k0s(),e.EFF(401," \xe0 la fin d'une telle cha\xeene pour que Nest instancie et initialise le module."),e.k0s(),e.j41(402,"p"),e.EFF(403,"De plus, vous pouvez parfois vouloir fournir un logger personnalis\xe9, par exemple lorsque les tests sont ex\xe9cut\xe9s (par exemple, sur un serveur CI). Utilisez la m\xe9thode "),e.j41(404,"code"),e.EFF(405,"setLogger()"),e.k0s(),e.EFF(406," et passez un objet qui remplit l'interface "),e.j41(407,"code"),e.EFF(408,"LoggerService"),e.k0s(),e.EFF(409," pour indiquer au "),e.j41(410,"code"),e.EFF(411,"TestModuleBuilder"),e.k0s(),e.EFF(412,' comment journaliser pendant les tests (par d\xe9faut, seuls les logs "error" seront journalis\xe9s sur la console).'),e.k0s(),e.j41(413,"p"),e.EFF(414,"Le module compil\xe9 dispose de plusieurs m\xe9thodes utiles, d\xe9crites dans le tableau suivant :"),e.k0s(),e.j41(415,"table")(416,"tr")(417,"td")(418,"code"),e.EFF(419,"createNestApplication()"),e.k0s()(),e.j41(420,"td"),e.EFF(421," Cr\xe9e et renvoie une application Nest (instance "),e.j41(422,"code"),e.EFF(423,"INestApplication"),e.k0s(),e.EFF(424,") bas\xe9e sur le module donn\xe9. Notez que vous devez initialiser manuellement l'application \xe0 l'aide de la m\xe9thode "),e.j41(425,"code"),e.EFF(426,"init()"),e.k0s(),e.EFF(427,". "),e.k0s()(),e.j41(428,"tr")(429,"td")(430,"code"),e.EFF(431,"createNestMicroservice()"),e.k0s()(),e.j41(432,"td"),e.EFF(433," Cr\xe9e et renvoie un microservice Nest (instance "),e.j41(434,"code"),e.EFF(435,"INestMicroservice"),e.k0s(),e.EFF(436,") bas\xe9 sur le module donn\xe9. "),e.k0s()(),e.j41(437,"tr")(438,"td")(439,"code"),e.EFF(440,"get()"),e.k0s()(),e.j41(441,"td"),e.EFF(442," R\xe9cup\xe8re une instance statique d'un contr\xf4leur ou d'un fournisseur (y compris les gardes, les filtres, etc.) disponible dans le contexte de l'application. H\xe9rit\xe9e de la classe "),e.j41(443,"a",29),e.EFF(444,"r\xe9f\xe9rence de module"),e.k0s(),e.EFF(445,". "),e.k0s()(),e.j41(446,"tr")(447,"td")(448,"code"),e.EFF(449,"resolve()"),e.k0s()(),e.j41(450,"td"),e.EFF(451," R\xe9cup\xe8re une instance \xe0 port\xe9e cr\xe9\xe9e dynamiquement (requ\xeate ou transitoire) d'un contr\xf4leur ou d'un fournisseur (y compris les gardes, les filtres, etc.) disponible dans le contexte de l'application. H\xe9rit\xe9e de la classe "),e.j41(452,"a",29),e.EFF(453,"r\xe9f\xe9rence de module"),e.k0s(),e.EFF(454,". "),e.k0s()(),e.j41(455,"tr")(456,"td")(457,"code"),e.EFF(458,"select()"),e.k0s()(),e.j41(459,"td"),e.EFF(460," Navigue dans le graphe de d\xe9pendance du module ; peut \xeatre utilis\xe9 pour r\xe9cup\xe9rer une instance sp\xe9cifique du module s\xe9lectionn\xe9 (utilis\xe9 avec le mode strict ("),e.j41(461,"code"),e.EFF(462,"strict: true"),e.k0s(),e.EFF(463,") dans la m\xe9thode "),e.j41(464,"code"),e.EFF(465,"get()"),e.k0s(),e.EFF(466,"). "),e.k0s()()(),e.j41(467,"blockquote",17)(468,"strong"),e.EFF(469,"Astuce"),e.k0s(),e.EFF(470," Gardez vos fichiers de test e2e dans le r\xe9pertoire "),e.j41(471,"code"),e.EFF(472,"test"),e.k0s(),e.EFF(473,". Les fichiers de test doivent avoir un suffixe "),e.j41(474,"code"),e.EFF(475,".e2e-spec"),e.k0s(),e.EFF(476,".\n"),e.k0s(),e.j41(477,"h4",30)(478,"span"),e.EFF(479,"Remplacer les am\xe9liorateurs globaux"),e.k0s()(),e.j41(480,"p"),e.EFF(481,"Si vous avez une garde (ou une pipe, un intercepteur ou un filtre) enregistr\xe9e au niveau mondial, vous devez prendre quelques mesures suppl\xe9mentaires pour remplacer cet am\xe9liorateur. Pour r\xe9capituler, l'enregistrement original ressemble \xe0 ceci :"),e.k0s(),e.j41(482,"app-copy-button")(483,"pre")(484,"code",16),e.EFF(485,"\nproviders: [\n  {\n    provide: APP_GUARD,\n    useClass: JwtAuthGuard,\n  },\n],\n"),e.k0s()()(),e.j41(486,"p"),e.EFF(487,"Il s'agit d'enregistrer le gardien comme un fournisseur \" multiple \" \xe0 travers le jeton "),e.j41(488,"code"),e.EFF(489,"APP_*"),e.k0s(),e.EFF(490,". Pour pouvoir remplacer le "),e.j41(491,"code"),e.EFF(492,"JwtAuthGuard"),e.k0s(),e.EFF(493," ici, l'enregistrement doit utiliser un fournisseur existant :"),e.k0s(),e.j41(494,"app-copy-button")(495,"pre")(496,"code",16),e.EFF(497,"\nproviders: [\n  {\n    provide: APP_GUARD,\n    useExisting: JwtAuthGuard,\n    // ^^^^^^^^ notice the use of 'useExisting' instead of 'useClass'\n  },\n  JwtAuthGuard,\n],\n"),e.k0s()()(),e.j41(498,"blockquote",17)(499,"strong"),e.EFF(500,"Astuce"),e.k0s(),e.EFF(501," : Changez "),e.j41(502,"code"),e.EFF(503,"useClass"),e.k0s(),e.EFF(504," en "),e.j41(505,"code"),e.EFF(506,"useExisting"),e.k0s(),e.EFF(507," pour r\xe9f\xe9rencer un fournisseur enregistr\xe9 au lieu d'avoir Nest qui l'instancie derri\xe8re le token.\n"),e.k0s(),e.j41(508,"p"),e.EFF(509,"Maintenant, le "),e.j41(510,"code"),e.EFF(511,"JwtAuthGuard"),e.k0s(),e.EFF(512," est visible par Nest comme un fournisseur normal qui peut \xeatre surcharg\xe9 lors de la cr\xe9ation du "),e.j41(513,"code"),e.EFF(514,"TestingModule"),e.k0s(),e.EFF(515," :"),e.k0s(),e.j41(516,"app-copy-button")(517,"pre")(518,"code",16),e.EFF(519,"\nconst moduleRef = await Test.createTestingModule({\n  imports: [AppModule],\n})\n  .overrideProvider(JwtAuthGuard)\n  .useClass(MockAuthGuard)\n  .compile();\n"),e.k0s()()(),e.j41(520,"p"),e.EFF(521,"Maintenant, tous vos tests utiliseront le "),e.j41(522,"code"),e.EFF(523,"MockAuthGuard"),e.k0s(),e.EFF(524," sur chaque requ\xeate."),e.k0s(),e.j41(525,"h4",31)(526,"span"),e.EFF(527,"Test des instances \xe0 port\xe9e de requ\xeate"),e.k0s()(),e.j41(528,"p"),e.EFF(529,"Les fournisseurs "),e.j41(530,"a",32),e.EFF(531,"\xe0 port\xe9e de requ\xeate"),e.k0s(),e.EFF(532," sont cr\xe9\xe9s de mani\xe8re unique pour chaque "),e.j41(533,"strong"),e.EFF(534,"requ\xeate"),e.k0s(),e.EFF(535," entrante. L'instance est recycl\xe9e une fois que la requ\xeate a \xe9t\xe9 trait\xe9e. Cela pose un probl\xe8me, car nous ne pouvons pas acc\xe9der \xe0 un sous-arbre d'injection de d\xe9pendances g\xe9n\xe9r\xe9 sp\xe9cifiquement pour une requ\xeate test\xe9e."),e.k0s(),e.j41(536,"p"),e.EFF(537,"Nous savons (d'apr\xe8s les sections ci-dessus) que la m\xe9thode "),e.j41(538,"code"),e.EFF(539,"resolve()"),e.k0s(),e.EFF(540," peut \xeatre utilis\xe9e pour r\xe9cup\xe9rer une classe dynamiquement instanci\xe9e. De plus, comme d\xe9crit "),e.j41(541,"a",33),e.EFF(542,"ici"),e.k0s(),e.EFF(543,", nous savons que nous pouvons passer un identifiant de contexte unique pour contr\xf4ler le cycle de vie d'un sous-arbre de conteneur ID. Comment tirer parti de cette possibilit\xe9 dans un contexte de test ?"),e.k0s(),e.j41(544,"p"),e.EFF(545,"La strat\xe9gie consiste \xe0 g\xe9n\xe9rer au pr\xe9alable un identifiant de contexte et \xe0 forcer Nest \xe0 utiliser cet identifiant particulier pour cr\xe9er une sous-arborescence pour toutes les requ\xeates entrantes. De cette mani\xe8re, nous pourrons r\xe9cup\xe9rer les instances cr\xe9\xe9es pour une requ\xeate test\xe9e."),e.k0s(),e.j41(546,"p"),e.EFF(547,"Pour cela, utilisez "),e.j41(548,"code"),e.EFF(549,"jest.spyOn()"),e.k0s(),e.EFF(550," sur le "),e.j41(551,"code"),e.EFF(552,"ContextIdFactory"),e.k0s(),e.EFF(553," :"),e.k0s(),e.j41(554,"app-copy-button")(555,"pre")(556,"code",16),e.EFF(557,"\nconst contextId = ContextIdFactory.create();\njest\n    .spyOn(ContextIdFactory, 'getByRequest')\n    .mockImplementation(() => contextId);\n"),e.k0s()()(),e.j41(558,"p"),e.EFF(559,"Nous pouvons maintenant utiliser le "),e.j41(560,"code"),e.EFF(561,"contextId"),e.k0s(),e.EFF(562," pour acc\xe9der \xe0 un seul sous-arbre de conteneur ID g\xe9n\xe9r\xe9 pour toute requ\xeate ult\xe9rieure."),e.k0s(),e.j41(563,"app-copy-button")(564,"pre")(565,"code",16),e.EFF(566,"\ncatsService = await moduleRef.resolve(CatsService, contextId);\n"),e.k0s()()()()),2&t){const u=e.sdS(58),r=e.sdS(102),a=e.sdS(265);e.R7$(55),e.SpI(" ",e.i5U(56,15,"cats.controller.spec",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(37),e.SpI(" ",e.i5U(100,18,"cats.controller.spec",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(156),e.SpI(" ",e.i5U(263,21,"cats.e2e-spec",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive)}},dependencies:[f.O,E.a,v.Q,p.z,d.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Tests"}},{path:"injection-scopes",component:(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-provider-scopes"]],features:[e.Vt3],decls:402,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/provider-scopes.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","port\xe9es-dinjection"],["appAnchor","","id","port\xe9e-du-fournisseur"],[1,"info"],["appAnchor","","id","usage"],[1,"language-typescript"],["routerLink","/fundamentals/custom-providers"],[1,"warning"],["href","../security/authentication#request-scoped-strategies"],["appAnchor","","id","port\xe9e-du-contr\xf4leur"],["appAnchor","","id","hi\xe9rarchie-des-port\xe9es"],["appAnchor","","id","requ\xeate-au-fournisseur"],["routerLink","/graphql/quick-start"],["appAnchor","","id","fournisseur-dinquirer"],["appAnchor","","id","performance"],["appAnchor","","id","fournisseurs-durables"],["href","/fundamentals/module-ref#resolving-scoped-providers"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Port\xe9es d'injection"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Pour les personnes issues de diff\xe9rents langages de programmation, il peut \xeatre inattendu d'apprendre que dans Nest, presque tout est partag\xe9 entre les requ\xeates entrantes. Nous avons un pool de connexion \xe0 la base de donn\xe9es, des services singleton avec un \xe9tat global, etc. N'oubliez pas que Node.js ne suit pas le mod\xe8le sans \xe9tat multithread\xe9 requ\xeate/r\xe9ponse dans lequel chaque requ\xeate est trait\xe9e par un thread distinct. Par cons\xe9quent, l'utilisation d'instances singleton est totalement "),e.j41(9,"strong"),e.EFF(10,"s\xe9curis\xe9e"),e.k0s(),e.EFF(11," pour nos applications."),e.k0s(),e.j41(12,"p"),e.EFF(13,"Cependant, il existe des cas limites o\xf9 la dur\xe9e de vie bas\xe9e sur les requ\xeates peut \xeatre le comportement souhait\xe9, par exemple la mise en cache par requ\xeate dans les applications GraphQL, le suivi des requ\xeates et la multi-location. Les champs d'application d'injection fournissent un m\xe9canisme permettant d'obtenir le comportement souhait\xe9 pour la dur\xe9e de vie du fournisseur."),e.k0s(),e.j41(14,"h4",6)(15,"span"),e.EFF(16,"Port\xe9e du fournisseur"),e.k0s()(),e.j41(17,"p"),e.EFF(18,"Un fournisseur peut avoir l'une des port\xe9es suivantes :"),e.k0s(),e.j41(19,"table")(20,"tr")(21,"td")(22,"code"),e.EFF(23,"DEFAULT"),e.k0s()(),e.j41(24,"td"),e.EFF(25,"Une seule instance du fournisseur est partag\xe9e par l'ensemble de l'application. La dur\xe9e de vie de l'instance est directement li\xe9e au cycle de vie de l'application. Une fois que l'application a d\xe9marr\xe9, tous les fournisseurs singleton ont \xe9t\xe9 instanci\xe9s. La port\xe9e du singleton est utilis\xe9e par d\xe9faut."),e.k0s()(),e.j41(26,"tr")(27,"td")(28,"code"),e.EFF(29,"REQUEST"),e.k0s()(),e.j41(30,"td"),e.EFF(31,"Une nouvelle instance du fournisseur est cr\xe9\xe9e exclusivement pour chaque "),e.j41(32,"strong"),e.EFF(33,"requ\xeate"),e.k0s(),e.EFF(34," entrante. L'instance est mise au rebut une fois le traitement de la requ\xeate termin\xe9."),e.k0s()(),e.j41(35,"tr")(36,"td")(37,"code"),e.EFF(38,"TRANSIENT"),e.k0s()(),e.j41(39,"td"),e.EFF(40,"Les fournisseurs transitoires ne sont pas partag\xe9s entre les consommateurs. Chaque consommateur qui injecte un fournisseur transitoire re\xe7oit une nouvelle instance d\xe9di\xe9e."),e.k0s()()(),e.j41(41,"blockquote",7)(42,"strong"),e.EFF(43,"Astuce"),e.k0s(),e.EFF(44," L'utilisation d'une port\xe9e singleton est "),e.j41(45,"strong"),e.EFF(46,"recommand\xe9e"),e.k0s(),e.EFF(47," dans la plupart des cas d'utilisation. Le partage des fournisseurs entre les consommateurs et les requ\xeates signifie qu'une instance peut \xeatre mise en cache et que son initialisation n'a lieu qu'une seule fois, lors du d\xe9marrage de l'application.\n"),e.k0s(),e.j41(48,"h4",8)(49,"span"),e.EFF(50,"Usage"),e.k0s()(),e.j41(51,"p"),e.EFF(52,"Sp\xe9cifiez la port\xe9e de l'injection en passant la propri\xe9t\xe9 "),e.j41(53,"code"),e.EFF(54,"scope"),e.k0s(),e.EFF(55," \xe0 l'objet d'options du d\xe9corateur "),e.j41(56,"code"),e.EFF(57,"@Injectable()"),e.k0s(),e.EFF(58," :"),e.k0s(),e.j41(59,"app-copy-button")(60,"pre")(61,"code",9),e.EFF(62,"\nimport { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CatsService {}\n"),e.k0s()()(),e.j41(63,"p"),e.EFF(64,"De m\xeame, pour les "),e.j41(65,"a",10),e.EFF(66,"fournisseurs personnalis\xe9s"),e.k0s(),e.EFF(67,", d\xe9finissez la propri\xe9t\xe9 "),e.j41(68,"code"),e.EFF(69,"scope"),e.k0s(),e.EFF(70," dans le format long pour l'enregistrement d'un fournisseur :"),e.k0s(),e.j41(71,"app-copy-button")(72,"pre")(73,"code",9),e.EFF(74,"\n{\n  provide: 'CACHE_MANAGER',\n  useClass: CacheManager,\n  scope: Scope.TRANSIENT,\n}\n"),e.k0s()()(),e.j41(75,"blockquote",7)(76,"strong"),e.EFF(77,"Astuce"),e.k0s(),e.EFF(78," Importer l'enum "),e.j41(79,"code"),e.EFF(80,"Scope"),e.k0s(),e.EFF(81," depuis "),e.j41(82,"code"),e.EFF(83,"@nestjs/common"),e.k0s()(),e.j41(84,"p"),e.EFF(85,"La port\xe9e singleton est utilis\xe9e par d\xe9faut et n'a pas besoin d'\xeatre d\xe9clar\xe9e. Si vous voulez d\xe9clarer un provider comme singleton scoped, utilisez la valeur "),e.j41(86,"code"),e.EFF(87,"Scope.DEFAULT"),e.k0s(),e.EFF(88," pour la propri\xe9t\xe9 "),e.j41(89,"code"),e.EFF(90,"scope"),e.k0s(),e.EFF(91,"."),e.k0s(),e.j41(92,"blockquote",11)(93,"strong"),e.EFF(94,"Remarque"),e.k0s(),e.EFF(95," Les passerelles Websocket ne doivent pas utiliser de fournisseurs \xe0 port\xe9e de requ\xeate, car elles doivent agir comme des singletons. Chaque passerelle encapsule une v\xe9ritable socket et ne peut \xeatre instanci\xe9e plusieurs fois. Cette limitation s'applique \xe9galement \xe0 d'autres fournisseurs, comme les "),e.j41(96,"a",12)(97,"em"),e.EFF(98,"Strat\xe9gies de passeport"),e.k0s()(),e.EFF(99," ou les "),e.j41(100,"em"),e.EFF(101,"contr\xf4leurs Cron"),e.k0s(),e.EFF(102,".\n"),e.k0s(),e.j41(103,"h4",13)(104,"span"),e.EFF(105,"Port\xe9e du contr\xf4leur"),e.k0s()(),e.j41(106,"p"),e.EFF(107,"Les contr\xf4leurs peuvent \xe9galement avoir une port\xe9e, qui s'applique \xe0 tous les gestionnaires de m\xe9thodes de requ\xeate d\xe9clar\xe9s dans ce contr\xf4leur. Tout comme la port\xe9e du fournisseur, la port\xe9e d'un contr\xf4leur d\xe9termine sa dur\xe9e de vie. Dans le cas d'un contr\xf4leur \xe0 port\xe9e de requ\xeate, une nouvelle instance est cr\xe9\xe9e pour chaque requ\xeate entrante, et la poubelle est ramass\xe9e lorsque le traitement de la requ\xeate est termin\xe9."),e.k0s(),e.j41(108,"p"),e.EFF(109,"D\xe9clarez la port\xe9e du contr\xf4leur avec la propri\xe9t\xe9 "),e.j41(110,"code"),e.EFF(111,"scope"),e.k0s(),e.EFF(112," de l'objet "),e.j41(113,"code"),e.EFF(114,"ControllerOptions"),e.k0s(),e.EFF(115," :"),e.k0s(),e.j41(116,"app-copy-button")(117,"pre")(118,"code",9),e.EFF(119,"\n@Controller({\n  path: 'cats',\n  scope: Scope.REQUEST,\n})\nexport class CatsController {}\n"),e.k0s()()(),e.j41(120,"h4",14)(121,"span"),e.EFF(122,"Hi\xe9rarchie des port\xe9es"),e.k0s()(),e.j41(123,"p"),e.EFF(124,"La port\xe9e "),e.j41(125,"code"),e.EFF(126,"REQUEST"),e.k0s(),e.EFF(127," remonte la cha\xeene d'injection. Un contr\xf4leur qui d\xe9pend d'un fournisseur \xe0 port\xe9e de requ\xeate sera lui-m\xeame \xe0 port\xe9e de requ\xeate."),e.k0s(),e.j41(128,"p"),e.EFF(129,"Imaginez le graphe de d\xe9pendance suivant : "),e.j41(130,"code"),e.EFF(131,"CatsController <- CatsService <- CatsRepository"),e.k0s(),e.EFF(132,". Si "),e.j41(133,"code"),e.EFF(134,"CatsService"),e.k0s(),e.EFF(135," est \xe0 port\xe9e de requ\xeate (et que les autres sont des singletons par d\xe9faut), "),e.j41(136,"code"),e.EFF(137,"CatsController"),e.k0s(),e.EFF(138," deviendra \xe0 port\xe9e de requ\xeate car il d\xe9pend du service inject\xe9. Le "),e.j41(139,"code"),e.EFF(140,"CatsRepository"),e.k0s(),e.EFF(141,", qui n'est pas d\xe9pendant, restera \xe0 port\xe9e de singleton."),e.k0s(),e.j41(142,"p"),e.EFF(143,"Les d\xe9pendances transitoires ne suivent pas ce mod\xe8le. Si un "),e.j41(144,"code"),e.EFF(145,"DogsService"),e.k0s(),e.EFF(146," \xe0 port\xe9e de singleton injecte un fournisseur transitoire "),e.j41(147,"code"),e.EFF(148,"LoggerService"),e.k0s(),e.EFF(149,", il recevra une nouvelle instance de ce dernier. Cependant, "),e.j41(150,"code"),e.EFF(151,"DogsService"),e.k0s(),e.EFF(152," restera \xe0 port\xe9e de singleton, donc l'injecter n'importe o\xf9 ne r\xe9soudra "),e.j41(153,"em"),e.EFF(154,"pas"),e.k0s(),e.EFF(155," une nouvelle instance de "),e.j41(156,"code"),e.EFF(157,"DogsService"),e.k0s(),e.EFF(158,". Au cas o\xf9 ce serait le comportement d\xe9sir\xe9, "),e.j41(159,"code"),e.EFF(160,"DogsService"),e.k0s(),e.EFF(161," doit \xeatre explicitement marqu\xe9 comme "),e.j41(162,"code"),e.EFF(163,"TRANSIENT"),e.k0s(),e.EFF(164,"."),e.k0s(),e.j41(165,"p"),e.nrm(166,"app-banner-courses"),e.k0s(),e.j41(167,"h4",15)(168,"span"),e.EFF(169,"Requ\xeate au fournisseur"),e.k0s()(),e.j41(170,"p"),e.EFF(171,"Dans une application bas\xe9e sur un serveur HTTP (par exemple, en utilisant "),e.j41(172,"code"),e.EFF(173,"@nestjs/platform-express"),e.k0s(),e.EFF(174," ou "),e.j41(175,"code"),e.EFF(176,"@nestjs/platform-fastify"),e.k0s(),e.EFF(177,"), vous pouvez vouloir acc\xe9der \xe0 une r\xe9f\xe9rence \xe0 l'objet de requ\xeate original lorsque vous utilisez des fournisseurs \xe0 port\xe9e de requ\xeate. Vous pouvez le faire en injectant l'objet "),e.j41(178,"code"),e.EFF(179,"REQUEST"),e.k0s(),e.EFF(180,"."),e.k0s(),e.j41(181,"p"),e.EFF(182,"Le fournisseur "),e.j41(183,"code"),e.EFF(184,"REQUEST"),e.k0s(),e.EFF(185," est intrins\xe8quement \xe0 port\xe9e de requ\xeate, ce qui signifie que vous n'avez pas besoin de sp\xe9cifier explicitement la port\xe9e "),e.j41(186,"code"),e.EFF(187,"REQUEST"),e.k0s(),e.EFF(188," lorsque vous l'utilisez. De plus, m\xeame si vous essayez de le faire, cela ne sera pas pris en compte. Tout fournisseur qui s'appuie sur un fournisseur \xe0 port\xe9e de requ\xeate adopte automatiquement une port\xe9e de requ\xeate, et ce comportement ne peut pas \xeatre modifi\xe9."),e.k0s(),e.j41(189,"app-copy-button")(190,"pre")(191,"code",9),e.EFF(192,"\nimport { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CatsService {\n  constructor(@Inject(REQUEST) private request: Request) {}\n}\n"),e.k0s()()(),e.j41(193,"p"),e.EFF(194,"En raison des diff\xe9rences de plateforme/protocole sous-jacentes, vous acc\xe9dez \xe0 la requ\xeate entrante l\xe9g\xe8rement diff\xe9remment pour les applications Microservice ou GraphQL. Dans les applications "),e.j41(195,"a",16),e.EFF(196,"GraphQL"),e.k0s(),e.EFF(197,", vous injectez "),e.j41(198,"code"),e.EFF(199,"CONTEXT"),e.k0s(),e.EFF(200," au lieu de "),e.j41(201,"code"),e.EFF(202,"REQUEST"),e.k0s(),e.EFF(203," :"),e.k0s(),e.j41(204,"app-copy-button")(205,"pre")(206,"code",9),e.EFF(207,"\nimport { Injectable, Scope, Inject } from '@nestjs/common';\nimport { CONTEXT } from '@nestjs/graphql';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CatsService {\n  constructor(@Inject(CONTEXT) private context) {}\n}\n"),e.k0s()()(),e.j41(208,"p"),e.EFF(209,"Vous configurez ensuite votre valeur "),e.j41(210,"code"),e.EFF(211,"context"),e.k0s(),e.EFF(212," (dans le "),e.j41(213,"code"),e.EFF(214,"GraphQLModule"),e.k0s(),e.EFF(215,") pour qu'elle contienne "),e.j41(216,"code"),e.EFF(217,"request"),e.k0s(),e.EFF(218," comme propri\xe9t\xe9."),e.k0s(),e.j41(219,"h4",17)(220,"span"),e.EFF(221,"Fournisseur d'Inquirer"),e.k0s()(),e.j41(222,"p"),e.EFF(223,"Si vous voulez obtenir la classe dans laquelle un fournisseur a \xe9t\xe9 construit, par exemple dans les fournisseurs de logs ou de m\xe9triques, vous pouvez injecter le jeton "),e.j41(224,"code"),e.EFF(225,"INQUIRER"),e.k0s(),e.EFF(226,"."),e.k0s(),e.j41(227,"app-copy-button")(228,"pre")(229,"code",9),e.EFF(230,"\nimport { Inject, Injectable, Scope } from '@nestjs/common';\nimport { INQUIRER } from '@nestjs/core';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class HelloService {\n  constructor(@Inject(INQUIRER) private parentClass: object) {}\n\n  sayHello(message: string) {\n    console.log(`${this.parentClass?.constructor?.name}: ${message}`);\n  }\n}\n"),e.k0s()()(),e.j41(231,"p"),e.EFF(232,"Puis utilisez-le comme suit :"),e.k0s(),e.j41(233,"app-copy-button")(234,"pre")(235,"code",9),e.EFF(236,"\nimport { Injectable } from '@nestjs/common';\nimport { HelloService } from './hello.service';\n\n@Injectable()\nexport class AppService {\n  constructor(private helloService: HelloService) {}\n\n  getRoot(): string {\n    this.helloService.sayHello('Mon nom est getRoot');\n\n    return 'Hello world!';\n  }\n}\n"),e.k0s()()(),e.j41(237,"p"),e.EFF(238,"Dans l'exemple ci-dessus, lorsque "),e.j41(239,"code"),e.EFF(240,"AppService#getRoot"),e.k0s(),e.EFF(241," est appel\xe9, "),e.j41(242,"code"),e.EFF(243,'"AppService : Mon nom est getRoot"'),e.k0s(),e.EFF(244," sera enregistr\xe9 dans la console."),e.k0s(),e.j41(245,"h4",18)(246,"span"),e.EFF(247,"Performance"),e.k0s()(),e.j41(248,"p"),e.EFF(249,"L'utilisation de fournisseurs \xe0 port\xe9e de requ\xeate aura un impact sur les performances de l'application. Bien que Nest essaie de mettre en cache autant de m\xe9tadonn\xe9es que possible, il devra toujours cr\xe9er une instance de votre classe \xe0 chaque requ\xeate. Cela ralentira donc le temps de r\xe9ponse moyen et le r\xe9sultat global de l'analyse comparative. \xc0 moins qu'un fournisseur ne doive \xeatre \xe0 port\xe9e de requ\xeate, il est fortement recommand\xe9 d'utiliser la port\xe9e singleton par d\xe9faut."),e.k0s(),e.j41(250,"blockquote",7)(251,"strong"),e.EFF(252,"Astuce"),e.k0s(),e.EFF(253," Bien que tout cela semble assez intimidant, une application correctement con\xe7ue qui exploite des fournisseurs de services adapt\xe9s aux requ\xeates ne devrait pas \xeatre ralentie de plus de 5 % en termes de temps de latence.\n"),e.k0s(),e.j41(254,"h4",19)(255,"span"),e.EFF(256,"Fournisseurs durables"),e.k0s()(),e.j41(257,"p"),e.EFF(258,"Les fournisseurs \xe0 port\xe9e de requ\xeate, comme mentionn\xe9 dans la section ci-dessus, peuvent entra\xeener une augmentation de la latence car le fait d'avoir au moins un fournisseur \xe0 port\xe9e de requ\xeate (inject\xe9 dans l'instance du contr\xf4leur, ou plus profond\xe9ment - inject\xe9 dans l'un de ses fournisseurs) fait que le contr\xf4leur est \xe9galement \xe0 port\xe9e de requ\xeate. Cela signifie qu'il doit \xeatre recr\xe9\xe9 (instanci\xe9) pour chaque requ\xeate individuelle (et ramass\xe9 par la suite). Cela signifie \xe9galement que pour, disons, 30k requ\xeates en parall\xe8le, il y aura 30k instances \xe9ph\xe9m\xe8res du contr\xf4leur (et de ses fournisseurs adapt\xe9s aux requ\xeates)."),e.k0s(),e.j41(259,"p"),e.EFF(260,"Le fait d'avoir un fournisseur commun dont d\xe9pendent la plupart des fournisseurs (par exemple, une connexion \xe0 une base de donn\xe9es ou un service d'enregistrement) convertit automatiquement tous ces fournisseurs en fournisseurs \xe0 port\xe9e de requ\xeate. Cela peut poser un probl\xe8me dans les "),e.j41(261,"strong"),e.EFF(262,"applications multi-tenants"),e.k0s(),e.EFF(263,', en particulier pour celles qui ont un fournisseur central de "source de donn\xe9es" \xe0 port\xe9e de requ\xeate qui r\xe9cup\xe8re les en-t\xeates/tokens de l\'objet de requ\xeate et, en fonction de ses valeurs, r\xe9cup\xe8re la connexion/le sch\xe9ma de base de donn\xe9es correspondant(e) (sp\xe9cifique \xe0 ce locataire).'),e.k0s(),e.j41(264,"p"),e.EFF(265,"Par exemple, supposons que vous ayez une application utilis\xe9e alternativement par 10 clients diff\xe9rents. Chaque client a sa "),e.j41(266,"strong"),e.EFF(267,"propre source de donn\xe9es d\xe9di\xe9e"),e.k0s(),e.EFF(268,', et vous voulez vous assurer que le client A ne pourra jamais acc\xe9der \xe0 la base de donn\xe9es du client B. Une fa\xe7on d\'y parvenir serait de d\xe9clarer un fournisseur de "source de donn\xe9es" \xe0 l\'\xe9chelle de la requ\xeate qui, sur la base de l\'objet de la requ\xeate, d\xe9termine quel est le "client actuel" et r\xe9cup\xe8re la base de donn\xe9es correspondante. Avec cette approche, vous pouvez transformer votre application en une application multi-tenant en quelques minutes seulement. Mais l\'inconv\xe9nient majeur de cette approche est que, comme il est tr\xe8s probable qu\'une grande partie des composants de votre application repose sur le fournisseur "source de donn\xe9es", ils deviendront implicitement "\xe0 l\'\xe9chelle de la requ\xeate", et donc vous verrez sans aucun doute un impact sur les performances de votre application.'),e.k0s(),e.j41(269,"p"),e.EFF(270,"Et si nous avions une meilleure solution ? Puisque nous n'avons que 10 clients, ne pourrions-nous pas avoir 10 "),e.j41(271,"a",20),e.EFF(272,"sous-arbres d'ID"),e.k0s(),e.EFF(273," individuels par client (au lieu de recr\xe9er chaque arbre par requ\xeate) ? Si vos fournisseurs ne s'appuient sur aucune propri\xe9t\xe9 qui soit r\xe9ellement unique pour chaque requ\xeate cons\xe9cutive (par exemple, l'UUID de la requ\xeate), mais qu'il existe des attributs sp\xe9cifiques qui nous permettent de les agr\xe9ger (les classer), il n'y a aucune raison de "),e.j41(274,"em"),e.EFF(275,"recr\xe9er un sous-arbre DI"),e.k0s(),e.EFF(276," pour chaque requ\xeate entrante ?"),e.k0s(),e.j41(277,"p"),e.EFF(278,"Et c'est justement l\xe0 que les "),e.j41(279,"strong"),e.EFF(280,"fournisseurs durables"),e.k0s(),e.EFF(281," se r\xe9v\xe8lent utiles."),e.k0s(),e.j41(282,"p"),e.EFF(283,"Avant de commencer \xe0 signaler les fournisseurs comme durables, nous devons d'abord enregistrer une "),e.j41(284,"strong"),e.EFF(285,"strat\xe9gie"),e.k0s(),e.EFF(286,' qui indique \xe0 Nest quels sont ces "attributs de requ\xeate communs", fournir une logique qui regroupe les requ\xeates - les associe \xe0 leurs sous-arbres ID correspondants.'),e.k0s(),e.j41(287,"app-copy-button")(288,"pre")(289,"code",9),e.EFF(290,"\nimport {\n  HostComponentInfo,\n  ContextId,\n  ContextIdFactory,\n  ContextIdStrategy,\n} from '@nestjs/core';\nimport { Request } from 'express';\n\nconst tenants = new Map<string, ContextId>();\n\nexport class AggregateByTenantContextIdStrategy implements ContextIdStrategy {\n  attach(contextId: ContextId, request: Request) {\n    const tenantId = request.headers['x-tenant-id'] as string;\n    let tenantSubTreeId: ContextId;\n\n    if (tenants.has(tenantId)) {\n      tenantSubTreeId = tenants.get(tenantId);\n    } else {\n      tenantSubTreeId = ContextIdFactory.create();\n      tenants.set(tenantId, tenantSubTreeId);\n    }\n\n    // Si l'arbre n'est pas durable, retourner l'objet \"contextId\" original\n    return (info: HostComponentInfo) =>\n      info.isTreeDurable ? tenantSubTreeId : contextId;\n  }\n}\n"),e.k0s()()(),e.j41(291,"blockquote",7)(292,"strong"),e.EFF(293,"Astuce"),e.k0s(),e.EFF(294," De la m\xeame mani\xe8re que pour la port\xe9e de la requ\xeate, la durabilit\xe9 s'\xe9tend jusqu'\xe0 la cha\xeene d'injection. Cela signifie que si A d\xe9pend de B qui est marqu\xe9 comme "),e.j41(295,"code"),e.EFF(296,"durable"),e.k0s(),e.EFF(297,", A devient implicitement durable aussi (\xe0 moins que "),e.j41(298,"code"),e.EFF(299,"durable"),e.k0s(),e.EFF(300," ne soit explicitement mis \xe0 "),e.j41(301,"code"),e.EFF(302,"false"),e.k0s(),e.EFF(303," pour le fournisseur A).\n"),e.k0s(),e.j41(304,"blockquote",11)(305,"strong"),e.EFF(306,"Attention"),e.k0s(),e.EFF(307," Notez que cette strat\xe9gie n'est pas id\xe9ale pour les applications fonctionnant avec un grand nombre de clients.\n"),e.k0s(),e.j41(308,"p"),e.EFF(309,"La valeur retourn\xe9e par la m\xe9thode "),e.j41(310,"code"),e.EFF(311,"attach"),e.k0s(),e.EFF(312," indique \xe0 Nest quel identifiant de contexte doit \xeatre utilis\xe9 pour un h\xf4te donn\xe9. Dans ce cas, nous avons sp\xe9cifi\xe9 que le "),e.j41(313,"code"),e.EFF(314,"tenantSubTreeId"),e.k0s(),e.EFF(315," devrait \xeatre utilis\xe9 \xe0 la place de l'objet "),e.j41(316,"code"),e.EFF(317,"contextId"),e.k0s(),e.EFF(318," original, auto-g\xe9n\xe9r\xe9, lorsque le composant h\xf4te (par exemple, un contr\xf4leur \xe0 port\xe9e de requ\xeate) est marqu\xe9 comme durable (vous pouvez apprendre comment marquer les fournisseurs comme durables ci-dessous). De plus, dans l'exemple ci-dessus, "),e.j41(319,"strong"),e.EFF(320,"aucun payload"),e.k0s(),e.EFF(321," ne serait enregistr\xe9 (o\xf9 payload = fournisseur "),e.j41(322,"code"),e.EFF(323,"REQUEST"),e.k0s(),e.EFF(324,"/"),e.j41(325,"code"),e.EFF(326,"CONTEXT"),e.k0s(),e.EFF(327,' qui repr\xe9sente la "racine" - parent de la sous-arborescence).'),e.k0s(),e.j41(328,"p"),e.EFF(329,"Si vous souhaitez enregistrer la charge utile pour un arbre durable, utilisez plut\xf4t la construction suivante :"),e.k0s(),e.j41(330,"app-copy-button")(331,"pre")(332,"code",9),e.EFF(333,"\n// The return of `AggregateByTenantContextIdStrategy#attach` method:\nreturn {\n  resolve: (info: HostComponentInfo) =>\n    info.isTreeDurable ? tenantSubTreeId : contextId,\n  payload: { tenantId },\n};\n"),e.k0s()()(),e.j41(334,"p"),e.EFF(335,"Maintenant, chaque fois que vous injectez le fournisseur "),e.j41(336,"code"),e.EFF(337,"REQUEST"),e.k0s(),e.EFF(338," (ou "),e.j41(339,"code"),e.EFF(340,"CONTEXT"),e.k0s(),e.EFF(341," pour les applications GraphQL) en utilisant "),e.j41(342,"code"),e.EFF(343,"@Inject(REQUEST)"),e.k0s(),e.EFF(344,"/"),e.j41(345,"code"),e.EFF(346,"@Inject(CONTEXT)"),e.k0s(),e.EFF(347,", l'objet "),e.j41(348,"code"),e.EFF(349,"payload"),e.k0s(),e.EFF(350," sera inject\xe9 (compos\xe9 d'une seule propri\xe9t\xe9 - "),e.j41(351,"code"),e.EFF(352,"tenantId"),e.k0s(),e.EFF(353," dans ce cas)."),e.k0s(),e.j41(354,"p"),e.EFF(355,"D'accord, avec cette strat\xe9gie en place, vous pouvez l'enregistrer quelque part dans votre code (puisqu'elle s'applique globalement de toute fa\xe7on), donc par exemple, vous pourriez la placer dans le fichier "),e.j41(356,"code"),e.EFF(357,"main.ts"),e.k0s(),e.EFF(358," :"),e.k0s(),e.j41(359,"app-copy-button")(360,"pre")(361,"code",9),e.EFF(362,"\nContextIdFactory.apply(new AggregateByTenantContextIdStrategy());\n"),e.k0s()()(),e.j41(363,"blockquote",7)(364,"strong"),e.EFF(365,"Astuce"),e.k0s(),e.EFF(366," La classe "),e.j41(367,"code"),e.EFF(368,"ContextIdFactory"),e.k0s(),e.EFF(369," est import\xe9e du package "),e.j41(370,"code"),e.EFF(371,"@nestjs/core"),e.k0s(),e.EFF(372,".\n"),e.k0s(),e.j41(373,"p"),e.EFF(374,"Tant que l'enregistrement a lieu avant qu'une requ\xeate n'arrive dans votre application, tout fonctionnera comme pr\xe9vu."),e.k0s(),e.j41(375,"p"),e.EFF(376,"Enfin, pour transformer un fournisseur r\xe9gulier en fournisseur durable, il suffit de mettre le flag "),e.j41(377,"code"),e.EFF(378,"durable"),e.k0s(),e.EFF(379," \xe0 "),e.j41(380,"code"),e.EFF(381,"true"),e.k0s(),e.EFF(382," et de changer sa port\xe9e en "),e.j41(383,"code"),e.EFF(384,"Scope.REQUEST"),e.k0s(),e.EFF(385," ( inutile si la port\xe9e REQUEST est d\xe9j\xe0 dans la cha\xeene d'injection) :"),e.k0s(),e.j41(386,"app-copy-button")(387,"pre")(388,"code",9),e.EFF(389,"\nimport { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.REQUEST, durable: true })\nexport class CatsService {}\n"),e.k0s()()(),e.j41(390,"p"),e.EFF(391,"De m\xeame, pour les "),e.j41(392,"a",10),e.EFF(393,"fournisseurs personnalis\xe9s"),e.k0s(),e.EFF(394,", d\xe9finissez la propri\xe9t\xe9 "),e.j41(395,"code"),e.EFF(396,"durable"),e.k0s(),e.EFF(397," dans le format long pour l'enregistrement d'un fournisseur :"),e.k0s(),e.j41(398,"app-copy-button")(399,"pre")(400,"code",9),e.EFF(401,"\n{\n  provide: 'foobar',\n  useFactory: () => { ... },\n  scope: Scope.REQUEST,\n  durable: true,\n}\n"),e.k0s()()()())},dependencies:[E.a,v.Q,p.z,d.Wk],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Port\xe9es d'injection"}},{path:"execution-context",component:(()=>{class s extends l.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-execution-context"]],features:[e.Vt3],decls:627,vars:72,consts:[["contentReference",""],["app08711863f1e729e9da9f66776eddaede68d0e224",""],["app4588f9186a32e32582744d4a401eab53e22258a8",""],["app21d78220c899a38c1be5be9b9ac0dfcfe9f291a9",""],["appe4b6a0827565dc987b6fe2395aae3fca27489737",""],["app512f0bf3b634d7a6b3f5cb1acf31f705a1c0ebdb",""],["app9a62cc55aa67f4770d9addea312ab088b2f1bcc6",""],["appa219c502dff0b3849ab2dbb905fef9993eba0188",""],["appe16d37c9c541b33b269598e02aefa087b3ff9e78",""],["appc78bb0ab107163b3890be988e408c9cafc05dea9",""],["app251f85ea5a53de0a8a06dbb7eeef7497f7917420",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/fundamentals/execution-context.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","contexte-dex\xe9cution"],["routerLink","/guards"],["routerLink","/exception-filters"],["routerLink","/interceptors"],["appAnchor","","id","classe-argumentshost"],["href","exception-filters#argumentshost"],["routerLink","/graphql/quick-start"],["appAnchor","","id","contexte-actuel-de-lapplication"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","arguments-du-gestionnaire-dh\xf4te"],["appAnchor","","id","classe-executioncontext"],["href","/guards#contexte-dex%C3%A9cution"],["href","/interceptors#contexte-dex%C3%A9cution"],["appAnchor","","id","r\xe9flexion-et-m\xe9tadonn\xe9es"],[1,"with-heading"],[1,"filename"],[1,"language-ts"],["appAnchor","","id","approche-de-bas-niveau"]],template:function(t,o){if(1&t&&(e.j41(0,"div",11,0)(2,"div",12)(3,"a",13),e.nrm(4,"i",14),e.k0s()(),e.j41(5,"h3",15),e.EFF(6,"Contexte d'ex\xe9cution"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Nest fournit plusieurs classes d'utilitaires qui facilitent l'\xe9criture d'applications fonctionnant dans plusieurs contextes d'application (par exemple, les contextes d'application bas\xe9s sur le serveur HTTP, les microservices et les WebSockets de Nest). Ces utilitaires fournissent des informations sur le contexte d'ex\xe9cution actuel qui peuvent \xeatre utilis\xe9es pour construire des "),e.j41(9,"a",16),e.EFF(10,"gardes"),e.k0s(),e.EFF(11,", des "),e.j41(12,"a",17),e.EFF(13,"filtres"),e.k0s(),e.EFF(14," et des "),e.j41(15,"a",18),e.EFF(16,"intercepteurs"),e.k0s(),e.EFF(17," g\xe9n\xe9riques qui peuvent fonctionner \xe0 travers un large \xe9ventail de contr\xf4leurs, de m\xe9thodes et de contextes d'ex\xe9cution."),e.k0s(),e.j41(18,"p"),e.EFF(19,"Nous couvrons deux de ces classes dans ce chapitre : "),e.j41(20,"code"),e.EFF(21,"ArgumentsHost"),e.k0s(),e.EFF(22," et "),e.j41(23,"code"),e.EFF(24,"ExecutionContext"),e.k0s(),e.EFF(25,"."),e.k0s(),e.j41(26,"h4",19)(27,"span"),e.EFF(28,"Classe ArgumentsHost"),e.k0s()(),e.j41(29,"p"),e.EFF(30,"La classe "),e.j41(31,"code"),e.EFF(32,"ArgumentsHost"),e.k0s(),e.EFF(33," fournit des m\xe9thodes pour r\xe9cup\xe9rer les arguments pass\xe9s \xe0 un handler. Elle permet de choisir le contexte appropri\xe9 (par exemple, HTTP, RPC (microservice), ou WebSockets) pour r\xe9cup\xe9rer les arguments. Le framework fournit une instance de "),e.j41(34,"code"),e.EFF(35,"ArgumentsHost"),e.k0s(),e.EFF(36,", typiquement r\xe9f\xe9renc\xe9e comme un param\xe8tre "),e.j41(37,"code"),e.EFF(38,"host"),e.k0s(),e.EFF(39,", dans les endroits o\xf9 vous pouvez vouloir y acc\xe9der. Par exemple, la m\xe9thode "),e.j41(40,"code"),e.EFF(41,"catch()"),e.k0s(),e.EFF(42," d'un "),e.j41(43,"a",20),e.EFF(44,"filtre d'exception"),e.k0s(),e.EFF(45," est appel\xe9e avec une instance "),e.j41(46,"code"),e.EFF(47,"ArgumentsHost"),e.k0s(),e.EFF(48,"."),e.k0s(),e.j41(49,"p")(50,"code"),e.EFF(51,"ArgumentsHost"),e.k0s(),e.EFF(52," agit simplement comme une abstraction sur les arguments d'un gestionnaire. Par exemple, pour les applications serveur HTTP (quand "),e.j41(53,"code"),e.EFF(54,"@nestjs/platform-express"),e.k0s(),e.EFF(55," est utilis\xe9), l'objet "),e.j41(56,"code"),e.EFF(57,"host"),e.k0s(),e.EFF(58," encapsule la liste "),e.j41(59,"code"),e.EFF(60,"[request, response, next]"),e.k0s(),e.EFF(61," d'Express, o\xf9 "),e.j41(62,"code"),e.EFF(63,"request"),e.k0s(),e.EFF(64," est l'objet requ\xeate, "),e.j41(65,"code"),e.EFF(66,"response"),e.k0s(),e.EFF(67," est l'objet r\xe9ponse, et "),e.j41(68,"code"),e.EFF(69,"next"),e.k0s(),e.EFF(70," est une fonction qui contr\xf4le le cycle requ\xeate-r\xe9ponse de l'application. En revanche, pour les applications "),e.j41(71,"a",21),e.EFF(72,"GraphQL"),e.k0s(),e.EFF(73,", l'objet "),e.j41(74,"code"),e.EFF(75,"host"),e.k0s(),e.EFF(76," contient le tableau "),e.j41(77,"code"),e.EFF(78,"[root, args, context, info]"),e.k0s(),e.EFF(79,"."),e.k0s(),e.j41(80,"h4",22)(81,"span"),e.EFF(82,"Contexte actuel de l'application"),e.k0s()(),e.j41(83,"p"),e.EFF(84,"Lorsque l'on construit des "),e.j41(85,"a",16),e.EFF(86,"gardes"),e.k0s(),e.EFF(87,", des "),e.j41(88,"a",17),e.EFF(89,"filtres"),e.k0s(),e.EFF(90," et des "),e.j41(91,"a",18),e.EFF(92,"intercepteurs"),e.k0s(),e.EFF(93," g\xe9n\xe9riques qui sont cens\xe9s s'ex\xe9cuter \xe0 travers de multiples contextes d'application, nous avons besoin d'un moyen de d\xe9terminer le type d'application dans lequel notre m\xe9thode s'ex\xe9cute actuellement. C'est ce que nous faisons avec la m\xe9thode "),e.j41(94,"code"),e.EFF(95,"getType()"),e.k0s(),e.EFF(96," de "),e.j41(97,"code"),e.EFF(98,"ArgumentsHost"),e.k0s(),e.EFF(99," :"),e.k0s(),e.j41(100,"app-copy-button")(101,"pre")(102,"code",23),e.EFF(103,"\nif (host.getType() === 'http') {\n  // faire quelque chose qui n'est important que dans le contexte des requ\xeates HTTP ordinaires (REST).\n} else if (host.getType() === 'rpc') {\n  // faire quelque chose qui n'est important que dans le contexte des requ\xeates de microservices.\n} else if (host.getType<GqlContextType>() === 'graphql') {\n  // faire quelque chose qui n'est important que dans le contexte des requ\xeates GraphQL\n}\n"),e.k0s()()(),e.j41(104,"blockquote",24)(105,"strong"),e.EFF(106,"Astuce"),e.k0s(),e.EFF(107," Le type "),e.j41(108,"code"),e.EFF(109,"GqlContextType"),e.k0s(),e.EFF(110," est import\xe9 du package "),e.j41(111,"code"),e.EFF(112,"@nestjs/graphql"),e.k0s(),e.EFF(113,".\n"),e.k0s(),e.j41(114,"p"),e.EFF(115,"Avec le type d'application disponible, nous pouvons \xe9crire des composants plus g\xe9n\xe9riques, comme indiqu\xe9 ci-dessous."),e.k0s(),e.j41(116,"h4",25)(117,"span"),e.EFF(118,"Arguments du gestionnaire d'h\xf4te"),e.k0s()(),e.j41(119,"p"),e.EFF(120,"Pour r\xe9cup\xe9rer la liste des arguments pass\xe9s au gestionnaire, une approche consiste \xe0 utiliser la m\xe9thode "),e.j41(121,"code"),e.EFF(122,"getArgs()"),e.k0s(),e.EFF(123," de l'objet h\xf4te."),e.k0s(),e.j41(124,"app-copy-button")(125,"pre")(126,"code",23),e.EFF(127,"\nconst [req, res, next] = host.getArgs();\n"),e.k0s()()(),e.j41(128,"p"),e.EFF(129,"Vous pouvez extraire un argument particulier par son index en utilisant la m\xe9thode "),e.j41(130,"code"),e.EFF(131,"getArgByIndex()"),e.k0s(),e.EFF(132," :"),e.k0s(),e.j41(133,"app-copy-button")(134,"pre")(135,"code",23),e.EFF(136,"\nconst request = host.getArgByIndex(0);\nconst response = host.getArgByIndex(1);\n"),e.k0s()()(),e.j41(137,"p"),e.EFF(138,"Dans ces exemples, nous avons r\xe9cup\xe9r\xe9 les objets requ\xeate et r\xe9ponse par index, ce qui n'est g\xe9n\xe9ralement pas recommand\xe9 car cela couple l'application \xe0 un contexte d'ex\xe9cution particulier. Au lieu de cela, vous pouvez rendre votre code plus robuste et r\xe9utilisable en utilisant l'une des m\xe9thodes utilitaires de l'objet "),e.j41(139,"code"),e.EFF(140,"host"),e.k0s(),e.EFF(141," pour basculer vers le contexte d'application appropri\xe9 pour votre application. Les m\xe9thodes utilitaires de changement de contexte sont pr\xe9sent\xe9es ci-dessous."),e.k0s(),e.j41(142,"app-copy-button")(143,"pre")(144,"code",23),e.EFF(145,"\n/**\n * Passer \xe0 un contexte RPC.\n */\nswitchToRpc(): RpcArgumentsHost;\n/**\n * Passer au contexte HTTP.\n */\nswitchToHttp(): HttpArgumentsHost;\n/**\n * Passer au contexte WebSockets.\n */\nswitchToWs(): WsArgumentsHost;\n"),e.k0s()()(),e.j41(146,"p"),e.EFF(147,"R\xe9\xe9crivons l'exemple pr\xe9c\xe9dent en utilisant la m\xe9thode "),e.j41(148,"code"),e.EFF(149,"switchToHttp()"),e.k0s(),e.EFF(150,". La m\xe9thode utilitaire "),e.j41(151,"code"),e.EFF(152,"host.switchToHttp()"),e.k0s(),e.EFF(153," renvoie un objet "),e.j41(154,"code"),e.EFF(155,"HttpArgumentsHost"),e.k0s(),e.EFF(156," appropri\xe9 au contexte de l'application HTTP. L'objet "),e.j41(157,"code"),e.EFF(158,"HttpArgumentsHost"),e.k0s(),e.EFF(159," poss\xe8de deux m\xe9thodes utiles que nous pouvons utiliser pour extraire les objets d\xe9sir\xe9s. Nous utilisons \xe9galement les assertions de type Express dans ce cas pour retourner des objets nativement typ\xe9s Express :"),e.k0s(),e.j41(160,"app-copy-button")(161,"pre")(162,"code",23),e.EFF(163,"\nconst ctx = host.switchToHttp();\nconst request = ctx.getRequest<Request>();\nconst response = ctx.getResponse<Response>();\n"),e.k0s()()(),e.j41(164,"p"),e.EFF(165,"De m\xeame, "),e.j41(166,"code"),e.EFF(167,"WsArgumentsHost"),e.k0s(),e.EFF(168," et "),e.j41(169,"code"),e.EFF(170,"RpcArgumentsHost"),e.k0s(),e.EFF(171," ont des m\xe9thodes pour retourner les objets appropri\xe9s dans les contextes microservices et WebSockets. Voici les m\xe9thodes de "),e.j41(172,"code"),e.EFF(173,"WsArgumentsHost"),e.k0s(),e.EFF(174," :"),e.k0s(),e.j41(175,"app-copy-button")(176,"pre")(177,"code",23),e.EFF(178,"\nexport interface WsArgumentsHost {\n  /**\n   * Renvoie l'objet de donn\xe9es.\n   */\n  getData<T>(): T;\n  /**\n   * Renvoie l'objet client.\n   */\n  getClient<T>(): T;\n}\n"),e.k0s()()(),e.j41(179,"p"),e.EFF(180,"Voici les m\xe9thodes de "),e.j41(181,"code"),e.EFF(182,"RpcArgumentsHost"),e.k0s(),e.EFF(183," :"),e.k0s(),e.j41(184,"app-copy-button")(185,"pre")(186,"code",23),e.EFF(187,"\nexport interface RpcArgumentsHost {\n  /**\n   * Returns the data object.\n   */\n  getData<T>(): T;\n\n  /**\n   * Returns the context object.\n   */\n  getContext<T>(): T;\n}\n"),e.k0s()()(),e.j41(188,"h4",26)(189,"span"),e.EFF(190,"Classe ExecutionContext"),e.k0s()(),e.j41(191,"p")(192,"code"),e.EFF(193,"ExecutionContext"),e.k0s(),e.EFF(194," \xe9tend "),e.j41(195,"code"),e.EFF(196,"ArgumentsHost"),e.k0s(),e.EFF(197,", fournissant des d\xe9tails suppl\xe9mentaires sur le processus d'ex\xe9cution en cours. Comme "),e.j41(198,"code"),e.EFF(199,"ArgumentsHost"),e.k0s(),e.EFF(200,", Nest fournit une instance de "),e.j41(201,"code"),e.EFF(202,"ExecutionContext"),e.k0s(),e.EFF(203," l\xe0 o\xf9 vous en avez besoin, comme dans la m\xe9thode "),e.j41(204,"code"),e.EFF(205,"canActivate()"),e.k0s(),e.EFF(206," d'une "),e.j41(207,"a",27),e.EFF(208,"garde"),e.k0s(),e.EFF(209," et la m\xe9thode "),e.j41(210,"code"),e.EFF(211,"intercept()"),e.k0s(),e.EFF(212," d'un "),e.j41(213,"a",28),e.EFF(214,"intercepteur"),e.k0s(),e.EFF(215,". Il fournit les m\xe9thodes suivantes :"),e.k0s(),e.j41(216,"app-copy-button")(217,"pre")(218,"code",23),e.EFF(219,"\nexport interface ExecutionContext extends ArgumentsHost {\n  /**\n   * Renvoie le type de la classe de contr\xf4leur \xe0 laquelle appartient le gestionnaire actuel.\n   */\n  getClass<T>(): Type<T>;\n  /**\n   * Renvoie une r\xe9f\xe9rence au gestionnaire (m\xe9thode) qui sera invoqu\xe9\n   * ensuite dans le pipeline de requ\xeates.\n   */\n  getHandler(): Function;\n}\n"),e.k0s()()(),e.j41(220,"p"),e.EFF(221,"La m\xe9thode "),e.j41(222,"code"),e.EFF(223,"getHandler()"),e.k0s(),e.EFF(224," renvoie une r\xe9f\xe9rence au gestionnaire qui va \xeatre invoqu\xe9. La m\xe9thode "),e.j41(225,"code"),e.EFF(226,"getClass()"),e.k0s(),e.EFF(227," renvoie le type de la classe "),e.j41(228,"code"),e.EFF(229,"Controller"),e.k0s(),e.EFF(230," \xe0 laquelle appartient ce handler particulier. Par exemple, dans un contexte HTTP, si la requ\xeate en cours de traitement est une requ\xeate "),e.j41(231,"code"),e.EFF(232,"POST"),e.k0s(),e.EFF(233,", li\xe9e \xe0 la m\xe9thode "),e.j41(234,"code"),e.EFF(235,"create()"),e.k0s(),e.EFF(236," du "),e.j41(237,"code"),e.EFF(238,"CatsController"),e.k0s(),e.EFF(239,", "),e.j41(240,"code"),e.EFF(241,"getHandler()"),e.k0s(),e.EFF(242," renvoie une r\xe9f\xe9rence \xe0 la m\xe9thode "),e.j41(243,"code"),e.EFF(244,"create()"),e.k0s(),e.EFF(245," et "),e.j41(246,"code"),e.EFF(247,"getClass()"),e.k0s(),e.EFF(248," renvoie la "),e.j41(249,"strong"),e.EFF(250,"classe"),e.k0s(),e.EFF(251," (et non l'instance) du "),e.j41(252,"code"),e.EFF(253,"CatsController"),e.k0s(),e.EFF(254,"."),e.k0s(),e.j41(255,"app-copy-button")(256,"pre")(257,"code",23),e.EFF(258,'\nconst methodKey = ctx.getHandler().name; // "create"\nconst className = ctx.getClass().name; // "CatsController"\n'),e.k0s()()(),e.j41(259,"p"),e.EFF(260,"La possibilit\xe9 d'acc\xe9der aux r\xe9f\xe9rences \xe0 la fois \xe0 la classe courante et \xe0 la m\xe9thode du handler offre une grande flexibilit\xe9. Plus important encore, cela nous donne la possibilit\xe9 d'acc\xe9der aux m\xe9tadonn\xe9es d\xe9finies soit par les decorateurs cr\xe9\xe9s via "),e.j41(261,"code"),e.EFF(262,"Reflector#createDecorator"),e.k0s(),e.EFF(263," ou du d\xe9corateur integr\xe9 "),e.j41(264,"code"),e.EFF(265,"@SetMetadata()"),e.k0s(),e.EFF(266," depuis les gardiens ou les intercepteurs. Nous couvrons ce cas d'utilisation ci-dessous."),e.k0s(),e.j41(267,"p"),e.nrm(268,"app-banner-enterprise"),e.k0s(),e.j41(269,"h4",29)(270,"span"),e.EFF(271,"R\xe9flexion et m\xe9tadonn\xe9es"),e.k0s()(),e.j41(272,"p"),e.EFF(273,"Nest offre la possibilit\xe9 d'attacher des "),e.j41(274,"strong"),e.EFF(275,"m\xe9tadonn\xe9es personnalis\xe9es"),e.k0s(),e.EFF(276," aux gestionnaires de routes gr\xe2ce aux d\xe9corateurs cr\xe9\xe9s via la m\xe9thode "),e.j41(277,"code"),e.EFF(278,"Reflector#createDecorator"),e.k0s(),e.EFF(279,", et le d\xe9corateur integr\xe9 "),e.j41(280,"code"),e.EFF(281,"@SetMetadata()"),e.k0s(),e.EFF(282,". Dans cette section, comparons les deux approches et voyons comment acc\xe9der aux m\xe9tadonn\xe9es depuis une garde ou un intercepteur."),e.k0s(),e.j41(283,"p"),e.EFF(284,"Pour cr\xe9er des d\xe9corateurs fortement typ\xe9s en utilisant "),e.j41(285,"code"),e.EFF(286,"Reflector#createDecorator"),e.k0s(),e.EFF(287,", nous devons sp\xe9cifier l'argument de type. Par exemple, cr\xe9ons un d\xe9corateur "),e.j41(288,"code"),e.EFF(289,"Roles"),e.k0s(),e.EFF(290," qui prend un tableau de cha\xeenes de caract\xe8res comme argument."),e.k0s(),e.j41(291,"app-copy-button",30)(292,"span",31),e.EFF(293),e.nI1(294,"extension"),e.nrm(295,"app-tabs",null,1),e.k0s(),e.j41(297,"pre")(298,"code",32),e.EFF(299,"\nimport { Reflector } from '@nestjs/core';\n\nexport const Roles = Reflector.createDecorator<string[]>();\n"),e.k0s()()(),e.j41(300,"p"),e.EFF(301,"Le decorateur "),e.j41(302,"code"),e.EFF(303,"Roles"),e.k0s(),e.EFF(304," ici est une fonction qui prend un seul argument de type "),e.j41(305,"code"),e.EFF(306,"string[]"),e.k0s(),e.EFF(307,"."),e.k0s(),e.j41(308,"p"),e.EFF(309,"Maintenant, pour utiliser ce d\xe9corateur, nous l'appliquons simplement au gestionnaire (handler):"),e.k0s(),e.j41(310,"app-copy-button",30)(311,"span",31),e.EFF(312),e.nI1(313,"extension"),e.nrm(314,"app-tabs",null,2),e.k0s(),e.j41(316,"pre")(317,"code",23),e.EFF(318,"\n@Post()\n@Roles(['admin'])\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}\n"),e.k0s()(),e.j41(319,"pre")(320,"code",23),e.EFF(321,"\n@Post()\n@Roles(['admin'])\n@Bind(Body())\nasync create(createCatDto) {\n  this.catsService.create(createCatDto);\n}\n"),e.k0s()()(),e.j41(322,"p"),e.EFF(323,"Ici, nous avons attach\xe9 les m\xe9tadonn\xe9es du d\xe9corateur "),e.j41(324,"code"),e.EFF(325,"Roles"),e.k0s(),e.EFF(326," \xe0 la m\xe9thode "),e.j41(327,"code"),e.EFF(328,"create()"),e.k0s(),e.EFF(329,", indiquant que seuls les utilisateurs ayant le r\xf4le "),e.j41(330,"code"),e.EFF(331,"admin"),e.k0s(),e.EFF(332," devraient \xeatre autoris\xe9s \xe0 acc\xe9der \xe0 cette route."),e.k0s(),e.j41(333,"p"),e.EFF(334,"Pour acc\xe9der au(x) r\xf4le(s) de la route (m\xe9tadonn\xe9es personnalis\xe9es), nous utiliserons \xe0 nouveau la classe d'aide "),e.j41(335,"code"),e.EFF(336,"Reflector"),e.k0s(),e.EFF(337,". "),e.j41(338,"code"),e.EFF(339,"Reflector"),e.k0s(),e.EFF(340," peut \xeatre inject\xe9 dans une classe de la mani\xe8re habituelle:"),e.k0s(),e.j41(341,"app-copy-button",30)(342,"span",31),e.EFF(343),e.nI1(344,"extension"),e.nrm(345,"app-tabs",null,3),e.k0s(),e.j41(347,"pre")(348,"code",23),e.EFF(349,"\n@Injectable()\nexport class RolesGuard {\n  constructor(private reflector: Reflector) {}\n}\n"),e.k0s()(),e.j41(350,"pre")(351,"code",23),e.EFF(352,"\n@Injectable()\n@Dependencies(Reflector)\nexport class CatsService {\n  constructor(reflector) {\n    this.reflector = reflector;\n  }\n}\n"),e.k0s()()(),e.j41(353,"blockquote",24)(354,"strong"),e.EFF(355,"Astuce"),e.k0s(),e.EFF(356," La classe "),e.j41(357,"code"),e.EFF(358,"Reflector"),e.k0s(),e.EFF(359," est import\xe9e du package "),e.j41(360,"code"),e.EFF(361,"@nestjs/core"),e.k0s(),e.EFF(362,".\n"),e.k0s(),e.j41(363,"p"),e.EFF(364,"Maintenant, pour lire le gestionnaire de m\xe9tadonn\xe9es, utilisez la m\xe9thode "),e.j41(365,"code"),e.EFF(366,"get()"),e.k0s(),e.EFF(367,"."),e.k0s(),e.j41(368,"app-copy-button")(369,"pre")(370,"code",23),e.EFF(371,"\nconst roles = this.reflector.get(Roles, context.getHandler());\n"),e.k0s()()(),e.j41(372,"p"),e.EFF(373,"La m\xe9thode "),e.j41(374,"code"),e.EFF(375,"Reflector#get"),e.k0s(),e.EFF(376," nous permet d'acc\xe9der facilement aux m\xe9tadonn\xe9es en passant deux arguments : une r\xe9f\xe9rence au d\xe9corateur et un "),e.j41(377,"strong"),e.EFF(378,"contexte"),e.k0s(),e.EFF(379," (cible du d\xe9corateur) \xe0 partir duquel r\xe9cup\xe9rer les m\xe9tadonn\xe9es. Dans cet exemple, le "),e.j41(380,"strong"),e.EFF(381,"d\xe9corateur"),e.k0s(),e.EFF(382," sp\xe9cifi\xe9 est "),e.j41(383,"code"),e.EFF(384,"'Roles'"),e.k0s(),e.EFF(385," (r\xe9f\xe9rez-vous au fichier "),e.j41(386,"code"),e.EFF(387,"roles.decorator.ts"),e.k0s(),e.EFF(388," ci-dessus et \xe0 l'appel "),e.j41(389,"code"),e.EFF(390,"SetMetadata()"),e.k0s(),e.EFF(391," qui y a \xe9t\xe9 fait). Le contexte est fourni par l'appel \xe0 "),e.j41(392,"code"),e.EFF(393,"context.getHandler()"),e.k0s(),e.EFF(394,", ce qui permet d'extraire les m\xe9tadonn\xe9es du gestionnaire de route en cours de traitement. Rappelez-vous, "),e.j41(395,"code"),e.EFF(396,"getHandler()"),e.k0s(),e.EFF(397," nous donne une "),e.j41(398,"strong"),e.EFF(399,"r\xe9f\xe9rence"),e.k0s(),e.EFF(400," \xe0 la fonction du gestionnaire de route."),e.k0s(),e.j41(401,"p"),e.EFF(402,"Nous pouvons \xe9galement organiser notre contr\xf4leur en appliquant des m\xe9tadonn\xe9es au niveau du contr\xf4leur, qui s'appliquent \xe0 toutes les routes de la classe du contr\xf4leur."),e.k0s(),e.j41(403,"app-copy-button",30)(404,"span",31),e.EFF(405),e.nI1(406,"extension"),e.nrm(407,"app-tabs",null,4),e.k0s(),e.j41(409,"pre")(410,"code",23),e.EFF(411,"\n@Roles(['admin'])\n@Controller('cats')\nexport class CatsController {}\n"),e.k0s()(),e.j41(412,"pre")(413,"code",23),e.EFF(414,"\n@Roles(['admin'])\n@Controller('cats')\nexport class CatsController {}\n"),e.k0s()()(),e.j41(415,"p"),e.EFF(416,"Dans ce cas, pour extraire les m\xe9tadonn\xe9es du contr\xf4leur, nous passons "),e.j41(417,"code"),e.EFF(418,"context.getClass()"),e.k0s(),e.EFF(419," comme second argument (pour fournir la classe du contr\xf4leur comme contexte pour l'extraction des m\xe9tadonn\xe9es) au lieu de "),e.j41(420,"code"),e.EFF(421,"context.getHandler()"),e.k0s(),e.EFF(422," :"),e.k0s(),e.j41(423,"app-copy-button",30)(424,"span",31),e.EFF(425),e.nI1(426,"extension"),e.nrm(427,"app-tabs",null,5),e.k0s(),e.j41(429,"pre")(430,"code",23),e.EFF(431,"\nconst roles = this.reflector.get(Roles, context.getClass());\n"),e.k0s()()(),e.j41(432,"p"),e.EFF(433,"Etant donn\xe9 la possibilit\xe9 de fournir des m\xe9tadonn\xe9es \xe0 plusieurs niveaux, vous pouvez avoir besoin d'extraire et de fusionner des m\xe9tadonn\xe9es provenant de plusieurs contextes. La classe "),e.j41(434,"code"),e.EFF(435,"Reflector"),e.k0s(),e.EFF(436," fournit deux m\xe9thodes utilitaires utilis\xe9es pour aider \xe0 cela. Ces m\xe9thodes extraient "),e.j41(437,"strong"),e.EFF(438,"\xe0 la fois"),e.k0s(),e.EFF(439," les m\xe9tadonn\xe9es du contr\xf4leur et de la m\xe9thode, et les combinent de diff\xe9rentes mani\xe8res."),e.k0s(),e.j41(440,"p"),e.EFF(441,"Consid\xe9rons le sc\xe9nario suivant, dans lequel vous avez fourni des m\xe9tadonn\xe9es "),e.j41(442,"code"),e.EFF(443,"Roles"),e.k0s(),e.EFF(444," aux deux niveaux."),e.k0s(),e.j41(445,"app-copy-button",30)(446,"span",31),e.EFF(447),e.nI1(448,"extension"),e.nrm(449,"app-tabs",null,6),e.k0s(),e.j41(451,"pre")(452,"code",23),e.EFF(453,"\n@Roles(['user'])\n@Controller('cats')\nexport class CatsController {\n  @Post()\n  @Roles(['admin'])\n  async create(@Body() createCatDto: CreateCatDto) {\n    this.catsService.create(createCatDto);\n  }\n}\n"),e.k0s()(),e.j41(454,"pre")(455,"code",23),e.EFF(456,"\n@Roles(['user'])\n@Controller('cats')\nexport class CatsController {}\n  @Post()\n  @Roles(['admin'])\n  @Bind(Body())\n  async create(createCatDto) {\n    this.catsService.create(createCatDto);\n  }\n}\n"),e.k0s()()(),e.j41(457,"p"),e.EFF(458,"Si votre intention est de sp\xe9cifier "),e.j41(459,"code"),e.EFF(460,"'user'"),e.k0s(),e.EFF(461," comme r\xf4le par d\xe9faut, et de le surcharger s\xe9lectivement pour certaines m\xe9thodes, vous devriez probablement utiliser la m\xe9thode "),e.j41(462,"code"),e.EFF(463,"getAllAndOverride()"),e.k0s(),e.EFF(464,"."),e.k0s(),e.j41(465,"app-copy-button")(466,"pre")(467,"code",23),e.EFF(468,"\nconst roles = this.reflector.getAllAndOverride(Roles, [context.getHandler(), context.getClass()]);\n"),e.k0s()()(),e.j41(469,"p"),e.EFF(470,"Une garde avec ce code, ex\xe9cut\xe9e dans le contexte de la m\xe9thode "),e.j41(471,"code"),e.EFF(472,"create()"),e.k0s(),e.EFF(473,", avec les m\xe9tadonn\xe9es ci-dessus, r\xe9sulterait en un "),e.j41(474,"code"),e.EFF(475,"roles"),e.k0s(),e.EFF(476," contenant "),e.j41(477,"code"),e.EFF(478,"['admin']"),e.k0s(),e.EFF(479,"."),e.k0s(),e.j41(480,"p"),e.EFF(481,"Pour obtenir les m\xe9tadonn\xe9es des deux et les fusionner (cette m\xe9thode fusionne \xe0 la fois les tableaux et les objets), utilisez la m\xe9thode "),e.j41(482,"code"),e.EFF(483,"getAllAndMerge()"),e.k0s(),e.EFF(484," :"),e.k0s(),e.j41(485,"app-copy-button")(486,"pre")(487,"code",23),e.EFF(488,"\nconst roles = this.reflector.getAllAndMerge(Roles, [context.getHandler(), context.getClass()]);\n"),e.k0s()()(),e.j41(489,"p"),e.EFF(490,"Le r\xe9sultat serait que "),e.j41(491,"code"),e.EFF(492,"roles"),e.k0s(),e.EFF(493," contiendrait "),e.j41(494,"code"),e.EFF(495,"['user', 'admin']"),e.k0s(),e.EFF(496,"."),e.k0s(),e.j41(497,"p"),e.EFF(498,"Pour ces deux m\xe9thodes de fusion, vous passez la r\xe9f\xe9rence du d\xe9corateur comme premier argument, et un tableau de contextes cibles de m\xe9tadonn\xe9es (c'est-\xe0-dire les appels aux m\xe9thodes "),e.j41(499,"code"),e.EFF(500,"getHandler()"),e.k0s(),e.EFF(501," et/ou "),e.j41(502,"code"),e.EFF(503,"getClass()"),e.k0s(),e.EFF(504,") comme second argument."),e.k0s(),e.j41(505,"h4",33)(506,"span"),e.EFF(507,"Approche de bas niveau"),e.k0s()(),e.j41(508,"p"),e.EFF(509,"Comme mentionn\xe9 pr\xe9c\xe9demment, au lieu d'utiliser "),e.j41(510,"code"),e.EFF(511,"Reflector#createDecorator"),e.k0s(),e.EFF(512,", vous pouvez \xe9galement utiliser le d\xe9corateur int\xe9gr\xe9 "),e.j41(513,"code"),e.EFF(514,"@SetMetadata()"),e.k0s(),e.EFF(515," pour attacher des m\xe9tadonn\xe9es \xe0 un gestionnaire."),e.k0s(),e.j41(516,"app-copy-button",30)(517,"span",31),e.EFF(518),e.nI1(519,"extension"),e.nrm(520,"app-tabs",null,7),e.k0s(),e.j41(522,"pre")(523,"code",23),e.EFF(524,"\n@Post()\n@SetMetadata('roles', ['admin'])\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}\n"),e.k0s()(),e.j41(525,"pre")(526,"code",23),e.EFF(527,"\n@Post()\n@SetMetadata('roles', ['admin'])\n@Bind(Body())\nasync create(createCatDto) {\n  this.catsService.create(createCatDto);\n}\n"),e.k0s()()(),e.j41(528,"blockquote",24)(529,"strong"),e.EFF(530,"Astuce"),e.k0s(),e.EFF(531," Le d\xe9corateur @SetMetadata() est import\xe9 depuis le package @nestjs/common.\n"),e.k0s(),e.j41(532,"p"),e.EFF(533,"Avec la construction ci-dessus, nous avons attach\xe9 les m\xe9tadonn\xe9es "),e.j41(534,"code"),e.EFF(535,"roles"),e.k0s(),e.EFF(536," ("),e.j41(537,"code"),e.EFF(538,"roles"),e.k0s(),e.EFF(539," est une cl\xe9 de m\xe9tadonn\xe9es et "),e.j41(540,"code"),e.EFF(541,"['admin']"),e.k0s(),e.EFF(542," est la valeur associ\xe9e) \xe0 la m\xe9thode "),e.j41(543,"code"),e.EFF(544,"create()"),e.k0s(),e.EFF(545,". Bien que cela fonctionne, il n'est pas recommand\xe9 d'utiliser "),e.j41(546,"code"),e.EFF(547,"@SetMetadata()"),e.k0s(),e.EFF(548," directement dans vos routes. Au lieu de cela, vous pouvez cr\xe9er vos propres d\xe9corateurs, comme illustr\xe9 ci-dessous :"),e.k0s(),e.j41(549,"app-copy-button",30)(550,"span",31),e.EFF(551),e.nI1(552,"extension"),e.nrm(553,"app-tabs",null,8),e.k0s(),e.j41(555,"pre")(556,"code",23),e.EFF(557,"\nimport { SetMetadata } from '@nestjs/common';\n\nexport const Roles = (...roles: string[]) => SetMetadata('roles', roles);\n"),e.k0s()(),e.j41(558,"pre")(559,"code",23),e.EFF(560,"\nimport { SetMetadata } from '@nestjs/common';\n\nexport const Roles = (...roles) => SetMetadata('roles', roles);\n"),e.k0s()()(),e.j41(561,"p"),e.EFF(562,"Cette approche est beaucoup plus propre et lisible, et ressemble en quelque sorte \xe0 l'approche "),e.j41(563,"code"),e.EFF(564,"Reflector#createDecorator"),e.k0s(),e.EFF(565,". La diff\xe9rence r\xe9side dans le fait qu'avec "),e.j41(566,"code"),e.EFF(567,"@SetMetadata"),e.k0s(),e.EFF(568,", vous avez plus de contr\xf4le sur la cl\xe9 et la valeur des m\xe9tadonn\xe9es, et vous pouvez \xe9galement cr\xe9er des d\xe9corateurs qui prennent plus d'un argument."),e.k0s(),e.j41(569,"p"),e.EFF(570,"Maintenant que nous avons un d\xe9corateur "),e.j41(571,"code"),e.EFF(572,"@Roles()"),e.k0s(),e.EFF(573," personnalis\xe9, nous pouvons l'utiliser pour d\xe9corer la m\xe9thode "),e.j41(574,"code"),e.EFF(575,"create()"),e.k0s(),e.EFF(576,"."),e.k0s(),e.j41(577,"app-copy-button",30)(578,"span",31),e.EFF(579),e.nI1(580,"extension"),e.nrm(581,"app-tabs",null,9),e.k0s(),e.j41(583,"pre")(584,"code",23),e.EFF(585,"\n@Post()\n@Roles('admin')\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}\n"),e.k0s()(),e.j41(586,"pre")(587,"code",23),e.EFF(588,"\n@Post()\n@Roles('admin')\n@Bind(Body())\nasync create(createCatDto) {\n  this.catsService.create(createCatDto);\n}\n"),e.k0s()()(),e.j41(589,"p"),e.EFF(590,"Pour acc\xe9der aux r\xf4les de la route (m\xe9tadonn\xe9es personnalis\xe9es), nous utiliserons \xe0 nouveau la classe d'aide "),e.j41(591,"code"),e.EFF(592,"Reflector"),e.k0s(),e.EFF(593," :"),e.k0s(),e.j41(594,"app-copy-button",30)(595,"span",31),e.EFF(596),e.nI1(597,"extension"),e.nrm(598,"app-tabs",null,10),e.k0s(),e.j41(600,"pre")(601,"code",23),e.EFF(602,"\n@Injectable()\nexport class RolesGuard {\n  constructor(private reflector: Reflector) {}\n}\n"),e.k0s()(),e.j41(603,"pre")(604,"code",23),e.EFF(605,"\n@Injectable()\n@Dependencies(Reflector)\nexport class CatsService {\n  constructor(reflector) {\n    this.reflector = reflector;\n  }\n}\n"),e.k0s()()(),e.j41(606,"blockquote",24)(607,"strong"),e.EFF(608,"Astuce"),e.k0s(),e.EFF(609," La classe Reflector est import\xe9e depuis le package @nestjs/core.\n"),e.k0s(),e.j41(610,"p"),e.EFF(611,"Maintenant, pour lire les m\xe9tadonn\xe9es du gestionnaire, utilisez la m\xe9thode get()."),e.k0s(),e.j41(612,"app-copy-button")(613,"pre")(614,"code",23),e.EFF(615,"\nconst roles = this.reflector.get<string[]>('roles', context.getHandler());\n"),e.k0s()()(),e.j41(616,"p"),e.EFF(617,"Ici, au lieu de passer une r\xe9f\xe9rence au d\xe9corateur, nous passons la "),e.j41(618,"strong"),e.EFF(619,"cl\xe9"),e.k0s(),e.EFF(620," des m\xe9tadonn\xe9es en tant que premier argument (dans notre cas, c'est "),e.j41(621,"code"),e.EFF(622,"'roles'"),e.k0s(),e.EFF(623,"). Tout le reste reste identique \xe0 l'exemple "),e.j41(624,"code"),e.EFF(625,"Reflector#createDecorator"),e.k0s(),e.EFF(626,"."),e.k0s()()),2&t){const u=e.sdS(296),r=e.sdS(315),a=e.sdS(346),c=e.sdS(408),j=e.sdS(428),F=e.sdS(450),m=e.sdS(521),g=e.sdS(554),h=e.sdS(582),b=e.sdS(599);e.R7$(293),e.SpI(" ",e.i5U(294,42,"roles.decorator",u.isJsActive),"\n"),e.R7$(19),e.SpI(" ",e.i5U(313,45,"cats.controller",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(24),e.SpI(" ",e.i5U(344,48,"roles.guard",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(55),e.SpI(" ",e.i5U(406,51,"cats.controller",c.isJsActive),"\n"),e.R7$(4),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(13),e.SpI(" ",e.i5U(426,54,"roles.guard",j.isJsActive),"\n"),e.R7$(22),e.SpI(" ",e.i5U(448,57,"cats.controller",F.isJsActive),"\n"),e.R7$(4),e.AVh("hide",F.isJsActive),e.R7$(3),e.AVh("hide",!F.isJsActive),e.R7$(64),e.SpI(" ",e.i5U(519,60,"cats.controller",m.isJsActive),"\n"),e.R7$(4),e.AVh("hide",m.isJsActive),e.R7$(3),e.AVh("hide",!m.isJsActive),e.R7$(26),e.SpI(" ",e.i5U(552,63,"roles.decorator",g.isJsActive),"\n"),e.R7$(4),e.AVh("hide",g.isJsActive),e.R7$(3),e.AVh("hide",!g.isJsActive),e.R7$(21),e.SpI(" ",e.i5U(580,66,"cats.controller",h.isJsActive),"\n"),e.R7$(4),e.AVh("hide",h.isJsActive),e.R7$(3),e.AVh("hide",!h.isJsActive),e.R7$(10),e.SpI(" ",e.i5U(597,69,"roles.guard",b.isJsActive),"\n"),e.R7$(4),e.AVh("hide",b.isJsActive),e.R7$(3),e.AVh("hide",!b.isJsActive)}},dependencies:[f.O,E.a,N.d,p.z,d.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Contexte d'ex\xe9cution"}},{path:"lifecycle-events",component:R,data:{title:"\xc9v\xe9nements du cycle de vie"}},{path:"circular-dependency",component:S,data:{title:"D\xe9pendance circulaire"}}];let P=(()=>{class s{static \u0275fac=function(t){return new(t||s)};static \u0275mod=e.$C({type:s});static \u0275inj=e.G2t({imports:[C.MD,y.G,d.iI.forChild(L)]})}return s})()}}]);