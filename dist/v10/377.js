"use strict";(self.webpackChunkdocs_nestjs_com=self.webpackChunkdocs_nestjs_com||[]).push([[377],{3377:(ee,q,m)=>{m.r(q),m.d(q,{RecipesModule:()=>Y});var I=m(177),k=m(685),w=m(445),p=m(8050),e=m(4438),v=m(5119),l=m(4819),d=m(2469),f=m(5663);let P=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-cqrs"]],features:[e.Vt3],decls:522,vars:64,consts:[["contentReference",""],["appc5465dacaf5381e568cb616d18ea1835ecf9be53",""],["appd24db7a090802005a79abf8e71f5fde0d6e5b770",""],["app0d3e4c164c6a145b0c94ecd78dfa05c7c18d6d34",""],["app719a7d5f4f929b21ab6a823ddaf6b4aa0e190943",""],["appeae81056361d5cab414d60e808c034a2374306f5",""],["app539848cdc0e4078f76c6a0361dba09ace53d933d",""],["appfbdfdf72d90869ef98d84a648636a667019d5842",""],["app33a6095da49c47d7499c70efd201d47c80ca46ed",""],["app042e98751948dbd41dfd7aed9c005eaea8e91cf5",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/cqrs.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","cqrs"],["rel","nofollow","target","_blank","href","https://en.wikipedia.org/wiki/Create,_read,_update_and_delete"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/cqrs"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","commandes"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],["appAnchor","","id","requ\xeates"],["appAnchor","","id","ev\xe9nements"],[1,"info"],["href","/exception-filters"],["href","/recipes/cqrs#sagas"],["routerLink","/websockets/gateways"],["routerLink","/techniques/server-sent-events"],["appAnchor","","id","sagas"],["rel","nofollow","target","_blank","href","https://github.com/ReactiveX/rxjs"],["appAnchor","","id","mise-en-place"],["appAnchor","","id","exceptions-non-g\xe9r\xe9es"],["appAnchor","","id","sabonner-\xe0-tous-les-\xe9v\xe9nements"],["appAnchor","","id","exemple"],["rel","nofollow","target","_blank","href","https://github.com/kamilmysliwiec/nest-cqrs-example"]],template:function(t,o){if(1&t&&(e.j41(0,"div",10,0)(2,"div",11)(3,"a",12),e.nrm(4,"i",13),e.k0s()(),e.j41(5,"h3",14),e.EFF(6,"CQRS"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Le flux des applications simples "),e.j41(9,"a",15),e.EFF(10,"CRUD"),e.k0s(),e.EFF(11," (Cr\xe9er, Lire, Mettre \xe0 jour et Supprimer) peut \xeatre d\xe9crit comme suit :"),e.k0s(),e.j41(12,"ol")(13,"li"),e.EFF(14,"La couche des contr\xf4leurs traite les demandes HTTP et d\xe9l\xe8gue les t\xe2ches \xe0 la couche des services."),e.k0s(),e.j41(15,"li"),e.EFF(16,"C'est dans la couche des services que se trouve la majeure partie de la logique d'entreprise."),e.k0s(),e.j41(17,"li"),e.EFF(18,"Les services utilisent des r\xe9f\xe9rentiels / DAO pour modifier / maintenir les entit\xe9s."),e.k0s(),e.j41(19,"li"),e.EFF(20,"Les entit\xe9s agissent comme des conteneurs pour les valeurs, avec des setters et des getters."),e.k0s()(),e.j41(21,"p"),e.EFF(22,"Si ce mod\xe8le est g\xe9n\xe9ralement suffisant pour les applications de petite et moyenne taille, il n'est pas forc\xe9ment le meilleur choix pour les applications plus importantes et plus complexes. Dans ce cas, le mod\xe8le "),e.j41(23,"strong"),e.EFF(24,"CQRS"),e.k0s(),e.EFF(25," (Command and Query Responsibility Segregation) peut \xeatre plus appropri\xe9 et plus \xe9volutif (en fonction des exigences de l'application). Les avantages de ce mod\xe8le sont les suivants"),e.k0s(),e.j41(26,"ul")(27,"li")(28,"strong"),e.EFF(29,"S\xe9paration des pr\xe9occupations"),e.k0s(),e.EFF(30,". Le mod\xe8le s\xe9pare les op\xe9rations de lecture et d'\xe9criture dans des mod\xe8les distincts."),e.k0s(),e.j41(31,"li")(32,"strong"),e.EFF(33,"\xc9volutivit\xe9"),e.k0s(),e.EFF(34,". Les op\xe9rations de lecture et d'\xe9criture peuvent \xeatre mises \xe0 l'\xe9chelle ind\xe9pendamment."),e.k0s(),e.j41(35,"li")(36,"strong"),e.EFF(37,"Flexibilit\xe9"),e.k0s(),e.EFF(38,". Le mod\xe8le permet d'utiliser diff\xe9rents magasins de donn\xe9es pour les op\xe9rations de lecture et d'\xe9criture."),e.k0s(),e.j41(39,"li")(40,"strong"),e.EFF(41,"Performance"),e.k0s(),e.EFF(42,". Le mod\xe8le permet d'utiliser diff\xe9rents magasins de donn\xe9es optimis\xe9s pour les op\xe9rations de lecture et d'\xe9criture."),e.k0s()(),e.j41(43,"p"),e.EFF(44,"Pour faciliter ce mod\xe8le, Nest fournit un "),e.j41(45,"a",16),e.EFF(46,"module CQRS"),e.k0s(),e.EFF(47," l\xe9ger . Ce chapitre d\xe9crit comment l'utiliser."),e.k0s(),e.j41(48,"h4",17)(49,"span"),e.EFF(50,"Installation"),e.k0s()(),e.j41(51,"p"),e.EFF(52,"Installez d'abord le package requis :"),e.k0s(),e.j41(53,"pre")(54,"code",18),e.EFF(55,"\n$ npm install --save @nestjs/cqrs\n"),e.k0s()(),e.j41(56,"h4",19)(57,"span"),e.EFF(58,"Commandes"),e.k0s()(),e.j41(59,"p"),e.EFF(60,"Les commandes sont utilis\xe9es pour modifier l'\xe9tat de l'application. Elles doivent \xeatre bas\xe9es sur des t\xe2ches plut\xf4t que sur des donn\xe9es. Lorsqu'une commande est envoy\xe9e, elle est trait\xe9e par un "),e.j41(61,"strong"),e.EFF(62,"Gestionnaire de commande"),e.k0s(),e.EFF(63," correspondant. Le gestionnaire est responsable de la mise \xe0 jour de l'\xe9tat de l'application."),e.k0s(),e.j41(64,"app-copy-button",20)(65,"span",21),e.EFF(66),e.nI1(67,"extension"),e.nrm(68,"app-tabs",null,1),e.k0s(),e.j41(70,"pre")(71,"code",22),e.EFF(72,"\n@Injectable()\nexport class HeroesGameService {\n  constructor(private commandBus: CommandBus) {}\n\n  async killDragon(heroId: string, killDragonDto: KillDragonDto) {\n    return this.commandBus.execute(\n      new KillDragonCommand(heroId, killDragonDto.dragonId)\n    );\n  }\n}\n"),e.k0s()(),e.j41(73,"pre")(74,"code",22),e.EFF(75,"\n@Injectable()\n@Dependencies(CommandBus)\nexport class HeroesGameService {\n  constructor(commandBus) {\n    this.commandBus = commandBus;\n  }\n\n  async killDragon(heroId, killDragonDto) {\n    return this.commandBus.execute(\n      new KillDragonCommand(heroId, killDragonDto.dragonId)\n    );\n  }\n}\n"),e.k0s()()(),e.j41(76,"p"),e.EFF(77,"Dans l'extrait de code ci-dessus, nous instancions la classe "),e.j41(78,"code"),e.EFF(79,"KillDragonCommand"),e.k0s(),e.EFF(80," et la passons \xe0 la m\xe9thode "),e.j41(81,"code"),e.EFF(82,"execute()"),e.k0s(),e.EFF(83," du "),e.j41(84,"code"),e.EFF(85,"CommandBus"),e.k0s(),e.EFF(86,". C'est la classe de commande d\xe9montr\xe9e :"),e.k0s(),e.j41(87,"app-copy-button",20)(88,"span",21),e.EFF(89),e.nI1(90,"extension"),e.nrm(91,"app-tabs",null,2),e.k0s(),e.j41(93,"pre")(94,"code",22),e.EFF(95,"\nexport class KillDragonCommand {\n  constructor(\n    public readonly heroId: string,\n    public readonly dragonId: string,\n  ) {}\n}\n"),e.k0s()(),e.j41(96,"pre")(97,"code",22),e.EFF(98,"\nexport class KillDragonCommand {\n  constructor(heroId, dragonId) {\n    this.heroId = heroId;\n    this.dragonId = dragonId;\n  }\n}\n"),e.k0s()()(),e.j41(99,"p"),e.EFF(100,"Le "),e.j41(101,"code"),e.EFF(102,"CommandBus"),e.k0s(),e.EFF(103," repr\xe9sente un "),e.j41(104,"strong"),e.EFF(105,"flux"),e.k0s(),e.EFF(106," de commandes. Il est responsable de l'envoi des commandes aux gestionnaires appropri\xe9s. La m\xe9thode "),e.j41(107,"code"),e.EFF(108,"execute()"),e.k0s(),e.EFF(109," renvoie une promesse, qui se r\xe9sout en la valeur renvoy\xe9e par le gestionnaire."),e.k0s(),e.j41(110,"p"),e.EFF(111,"Cr\xe9ons un gestionnaire pour la commande "),e.j41(112,"code"),e.EFF(113,"KillDragonCommand"),e.k0s(),e.EFF(114,"."),e.k0s(),e.j41(115,"app-copy-button",20)(116,"span",21),e.EFF(117),e.nI1(118,"extension"),e.nrm(119,"app-tabs",null,3),e.k0s(),e.j41(121,"pre")(122,"code",22),e.EFF(123,"\n@CommandHandler(KillDragonCommand)\nexport class KillDragonHandler implements ICommandHandler<KillDragonCommand> {\n  constructor(private repository: HeroRepository) {}\n\n  async execute(command: KillDragonCommand) {\n    const { heroId, dragonId } = command;\n    const hero = this.repository.findOneById(+heroId);\n\n    hero.killEnemy(dragonId);\n    await this.repository.persist(hero);\n  }\n}\n"),e.k0s()(),e.j41(124,"pre")(125,"code",22),e.EFF(126,"\n@CommandHandler(KillDragonCommand)\n@Dependencies(HeroRepository)\nexport class KillDragonHandler {\n  constructor(repository) {\n    this.repository = repository;\n  }\n\n  async execute(command) {\n    const { heroId, dragonId } = command;\n    const hero = this.repository.findOneById(+heroId);\n\n    hero.killEnemy(dragonId);\n    await this.repository.persist(hero);\n  }\n}\n"),e.k0s()()(),e.j41(127,"p"),e.EFF(128,"Ce handler r\xe9cup\xe8re l'entit\xe9 "),e.j41(129,"code"),e.EFF(130,"Hero"),e.k0s(),e.EFF(131," dans le repository, appelle la m\xe9thode "),e.j41(132,"code"),e.EFF(133,"killEnemy()"),e.k0s(),e.EFF(134,", puis persiste les changements. La classe "),e.j41(135,"code"),e.EFF(136,"KillDragonHandler"),e.k0s(),e.EFF(137," impl\xe9mente l'interface "),e.j41(138,"code"),e.EFF(139,"ICommandHandler"),e.k0s(),e.EFF(140,", qui requiert l'impl\xe9mentation de la m\xe9thode "),e.j41(141,"code"),e.EFF(142,"execute()"),e.k0s(),e.EFF(143,". La m\xe9thode "),e.j41(144,"code"),e.EFF(145,"execute()"),e.k0s(),e.EFF(146," re\xe7oit l'objet commande comme argument."),e.k0s(),e.j41(147,"h4",23)(148,"span"),e.EFF(149,"Requ\xeates"),e.k0s()(),e.j41(150,"p"),e.EFF(151,"Les requ\xeates sont utilis\xe9es pour extraire des donn\xe9es de l'\xe9tat de l'application. Elles doivent \xeatre centr\xe9es sur les donn\xe9es plut\xf4t que sur les t\xe2ches. Lorsqu'une requ\xeate est envoy\xe9e, elle est trait\xe9e par un "),e.j41(152,"strong"),e.EFF(153,"Gestionnaire de requ\xeates"),e.k0s(),e.EFF(154," correspondant. Le gestionnaire est responsable de l'extraction des donn\xe9es."),e.k0s(),e.j41(155,"p"),e.EFF(156,"Le "),e.j41(157,"code"),e.EFF(158,"QueryBus"),e.k0s(),e.EFF(159," suit le m\xeame mod\xe8le que le "),e.j41(160,"code"),e.EFF(161,"CommandBus"),e.k0s(),e.EFF(162,". Les gestionnaires de requ\xeates doivent impl\xe9menter l'interface "),e.j41(163,"code"),e.EFF(164,"IQueryHandler"),e.k0s(),e.EFF(165," et \xeatre annot\xe9s avec le d\xe9corateur "),e.j41(166,"code"),e.EFF(167,"@QueryHandler()"),e.k0s(),e.EFF(168,"."),e.k0s(),e.j41(169,"h4",24)(170,"span"),e.EFF(171,"Ev\xe9nements"),e.k0s()(),e.j41(172,"p"),e.EFF(173,"Les \xe9v\xe9nements sont utilis\xe9s pour notifier les autres parties de l'application des changements dans l'\xe9tat de l'application. Ils sont envoy\xe9s par les "),e.j41(174,"strong"),e.EFF(175,"mod\xe8les"),e.k0s(),e.EFF(176," ou directement en utilisant le "),e.j41(177,"code"),e.EFF(178,"EventBus"),e.k0s(),e.EFF(179,". Lorsqu'un \xe9v\xe9nement est envoy\xe9, il est trait\xe9 par les "),e.j41(180,"strong"),e.EFF(181,"Gestionnaires d'\xe9v\xe9nements"),e.k0s(),e.EFF(182," correspondants. Les gestionnaires peuvent alors, par exemple, mettre \xe0 jour le mod\xe8le de lecture."),e.k0s(),e.j41(183,"p"),e.EFF(184,"\xc0 des fins de d\xe9monstration, cr\xe9ons une classe d'\xe9v\xe9nements :"),e.k0s(),e.j41(185,"app-copy-button",20)(186,"span",21),e.EFF(187),e.nI1(188,"extension"),e.nrm(189,"app-tabs",null,4),e.k0s(),e.j41(191,"pre")(192,"code",22),e.EFF(193,"\nexport class HeroKilledDragonEvent {\n  constructor(\n    public readonly heroId: string,\n    public readonly dragonId: string,\n  ) {}\n}\n"),e.k0s()(),e.j41(194,"pre")(195,"code",22),e.EFF(196,"\nexport class HeroKilledDragonEvent {\n  constructor(heroId, dragonId) {\n    this.heroId = heroId;\n    this.dragonId = dragonId;\n  }\n}\n"),e.k0s()()(),e.j41(197,"p"),e.EFF(198,"Maintenant, alors que les \xe9v\xe9nements peuvent \xeatre distribu\xe9s directement en utilisant la m\xe9thode "),e.j41(199,"code"),e.EFF(200,"EventBus.publish()"),e.k0s(),e.EFF(201,", nous pouvons aussi les distribuer depuis le mod\xe8le. Mettons \xe0 jour le mod\xe8le "),e.j41(202,"code"),e.EFF(203,"Hero"),e.k0s(),e.EFF(204," pour dispatcher l'\xe9v\xe9nement "),e.j41(205,"code"),e.EFF(206,"HeroKilledDragonEvent"),e.k0s(),e.EFF(207," lorsque la m\xe9thode "),e.j41(208,"code"),e.EFF(209,"killEnemy()"),e.k0s(),e.EFF(210," est appel\xe9e."),e.k0s(),e.j41(211,"app-copy-button",20)(212,"span",21),e.EFF(213),e.nI1(214,"extension"),e.nrm(215,"app-tabs",null,5),e.k0s(),e.j41(217,"pre")(218,"code",22),e.EFF(219,"\nexport class Hero extends AggregateRoot {\n  constructor(private id: string) {\n    super();\n  }\n\n  killEnemy(enemyId: string) {\n    // Logique m\xe9tier\n    this.apply(new HeroKilledDragonEvent(this.id, enemyId));\n  }\n}\n"),e.k0s()(),e.j41(220,"pre")(221,"code",22),e.EFF(222,"\nexport class Hero extends AggregateRoot {\n  constructor(id) {\n    super();\n    this.id = id;\n  }\n\n  killEnemy(enemyId) {\n    // Logique m\xe9tier\n    this.apply(new HeroKilledDragonEvent(this.id, enemyId));\n  }\n}\n"),e.k0s()()(),e.j41(223,"p"),e.EFF(224,"La m\xe9thode "),e.j41(225,"code"),e.EFF(226,"apply()"),e.k0s(),e.EFF(227," est utilis\xe9e pour distribuer les \xe9v\xe9nements. Elle accepte un objet \xe9v\xe9nement comme argument. Cependant, comme notre mod\xe8le ne conna\xeet pas le "),e.j41(228,"code"),e.EFF(229,"EventBus"),e.k0s(),e.EFF(230,", nous devons l'associer au mod\xe8le. Nous pouvons le faire en utilisant la classe "),e.j41(231,"code"),e.EFF(232,"EventPublisher"),e.k0s(),e.EFF(233,"."),e.k0s(),e.j41(234,"app-copy-button",20)(235,"span",21),e.EFF(236),e.nI1(237,"extension"),e.nrm(238,"app-tabs",null,6),e.k0s(),e.j41(240,"pre")(241,"code",22),e.EFF(242,"\n@CommandHandler(KillDragonCommand)\nexport class KillDragonHandler implements ICommandHandler<KillDragonCommand> {\n  constructor(\n    private repository: HeroRepository,\n    private publisher: EventPublisher,\n  ) {}\n\n  async execute(command: KillDragonCommand) {\n    const { heroId, dragonId } = command;\n    const hero = this.publisher.mergeObjectContext(\n      await this.repository.findOneById(+heroId),\n    );\n    hero.killEnemy(dragonId);\n    hero.commit();\n  }\n}\n"),e.k0s()(),e.j41(243,"pre")(244,"code",22),e.EFF(245,"\n@CommandHandler(KillDragonCommand)\n@Dependencies(HeroRepository, EventPublisher)\nexport class KillDragonHandler {\n  constructor(repository, publisher) {\n    this.repository = repository;\n    this.publisher = publisher;\n  }\n\n  async execute(command) {\n    const { heroId, dragonId } = command;\n    const hero = this.publisher.mergeObjectContext(\n      await this.repository.findOneById(+heroId),\n    );\n    hero.killEnemy(dragonId);\n    hero.commit();\n  }\n}\n"),e.k0s()()(),e.j41(246,"p"),e.EFF(247,"La m\xe9thode "),e.j41(248,"code"),e.EFF(249,"EventPublisher#mergeObjectContext"),e.k0s(),e.EFF(250," fusionne l'\xe9diteur d'\xe9v\xe9nements dans l'objet fourni, ce qui signifie que l'objet pourra d\xe9sormais publier des \xe9v\xe9nements dans le flux d'\xe9v\xe9nements."),e.k0s(),e.j41(251,"p"),e.EFF(252,"Notez que dans cet exemple, nous appelons \xe9galement la m\xe9thode "),e.j41(253,"code"),e.EFF(254,"commit()"),e.k0s(),e.EFF(255," sur le mod\xe8le. Cette m\xe9thode est utilis\xe9e pour distribuer les \xe9v\xe9nements en cours. Pour distribuer automatiquement les \xe9v\xe9nements, nous pouvons mettre la propri\xe9t\xe9 "),e.j41(256,"code"),e.EFF(257,"autoCommit"),e.k0s(),e.EFF(258," \xe0 "),e.j41(259,"code"),e.EFF(260,"true"),e.k0s(),e.EFF(261," :"),e.k0s(),e.j41(262,"app-copy-button")(263,"pre")(264,"code",22),e.EFF(265,"\nexport class Hero extends AggregateRoot {\n  constructor(private id: string) {\n    super();\n    this.autoCommit = true;\n  }\n}\n"),e.k0s()()(),e.j41(266,"p"),e.EFF(267,"Dans le cas o\xf9 nous voulons fusionner l'\xe9diteur d'\xe9v\xe9nements dans un objet inexistant, mais plut\xf4t dans une classe, nous pouvons utiliser la m\xe9thode "),e.j41(268,"code"),e.EFF(269,"EventPublisher#mergeClassContext"),e.k0s(),e.EFF(270," :"),e.k0s(),e.j41(271,"app-copy-button")(272,"pre")(273,"code",22),e.EFF(274,"\nconst HeroModel = this.publisher.mergeClassContext(Hero);\nconst hero = new HeroModel('id'); // <-- HeroModel est une classe\n"),e.k0s()()(),e.j41(275,"p"),e.EFF(276,"Maintenant, chaque instance de la classe "),e.j41(277,"code"),e.EFF(278,"HeroModel"),e.k0s(),e.EFF(279," sera capable de publier des \xe9v\xe9nements sans utiliser la m\xe9thode "),e.j41(280,"code"),e.EFF(281,"mergeObjectContext()"),e.k0s(),e.EFF(282,"."),e.k0s(),e.j41(283,"p"),e.EFF(284,"De plus, nous pouvons \xe9mettre des \xe9v\xe9nements manuellement en utilisant "),e.j41(285,"code"),e.EFF(286,"EventBus"),e.k0s(),e.EFF(287," :"),e.k0s(),e.j41(288,"app-copy-button")(289,"pre")(290,"code",22),e.EFF(291,"\nthis.eventBus.publish(new HeroKilledDragonEvent());\n"),e.k0s()()(),e.j41(292,"blockquote",25)(293,"strong"),e.EFF(294,"Astuce"),e.k0s(),e.EFF(295," Le "),e.j41(296,"code"),e.EFF(297,"EventBus"),e.k0s(),e.EFF(298," est une classe injectable.\n"),e.k0s(),e.j41(299,"p"),e.EFF(300,"Chaque \xe9v\xe9nement peut avoir plusieurs "),e.j41(301,"strong"),e.EFF(302,"gestionnaires d'\xe9v\xe9nements"),e.k0s(),e.EFF(303,"."),e.k0s(),e.j41(304,"app-copy-button",20)(305,"span",21),e.EFF(306),e.nI1(307,"extension"),e.nrm(308,"app-tabs",null,7),e.k0s(),e.j41(310,"pre")(311,"code",22),e.EFF(312,"\n@EventsHandler(HeroKilledDragonEvent)\nexport class HeroKilledDragonHandler implements IEventHandler<HeroKilledDragonEvent> {\n  constructor(private repository: HeroRepository) {}\n\n  handle(event: HeroKilledDragonEvent) {\n    // Logique m\xe9tier\n  }\n}\n"),e.k0s()()(),e.j41(313,"blockquote",25)(314,"strong"),e.EFF(315,"Astuce"),e.k0s(),e.EFF(316," Sachez que lorsque vous commencez \xe0 utiliser des gestionnaires d'\xe9v\xe9nements, vous sortez du contexte web HTTP traditionnel.\n"),e.j41(317,"ul")(318,"li"),e.EFF(319,"Les erreurs dans les "),e.j41(320,"code"),e.EFF(321,"CommandHandlers"),e.k0s(),e.EFF(322," peuvent toujours \xeatre captur\xe9es par les "),e.j41(323,"a",26),e.EFF(324,"filtres d'exception"),e.k0s(),e.EFF(325," int\xe9gr\xe9s."),e.k0s(),e.j41(326,"li"),e.EFF(327,"Les erreurs dans les "),e.j41(328,"code"),e.EFF(329,"EventHandlers"),e.k0s(),e.EFF(330," ne peuvent pas \xeatre captur\xe9es par les filtres d'exception : vous devrez les g\xe9rer manuellement. Soit par un simple "),e.j41(331,"code"),e.EFF(332,"try/catch"),e.k0s(),e.EFF(333,", soit en utilisant "),e.j41(334,"a",27),e.EFF(335,"Sagas"),e.k0s(),e.EFF(336," en d\xe9clenchant un \xe9v\xe9nement compensatoire, ou toute autre solution que vous choisirez."),e.k0s(),e.j41(337,"li"),e.EFF(338,"Les r\xe9ponses HTTP dans les "),e.j41(339,"code"),e.EFF(340,"CommandHandlers"),e.k0s(),e.EFF(341," peuvent toujours \xeatre renvoy\xe9es au client."),e.k0s(),e.j41(342,"li"),e.EFF(343,"Les r\xe9ponses HTTP dans les "),e.j41(344,"code"),e.EFF(345,"EventHandlers"),e.k0s(),e.EFF(346," ne le peuvent pas. Si vous voulez envoyer des informations au client, vous pouvez utiliser "),e.j41(347,"a",28),e.EFF(348,"WebSocket"),e.k0s(),e.EFF(349,", "),e.j41(350,"a",29),e.EFF(351,"SSE"),e.k0s(),e.EFF(352,", ou toute autre solution de votre choix."),e.k0s()()(),e.j41(353,"h4",30)(354,"span"),e.EFF(355,"Sagas"),e.k0s()(),e.j41(356,"p"),e.EFF(357,"Saga est un processus de longue dur\xe9e qui \xe9coute les \xe9v\xe9nements et peut d\xe9clencher de nouvelles commandes. Elle est g\xe9n\xe9ralement utilis\xe9e pour g\xe9rer des flux de travail complexes dans l'application. Par exemple, lorsqu'un utilisateur s'inscrit, une saga peut \xe9couter l'\xe9v\xe9nement "),e.j41(358,"code"),e.EFF(359,"UserRegisteredEvent"),e.k0s(),e.EFF(360," et envoyer un e-mail de bienvenue \xe0 l'utilisateur."),e.k0s(),e.j41(361,"p"),e.EFF(362,"Les sagas sont un outil extr\xeamement puissant. Une seule saga peut \xe9couter 1..* \xe9v\xe9nements. En utilisant la biblioth\xe8que "),e.j41(363,"a",31),e.EFF(364,"RxJS"),e.k0s(),e.EFF(365,", nous pouvons filtrer, mapper, forker et fusionner des flux d'\xe9v\xe9nements pour cr\xe9er des flux de travail sophistiqu\xe9s. Chaque saga renvoie un Observable qui produit une instance de commande. Cette commande est ensuite distribu\xe9e de mani\xe8re "),e.j41(366,"strong"),e.EFF(367,"asynchrone"),e.k0s(),e.EFF(368," par le "),e.j41(369,"code"),e.EFF(370,"CommandBus"),e.k0s(),e.EFF(371,"."),e.k0s(),e.j41(372,"p"),e.EFF(373,"Cr\xe9ons une saga qui \xe9coute le "),e.j41(374,"code"),e.EFF(375,"HeroKilledDragonEvent"),e.k0s(),e.EFF(376," et envoie la commande "),e.j41(377,"code"),e.EFF(378,"DropAncientItemCommand"),e.k0s(),e.EFF(379,"."),e.k0s(),e.j41(380,"app-copy-button",20)(381,"span",21),e.EFF(382),e.nI1(383,"extension"),e.nrm(384,"app-tabs",null,8),e.k0s(),e.j41(386,"pre")(387,"code",22),e.EFF(388,"\n@Injectable()\nexport class HeroesGameSagas {\n  @Saga()\n  dragonKilled = (events$: Observable<any>): Observable<ICommand> => {\n    return events$.pipe(\n      ofType(HeroKilledDragonEvent),\n      map((event) => new DropAncientItemCommand(event.heroId, fakeItemID)),\n    );\n  }\n}\n"),e.k0s()(),e.j41(389,"pre")(390,"code",22),e.EFF(391,"\n@Injectable()\nexport class HeroesGameSagas {\n  @Saga()\n  dragonKilled = (events$) => {\n    return events$.pipe(\n      ofType(HeroKilledDragonEvent),\n      map((event) => new DropAncientItemCommand(event.heroId, fakeItemID)),\n    );\n  }\n}\n"),e.k0s()()(),e.j41(392,"blockquote",25)(393,"strong"),e.EFF(394,"Astuce"),e.k0s(),e.EFF(395," L'op\xe9rateur "),e.j41(396,"code"),e.EFF(397,"ofType"),e.k0s(),e.EFF(398," et le d\xe9corateur "),e.j41(399,"code"),e.EFF(400,"@Saga()"),e.k0s(),e.EFF(401," sont export\xe9s depuis le package "),e.j41(402,"code"),e.EFF(403,"@nestjs/cqrs"),e.k0s(),e.EFF(404,".\n"),e.k0s(),e.j41(405,"p"),e.EFF(406,"Le d\xe9corateur "),e.j41(407,"code"),e.EFF(408,"@Saga()"),e.k0s(),e.EFF(409," marque la m\xe9thode comme une saga. L'argument "),e.j41(410,"code"),e.EFF(411,"events$"),e.k0s(),e.EFF(412," est un flux Observable de tous les \xe9v\xe9nements. L'op\xe9rateur "),e.j41(413,"code"),e.EFF(414,"ofType"),e.k0s(),e.EFF(415," filtre le flux par le type d'\xe9v\xe9nement sp\xe9cifi\xe9. L'op\xe9rateur "),e.j41(416,"code"),e.EFF(417,"map"),e.k0s(),e.EFF(418," fait correspondre l'\xe9v\xe9nement \xe0 une nouvelle instance de commande."),e.k0s(),e.j41(419,"p"),e.EFF(420,"Dans cet exemple, nous faisons correspondre l'\xe9v\xe9nement "),e.j41(421,"code"),e.EFF(422,"HeroKilledDragonEvent"),e.k0s(),e.EFF(423," \xe0 la commande "),e.j41(424,"code"),e.EFF(425,"DropAncientItemCommand"),e.k0s(),e.EFF(426,". La commande "),e.j41(427,"code"),e.EFF(428,"DropAncientItemCommand"),e.k0s(),e.EFF(429," est alors distribu\xe9e automatiquement par le "),e.j41(430,"code"),e.EFF(431,"CommandBus"),e.k0s(),e.EFF(432,"."),e.k0s(),e.j41(433,"h4",32)(434,"span"),e.EFF(435,"Mise en place"),e.k0s()(),e.j41(436,"p"),e.EFF(437,"Pour r\xe9sumer, nous devons enregistrer tous les gestionnaires de commandes, les gestionnaires d'\xe9v\xe9nements et les sagas dans le "),e.j41(438,"code"),e.EFF(439,"HeroesGameModule"),e.k0s(),e.EFF(440," :"),e.k0s(),e.j41(441,"app-copy-button",20)(442,"span",21),e.EFF(443),e.nI1(444,"extension"),e.nrm(445,"app-tabs",null,9),e.k0s(),e.j41(447,"pre")(448,"code",22),e.EFF(449,"\nexport const CommandHandlers = [KillDragonHandler, DropAncientItemHandler];\nexport const EventHandlers =  [HeroKilledDragonHandler, HeroFoundItemHandler];\n\n@Module({\n  imports: [CqrsModule],\n  controllers: [HeroesGameController],\n  providers: [\n    HeroesGameService,\n    HeroesGameSagas,\n    ...CommandHandlers,\n    ...EventHandlers,\n    HeroRepository,\n  ]\n})\nexport class HeroesGameModule {}\n"),e.k0s()()(),e.j41(450,"h4",33)(451,"span"),e.EFF(452,"Exceptions non g\xe9r\xe9es"),e.k0s()(),e.j41(453,"p"),e.EFF(454,"Les gestionnaires d'\xe9v\xe9nements sont ex\xe9cut\xe9s de mani\xe8re asynchrone. Cela signifie qu'ils doivent toujours g\xe9rer toutes les exceptions afin d'\xe9viter que l'application n'entre dans un \xe9tat incoh\xe9rent. Cependant, si une exception n'est pas g\xe9r\xe9e, le "),e.j41(455,"code"),e.EFF(456,"EventBus"),e.k0s(),e.EFF(457," va cr\xe9er l'objet "),e.j41(458,"code"),e.EFF(459,"UnhandledExceptionInfo"),e.k0s(),e.EFF(460," et le pousser dans le flux "),e.j41(461,"code"),e.EFF(462,"UnhandledExceptionBus"),e.k0s(),e.EFF(463,". Ce flux est un "),e.j41(464,"code"),e.EFF(465,"Observable"),e.k0s(),e.EFF(466," qui peut \xeatre utilis\xe9 pour traiter les exceptions non g\xe9r\xe9es."),e.k0s(),e.j41(467,"app-copy-button")(468,"pre")(469,"code",22),e.EFF(470,"\nprivate destroy$ = new Subject<void>();\n\nconstructor(private unhandledExceptionsBus: UnhandledExceptionBus) {\n  this.unhandledExceptionsBus\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((exceptionInfo) => {\n      // Traiter l'exception ici\n      // par exemple, l'envoyer \xe0 un service externe, mettre fin au processus ou publier un nouvel \xe9v\xe9nement.\n    });\n}\n\nonModuleDestroy() {\n  this.destroy$.next();\n  this.destroy$.complete();\n}\n"),e.k0s()()(),e.j41(471,"p"),e.EFF(472,"Pour filtrer les exceptions, nous pouvons utiliser l'op\xe9rateur "),e.j41(473,"code"),e.EFF(474,"ofType"),e.k0s(),e.EFF(475,", comme suit :"),e.k0s(),e.j41(476,"app-copy-button")(477,"pre")(478,"code",22),e.EFF(479,"\nthis.unhandledExceptionsBus.pipe(takeUntil(this.destroy$), UnhandledExceptionBus.ofType(TransactionNotAllowedException)).subscribe((exceptionInfo) => {\n  // Traiter l'exception ici\n});\n"),e.k0s()()(),e.j41(480,"p"),e.EFF(481,"Where "),e.j41(482,"code"),e.EFF(483,"TransactionNotAllowedException"),e.k0s(),e.EFF(484," is the exception we want to filter out."),e.k0s(),e.j41(485,"p"),e.EFF(486,"The "),e.j41(487,"code"),e.EFF(488,"UnhandledExceptionInfo"),e.k0s(),e.EFF(489," object contains the following properties:"),e.k0s(),e.j41(490,"app-copy-button")(491,"pre")(492,"code",22),e.EFF(493,"\nexport interface UnhandledExceptionInfo<Cause = IEvent | ICommand, Exception = any> {\n  /**\n   * L'exception qui a \xe9t\xe9 lev\xe9e.\n   */\n  exception: Exception;\n  /**\n   * La cause de l'exception (\xe9v\xe9nement ou r\xe9f\xe9rence de commande).\n   */\n  cause: Cause;\n}\n"),e.k0s()()(),e.j41(494,"h4",34)(495,"span"),e.EFF(496,"S'abonner \xe0 tous les \xe9v\xe9nements"),e.k0s()(),e.j41(497,"p")(498,"code"),e.EFF(499,"CommandBus"),e.k0s(),e.EFF(500,", "),e.j41(501,"code"),e.EFF(502,"QueryBus"),e.k0s(),e.EFF(503," et "),e.j41(504,"code"),e.EFF(505,"EventBus"),e.k0s(),e.EFF(506," sont tous des "),e.j41(507,"strong"),e.EFF(508,"Observables"),e.k0s(),e.EFF(509,". Cela signifie que nous pouvons nous abonner \xe0 l'ensemble du flux et, par exemple, traiter tous les \xe9v\xe9nements. Par exemple, nous pouvons enregistrer tous les \xe9v\xe9nements dans la console, ou les sauvegarder dans le magasin d'\xe9v\xe9nements."),e.k0s(),e.j41(510,"app-copy-button")(511,"pre")(512,"code",22),e.EFF(513,"\nprivate destroy$ = new Subject<void>();\n\nconstructor(private eventBus: EventBus) {\n  this.eventBus\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((event) => {\n      // Enregistrer les \xe9v\xe9nements dans la base de donn\xe9es\n    });\n}\n\nonModuleDestroy() {\n  this.destroy$.next();\n  this.destroy$.complete();\n}\n"),e.k0s()()(),e.j41(514,"h4",35)(515,"span"),e.EFF(516,"Exemple"),e.k0s()(),e.j41(517,"p"),e.EFF(518,"Un exemple concret est disponible "),e.j41(519,"a",36),e.EFF(520,"ici"),e.k0s(),e.EFF(521,"."),e.k0s()()),2&t){const r=e.sdS(69),u=e.sdS(92),i=e.sdS(120),c=e.sdS(190),a=e.sdS(216),F=e.sdS(239),E=e.sdS(309),j=e.sdS(385),h=e.sdS(446);e.R7$(66),e.SpI(" ",e.i5U(67,37,"heroes-game.service",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(16),e.SpI(" ",e.i5U(90,40,"kill-dragon.command",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(21),e.SpI(" ",e.i5U(118,43,"kill-dragon.handler",i.isJsActive),"\n"),e.R7$(4),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(63),e.SpI(" ",e.i5U(188,46,"hero-killed-dragon.event",c.isJsActive),"\n"),e.R7$(4),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(19),e.SpI(" ",e.i5U(214,49,"hero.model",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(16),e.SpI(" ",e.i5U(237,52,"kill-dragon.handler",F.isJsActive),"\n"),e.R7$(4),e.AVh("hide",F.isJsActive),e.R7$(3),e.AVh("hide",!F.isJsActive),e.R7$(63),e.SpI(" ",e.i5U(307,55,"hero-killed-dragon.handler",E.isJsActive),"\n"),e.R7$(76),e.SpI(" ",e.i5U(383,58,"heroes-game.saga",j.isJsActive),"\n"),e.R7$(4),e.AVh("hide",j.isJsActive),e.R7$(3),e.AVh("hide",!j.isJsActive),e.R7$(54),e.SpI(" ",e.i5U(444,61,"heroes-game.module",h.isJsActive),"\n")}},dependencies:[v.O,l.a,d.z,k.Wk,f.M],encapsulation:2,changeDetection:0})}return s})(),R=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-crud-generator"]],features:[e.Vt3],decls:131,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/crud-generator.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","g\xe9n\xe9rateur-crud-typescript-uniquement"],["appAnchor","","id","introduction"],["routerLink","/cli/overview"],[1,"info"],["appAnchor","","id","g\xe9n\xe9rer-une-nouvelle-ressource"],[1,"language-shell"],[1,"language-typescript"],[1,"warning"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"G\xe9n\xe9rateur CRUD (TypeScript uniquement)"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Tout au long de la dur\xe9e de vie d'un projet, lorsque nous d\xe9veloppons de nouvelles fonctionnalit\xe9s, nous avons souvent besoin d'ajouter de nouvelles ressources \xe0 notre application. Ces ressources n\xe9cessitent g\xe9n\xe9ralement des op\xe9rations multiples et r\xe9p\xe9titives que nous devons r\xe9p\xe9ter \xe0 chaque fois que nous d\xe9finissons une nouvelle ressource."),e.k0s(),e.j41(9,"h4",6)(10,"span"),e.EFF(11,"Introduction"),e.k0s()(),e.j41(12,"p"),e.EFF(13,"Imaginons un sc\xe9nario r\xe9el, dans lequel nous devons exposer des points de terminaison CRUD pour deux entit\xe9s, disons "),e.j41(14,"strong"),e.EFF(15,"Utilisateur"),e.k0s(),e.EFF(16," et "),e.j41(17,"strong"),e.EFF(18,"Produit"),e.k0s(),e.EFF(19,".\nEn suivant les meilleures pratiques, pour chaque entit\xe9, nous devrions effectuer plusieurs op\xe9rations, comme suit :"),e.k0s(),e.j41(20,"ul")(21,"li"),e.EFF(22,"G\xe9n\xe9rer un module ("),e.j41(23,"code"),e.EFF(24,"nest g mo"),e.k0s(),e.EFF(25,") pour garder le code organis\xe9 et \xe9tablir des limites claires (regrouper les composants li\xe9s)"),e.k0s(),e.j41(26,"li"),e.EFF(27,"G\xe9n\xe9rer un contr\xf4leur ("),e.j41(28,"code"),e.EFF(29,"nest g co"),e.k0s(),e.EFF(30,") pour d\xe9finir les routes CRUD (ou les requ\xeates/mutations pour les applications GraphQL)"),e.k0s(),e.j41(31,"li"),e.EFF(32,"G\xe9n\xe9rer un service ("),e.j41(33,"code"),e.EFF(34,"nest g s"),e.k0s(),e.EFF(35,") pour impl\xe9menter et isoler la logique m\xe9tier"),e.k0s(),e.j41(36,"li"),e.EFF(37,"G\xe9n\xe9rer une classe/interface d'entit\xe9 pour repr\xe9senter la forme des donn\xe9es de la ressource"),e.k0s(),e.j41(38,"li"),e.EFF(39,"G\xe9n\xe9rer des objets de transfert de donn\xe9es (ou des entr\xe9es pour les applications GraphQL) pour d\xe9finir comment les donn\xe9es seront envoy\xe9es sur le r\xe9seau."),e.k0s()(),e.j41(40,"p"),e.EFF(41,"Cela fait beaucoup d'\xe9tapes !"),e.k0s(),e.j41(42,"p"),e.EFF(43,"Pour acc\xe9l\xe9rer ce processus r\xe9p\xe9titif, la "),e.j41(44,"a",7),e.EFF(45,"CLI Nest"),e.k0s(),e.EFF(46," fournit un g\xe9n\xe9rateur (sch\xe9ma) qui g\xe9n\xe8re automatiquement tout le code de base pour nous aider \xe0 \xe9viter de faire tout cela, et rendre l'exp\xe9rience du d\xe9veloppeur beaucoup plus simple."),e.k0s(),e.j41(47,"blockquote",8)(48,"strong"),e.EFF(49,"Note"),e.k0s(),e.EFF(50," Le sch\xe9ma permet de g\xe9n\xe9rer des contr\xf4leurs "),e.j41(51,"strong"),e.EFF(52,"HTTP"),e.k0s(),e.EFF(53,", des contr\xf4leurs "),e.j41(54,"strong"),e.EFF(55,"Microservice"),e.k0s(),e.EFF(56,", des r\xe9solveurs "),e.j41(57,"strong"),e.EFF(58,"GraphQL"),e.k0s(),e.EFF(59," (\xe0 la fois code first et sch\xe9ma first) et des gateways "),e.j41(60,"strong"),e.EFF(61,"WebSocket"),e.k0s(),e.EFF(62,".\n"),e.k0s(),e.j41(63,"h4",9)(64,"span"),e.EFF(65,"G\xe9n\xe9rer une nouvelle ressource"),e.k0s()(),e.j41(66,"p"),e.EFF(67,"Pour cr\xe9er une nouvelle ressource, il suffit d'ex\xe9cuter la commande suivante dans le r\xe9pertoire racine de votre projet :"),e.k0s(),e.j41(68,"pre")(69,"code",10),e.EFF(70,"\n$ nest g resource\n"),e.k0s()(),e.j41(71,"p"),e.EFF(72,"La commande "),e.j41(73,"code"),e.EFF(74,"nest g resource"),e.k0s(),e.EFF(75," g\xe9n\xe8re non seulement tous les blocs de construction de NestJS (classes de module, de service, de contr\xf4leur) mais aussi une classe d'entit\xe9, des classes DTO ainsi que les fichiers de test ("),e.j41(76,"code"),e.EFF(77,".spec"),e.k0s(),e.EFF(78,")."),e.k0s(),e.j41(79,"p"),e.EFF(80,"Vous pouvez voir ci-dessous le fichier de contr\xf4leur g\xe9n\xe9r\xe9 (pour l'API REST) :"),e.k0s(),e.j41(81,"app-copy-button")(82,"pre")(83,"code",11),e.EFF(84,"\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n"),e.k0s()()(),e.j41(85,"p"),e.EFF(86,"En outre, il cr\xe9e automatiquement des espaces r\xe9serv\xe9s pour tous les points de terminaison CRUD (routes pour les API REST, requ\xeates et mutations pour GraphQL, abonnements aux messages pour les passerelles Microservices et WebSocket) - le tout sans avoir \xe0 lever le petit doigt."),e.k0s(),e.j41(87,"blockquote",12)(88,"strong"),e.EFF(89,"Note"),e.k0s(),e.EFF(90," Les classes de service g\xe9n\xe9r\xe9es ne sont "),e.j41(91,"strong"),e.EFF(92,"pas"),e.k0s(),e.EFF(93," li\xe9es \xe0 un "),e.j41(94,"strong"),e.EFF(95,"ORM (ou \xe0 une source de donn\xe9es)"),e.k0s(),e.EFF(96," sp\xe9cifique. Le g\xe9n\xe9rateur est donc suffisamment g\xe9n\xe9rique pour r\xe9pondre aux besoins de n'importe quel projet. Par d\xe9faut, toutes les m\xe9thodes contiennent des espaces r\xe9serv\xe9s, ce qui vous permet de les remplir avec les sources de donn\xe9es sp\xe9cifiques \xe0 votre projet.\n"),e.k0s(),e.j41(97,"p"),e.EFF(98,"De m\xeame, si vous souhaitez g\xe9n\xe9rer des r\xe9solveurs pour une application GraphQL, s\xe9lectionnez simplement "),e.j41(99,"code"),e.EFF(100,"GraphQL (code first)"),e.k0s(),e.EFF(101," (ou "),e.j41(102,"code"),e.EFF(103,"GraphQL (schema first)"),e.k0s(),e.EFF(104,") comme couche de transport."),e.k0s(),e.j41(105,"p"),e.EFF(106,"Dans ce cas, NestJS g\xe9n\xe9rera une classe de r\xe9solveur au lieu d'un contr\xf4leur d'API REST :"),e.k0s(),e.j41(107,"pre")(108,"code",10),e.EFF(109,"\n$ nest g resource users\n\n> ? What transport layer do you use? GraphQL (code first)\n> ? Would you like to generate CRUD entry points? Yes\n> CREATE src/users/users.module.ts (224 bytes)\n> CREATE src/users/users.resolver.spec.ts (525 bytes)\n> CREATE src/users/users.resolver.ts (1109 bytes)\n> CREATE src/users/users.service.spec.ts (453 bytes)\n> CREATE src/users/users.service.ts (625 bytes)\n> CREATE src/users/dto/create-user.input.ts (195 bytes)\n> CREATE src/users/dto/update-user.input.ts (281 bytes)\n> CREATE src/users/entities/user.entity.ts (187 bytes)\n> UPDATE src/app.module.ts (312 bytes)\n"),e.k0s()(),e.j41(110,"blockquote",8)(111,"strong"),e.EFF(112,"Astuce"),e.k0s(),e.EFF(113," Pour \xe9viter de g\xe9n\xe9rer des fichiers de test, vous pouvez passer l'option "),e.j41(114,"code"),e.EFF(115,"--no-spec"),e.k0s(),e.EFF(116,", comme suit : "),e.j41(117,"code"),e.EFF(118,"nest g resource users --no-spec"),e.k0s()(),e.j41(119,"p"),e.EFF(120,"Nous pouvons voir ci-dessous que non seulement toutes les mutations et les requ\xeates ont \xe9t\xe9 cr\xe9\xe9es, mais que tout est li\xe9. Nous utilisons le "),e.j41(121,"code"),e.EFF(122,"UsersService"),e.k0s(),e.EFF(123,", l'entit\xe9 "),e.j41(124,"code"),e.EFF(125,"User"),e.k0s(),e.EFF(126," et nos DTO."),e.k0s(),e.j41(127,"app-copy-button")(128,"pre")(129,"code",11),e.EFF(130,"\nimport { Resolver, Query, Mutation, Args, Int } from '@nestjs/graphql';\nimport { UsersService } from './users.service';\nimport { User } from './entities/user.entity';\nimport { CreateUserInput } from './dto/create-user.input';\nimport { UpdateUserInput } from './dto/update-user.input';\n\n@Resolver(() => User)\nexport class UsersResolver {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Mutation(() => User)\n  createUser(@Args('createUserInput') createUserInput: CreateUserInput) {\n    return this.usersService.create(createUserInput);\n  }\n\n  @Query(() => [User], { name: 'users' })\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Query(() => User, { name: 'user' })\n  findOne(@Args('id', { type: () => Int }) id: number) {\n    return this.usersService.findOne(id);\n  }\n\n  @Mutation(() => User)\n  updateUser(@Args('updateUserInput') updateUserInput: UpdateUserInput) {\n    return this.usersService.update(updateUserInput.id, updateUserInput);\n  }\n\n  @Mutation(() => User)\n  removeUser(@Args('id', { type: () => Int }) id: number) {\n    return this.usersService.remove(id);\n  }\n}\n"),e.k0s()()()())},dependencies:[l.a,d.z,k.Wk],encapsulation:2,changeDetection:0})}return s})(),M=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-documentation"]],features:[e.Vt3],decls:53,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/documentation.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","documentation"],["appAnchor","","id","mise-en-place"],[1,"language-bash"],["appAnchor","","id","g\xe9n\xe9ration"],["rel","nofollow","target","_blank","href","https://compodoc.app/guides/usage.html"],["rel","nofollow","target","_blank","href","http://localhost:8080"],["src","/assets/documentation-compodoc-1.jpg"],["src","/assets/documentation-compodoc-2.jpg"],["appAnchor","","id","contribuer"],["rel","nofollow","target","_blank","href","https://github.com/compodoc/compodoc"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Documentation"),e.k0s(),e.j41(7,"p")(8,"strong"),e.EFF(9,"Compodoc"),e.k0s(),e.EFF(10," est un outil de documentation pour les applications Angular. Comme Nest et Angular partagent des structures de projet et de code similaires, "),e.j41(11,"strong"),e.EFF(12,"Compodoc"),e.k0s(),e.EFF(13," fonctionne \xe9galement avec les applications Nest."),e.k0s(),e.j41(14,"h4",6)(15,"span"),e.EFF(16,"Mise en place"),e.k0s()(),e.j41(17,"p"),e.EFF(18,"L'installation de Compodoc dans un projet Nest existant est tr\xe8s simple. Commencez par ajouter la d\xe9pendance dev avec la commande suivante dans le terminal de votre syst\xe8me d'exploitation :"),e.k0s(),e.j41(19,"pre")(20,"code",7),e.EFF(21,"\n$ npm i -D @compodoc/compodoc\n"),e.k0s()(),e.j41(22,"h4",8)(23,"span"),e.EFF(24,"G\xe9n\xe9ration"),e.k0s()(),e.j41(25,"p"),e.EFF(26,"G\xe9n\xe9rer la documentation du projet en utilisant la commande suivante (npm 6 est n\xe9cessaire pour le support "),e.j41(27,"code"),e.EFF(28,"npx"),e.k0s(),e.EFF(29,"). Voir "),e.j41(30,"a",9),e.EFF(31,"la documentation officielle"),e.k0s(),e.EFF(32," pour plus d'options."),e.k0s(),e.j41(33,"pre")(34,"code",7),e.EFF(35,"\n$ npx @compodoc/compodoc -p tsconfig.json -s\n"),e.k0s()(),e.j41(36,"p"),e.EFF(37,"Ouvrez votre navigateur et acc\xe9dez \xe0 "),e.j41(38,"a",10),e.EFF(39,"http://localhost:8080"),e.k0s(),e.EFF(40,". Vous devriez voir un premier projet Nest CLI :"),e.k0s(),e.j41(41,"figure"),e.nrm(42,"img",11),e.k0s(),e.j41(43,"figure"),e.nrm(44,"img",12),e.k0s(),e.j41(45,"h4",13)(46,"span"),e.EFF(47,"Contribuer"),e.k0s()(),e.j41(48,"p"),e.EFF(49,"Vous pouvez participer et contribuer au projet Compodoc "),e.j41(50,"a",14),e.EFF(51,"ici"),e.k0s(),e.EFF(52,"."),e.k0s()())},dependencies:[l.a],encapsulation:2,changeDetection:0})}return s})(),T=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-hot-reload"]],features:[e.Vt3],decls:250,vars:4,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/hot-reload.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","rechargement-\xe0-chaud"],["rel","nofollow","target","_blank","href","https://github.com/webpack/webpack"],[1,"warning"],["id","avec-la-cli"],["rel","nofollow","target","_blank","href","https://docs.nestjs.com/cli/overview"],["appAnchor","","id","installation"],[1,"language-bash"],[1,"info"],["appAnchor","","id","configuration"],[1,"language-typescript"],["appAnchor","","id","hot-module-replacement-remplacement-des-modules-\xe0-chaud"],[1,"language-json"],["id","sans-la-cli"],["appAnchor","","id","installation-1"],["appAnchor","","id","configuration-1"],["appAnchor","","id","hot-module-replacement-remplacement-des-modules-\xe0-chaud-1"],["appAnchor","","id","exemple"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/tree/master/sample/08-webpack"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Rechargement \xe0 chaud"),e.k0s(),e.j41(7,"p"),e.EFF(8,"L'impact le plus important sur le processus de d\xe9marrage de votre application est la "),e.j41(9,"strong"),e.EFF(10,"compilation de TypeScript"),e.k0s(),e.EFF(11,". Heureusement, avec "),e.j41(12,"a",6),e.EFF(13,"webpack"),e.k0s(),e.EFF(14," HMR (Hot-Module Replacement), nous n'avons pas besoin de recompiler l'ensemble du projet \xe0 chaque fois qu'un changement se produit. Cela r\xe9duit consid\xe9rablement le temps n\xe9cessaire \xe0 l'instanciation de votre application, et rend le d\xe9veloppement it\xe9ratif beaucoup plus facile."),e.k0s(),e.j41(15,"blockquote",7)(16,"strong"),e.EFF(17,"Attention"),e.k0s(),e.EFF(18," Notez que "),e.j41(19,"code"),e.EFF(20,"webpack"),e.k0s(),e.EFF(21," ne copiera pas automatiquement vos actifs (par exemple les fichiers "),e.j41(22,"code"),e.EFF(23,"graphql"),e.k0s(),e.EFF(24,") dans le dossier "),e.j41(25,"code"),e.EFF(26,"dist"),e.k0s(),e.EFF(27,". De m\xeame, "),e.j41(28,"code"),e.EFF(29,"webpack"),e.k0s(),e.EFF(30," n'est pas compatible avec les chemins statiques globaux (par exemple, la propri\xe9t\xe9 "),e.j41(31,"code"),e.EFF(32,"entities"),e.k0s(),e.EFF(33," dans "),e.j41(34,"code"),e.EFF(35,"TypeOrmModule"),e.k0s(),e.EFF(36,").\n"),e.k0s(),e.j41(37,"h3",8),e.EFF(38,"Avec la CLI"),e.k0s(),e.j41(39,"p"),e.EFF(40,"Si vous utilisez la "),e.j41(41,"a",9),e.EFF(42,"CLI Nest"),e.k0s(),e.EFF(43,", le processus de configuration est assez simple. La CLI int\xe8gre "),e.j41(44,"code"),e.EFF(45,"webpack"),e.k0s(),e.EFF(46,", qui permet d'utiliser le plugin "),e.j41(47,"code"),e.EFF(48,"HotModuleReplacementPlugin"),e.k0s(),e.EFF(49,"."),e.k0s(),e.j41(50,"h4",10)(51,"span"),e.EFF(52,"Installation"),e.k0s()(),e.j41(53,"p"),e.EFF(54,"Installez d'abord les packages n\xe9cessaires :"),e.k0s(),e.j41(55,"pre")(56,"code",11),e.EFF(57,"\n$ npm i --save-dev webpack-node-externals run-script-webpack-plugin webpack\n"),e.k0s()(),e.j41(58,"blockquote",12)(59,"strong"),e.EFF(60,"Astuce"),e.k0s(),e.EFF(61," Si vous utilisez "),e.j41(62,"strong"),e.EFF(63,"Yarn Berry"),e.k0s(),e.EFF(64," (pas Yarn classique), installez le package "),e.j41(65,"code"),e.EFF(66,"webpack-pnp-externals"),e.k0s(),e.EFF(67," au lieu du package "),e.j41(68,"code"),e.EFF(69,"webpack-node-externals"),e.k0s(),e.EFF(70,".\n"),e.k0s(),e.j41(71,"h4",13)(72,"span"),e.EFF(73,"Configuration"),e.k0s()(),e.j41(74,"p"),e.EFF(75,"Une fois l'installation termin\xe9e, cr\xe9ez un fichier "),e.j41(76,"code"),e.EFF(77,"webpack-hmr.config.js"),e.k0s(),e.EFF(78," dans le r\xe9pertoire racine de votre application."),e.k0s(),e.j41(79,"app-copy-button")(80,"pre")(81,"code",14),e.EFF(82,"\nconst nodeExternals = require('webpack-node-externals');\nconst { RunScriptWebpackPlugin } = require('run-script-webpack-plugin');\n\nmodule.exports = function (options, webpack) {\n  return {\n    ...options,\n    entry: ['webpack/hot/poll?100', options.entry],\n    externals: [\n      nodeExternals({\n        allowlist: ['webpack/hot/poll?100'],\n      }),\n    ],\n    plugins: [\n      ...options.plugins,\n      new webpack.HotModuleReplacementPlugin(),\n      new webpack.WatchIgnorePlugin({\n        paths: [/\\.js$/, /\\.d\\.ts$/],\n      }),\n      new RunScriptWebpackPlugin({ name: options.output.filename, autoRestart: false }),\n    ],\n  };\n};\n"),e.k0s()()(),e.j41(83,"blockquote",12)(84,"strong"),e.EFF(85,"Astuce"),e.k0s(),e.EFF(86," Avec "),e.j41(87,"strong"),e.EFF(88,"Yarn Berry"),e.k0s(),e.EFF(89," (pas Yarn classique), au lieu d'utiliser les "),e.j41(90,"code"),e.EFF(91,"nodeExternals"),e.k0s(),e.EFF(92," dans la propri\xe9t\xe9 de configuration "),e.j41(93,"code"),e.EFF(94,"externals"),e.k0s(),e.EFF(95,", utilisez les "),e.j41(96,"code"),e.EFF(97,"WebpackPnpExternals"),e.k0s(),e.EFF(98," du package "),e.j41(99,"code"),e.EFF(100,"webpack-pnp-externals"),e.k0s(),e.EFF(101," : "),e.j41(102,"code"),e.EFF(103),e.k0s(),e.EFF(104,".\n"),e.k0s(),e.j41(105,"p"),e.EFF(106,"Cette fonction prend l'objet original contenant la configuration webpack par d\xe9faut comme premier argument, et la r\xe9f\xe9rence au package "),e.j41(107,"code"),e.EFF(108,"webpack"),e.k0s(),e.EFF(109," sous-jacent utilis\xe9 par la CLI Nest comme second argument. De plus, elle retourne une configuration webpack modifi\xe9e avec les plugins "),e.j41(110,"code"),e.EFF(111,"HotModuleReplacementPlugin"),e.k0s(),e.EFF(112,", "),e.j41(113,"code"),e.EFF(114,"WatchIgnorePlugin"),e.k0s(),e.EFF(115,", et "),e.j41(116,"code"),e.EFF(117,"RunScriptWebpackPlugin"),e.k0s(),e.EFF(118,"."),e.k0s(),e.j41(119,"h4",15)(120,"span"),e.EFF(121,"Hot-Module Replacement (Remplacement des modules \xe0 chaud)"),e.k0s()(),e.j41(122,"p"),e.EFF(123,"Pour activer le "),e.j41(124,"strong"),e.EFF(125,"HMR"),e.k0s(),e.EFF(126,", ouvrez le fichier d'entr\xe9e de l'application ("),e.j41(127,"code"),e.EFF(128,"main.ts"),e.k0s(),e.EFF(129,") et ajoutez les instructions suivantes relatives au webpack :"),e.k0s(),e.j41(130,"app-copy-button")(131,"pre")(132,"code",14),e.EFF(133,"\ndeclare const module: any;\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(process.env.PORT ?? 3000);\n\n  if (module.hot) {\n    module.hot.accept();\n    module.hot.dispose(() => app.close());\n  }\n}\nbootstrap();\n"),e.k0s()()(),e.j41(134,"p"),e.EFF(135,"Pour simplifier le processus d'ex\xe9cution, ajoutez un script \xe0 votre fichier "),e.j41(136,"code"),e.EFF(137,"package.json"),e.k0s(),e.EFF(138,"."),e.k0s(),e.j41(139,"pre")(140,"code",16),e.EFF(141,'\n"start:dev": "nest build --webpack --webpackPath webpack-hmr.config.js --watch"\n'),e.k0s()(),e.j41(142,"p"),e.EFF(143,"Ouvrez maintenant votre ligne de commande et ex\xe9cutez la commande suivante :"),e.k0s(),e.j41(144,"pre")(145,"code",11),e.EFF(146,"\n$ npm run start:dev\n"),e.k0s()(),e.j41(147,"h3",17),e.EFF(148,"Sans la CLI"),e.k0s(),e.j41(149,"p"),e.EFF(150,"Si vous n'utilisez pas la "),e.j41(151,"a",9),e.EFF(152,"CLI Nest"),e.k0s(),e.EFF(153,", la configuration sera l\xe9g\xe8rement plus complexe (elle n\xe9cessitera plus d'\xe9tapes manuelles)."),e.k0s(),e.j41(154,"h4",18)(155,"span"),e.EFF(156,"Installation"),e.k0s()(),e.j41(157,"p"),e.EFF(158,"Installez d'abord les packages n\xe9cessaires :"),e.k0s(),e.j41(159,"pre")(160,"code",11),e.EFF(161,"\n$ npm i --save-dev webpack webpack-cli webpack-node-externals ts-loader run-script-webpack-plugin\n"),e.k0s()(),e.j41(162,"blockquote",12)(163,"strong"),e.EFF(164,"Astuce"),e.k0s(),e.EFF(165," Si vous utilisez "),e.j41(166,"strong"),e.EFF(167,"Yarn Berry"),e.k0s(),e.EFF(168," (pas Yarn classique), installez le package "),e.j41(169,"code"),e.EFF(170,"webpack-pnp-externals"),e.k0s(),e.EFF(171," au lieu du package "),e.j41(172,"code"),e.EFF(173,"webpack-node-externals"),e.k0s(),e.EFF(174,".\n"),e.k0s(),e.j41(175,"h4",19)(176,"span"),e.EFF(177,"Configuration"),e.k0s()(),e.j41(178,"p"),e.EFF(179,"Une fois l'installation termin\xe9e, cr\xe9ez un fichier "),e.j41(180,"code"),e.EFF(181,"webpack.config.js"),e.k0s(),e.EFF(182," dans le r\xe9pertoire racine de votre application."),e.k0s(),e.j41(183,"app-copy-button")(184,"pre")(185,"code",14),e.EFF(186,"\nconst webpack = require('webpack');\nconst path = require('path');\nconst nodeExternals = require('webpack-node-externals');\nconst { RunScriptWebpackPlugin } = require('run-script-webpack-plugin');\n\nmodule.exports = {\n  entry: ['webpack/hot/poll?100', './src/main.ts'],\n  target: 'node',\n  externals: [\n    nodeExternals({\n      allowlist: ['webpack/hot/poll?100'],\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /.tsx?$/,\n        use: 'ts-loader',\n        exclude: /node_modules/,\n      },\n    ],\n  },\n  mode: 'development',\n  resolve: {\n    extensions: ['.tsx', '.ts', '.js'],\n  },\n  plugins: [new webpack.HotModuleReplacementPlugin(), new RunScriptWebpackPlugin({ name: 'server.js', autoRestart: false })],\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'server.js',\n  },\n};\n"),e.k0s()()(),e.j41(187,"blockquote",12)(188,"strong"),e.EFF(189,"Astuce"),e.k0s(),e.EFF(190," Avec "),e.j41(191,"strong"),e.EFF(192,"Yarn Berry"),e.k0s(),e.EFF(193," (pas Yarn classique), au lieu d'utiliser les "),e.j41(194,"code"),e.EFF(195,"nodeExternals"),e.k0s(),e.EFF(196," dans la propri\xe9t\xe9 de configuration "),e.j41(197,"code"),e.EFF(198,"externals"),e.k0s(),e.EFF(199,", utilisez les "),e.j41(200,"code"),e.EFF(201,"WebpackPnpExternals"),e.k0s(),e.EFF(202," du package "),e.j41(203,"code"),e.EFF(204,"webpack-pnp-externals"),e.k0s(),e.EFF(205," : "),e.j41(206,"code"),e.EFF(207),e.k0s(),e.EFF(208,".\n"),e.k0s(),e.j41(209,"p"),e.EFF(210,"Cette configuration indique \xe0 webpack quelques informations essentielles sur votre application : l'emplacement du fichier d'entr\xe9e, le r\xe9pertoire \xe0 utiliser pour contenir les fichiers "),e.j41(211,"strong"),e.EFF(212,"compil\xe9s"),e.k0s(),e.EFF(213," et le type de chargeur \xe0 utiliser pour compiler les fichiers sources. En g\xe9n\xe9ral, vous devriez pouvoir utiliser ce fichier tel quel, m\xeame si vous ne comprenez pas toutes les options."),e.k0s(),e.j41(214,"h4",20)(215,"span"),e.EFF(216,"Hot-Module Replacement (Remplacement des modules \xe0 chaud)"),e.k0s()(),e.j41(217,"p"),e.EFF(218,"Pour activer le "),e.j41(219,"strong"),e.EFF(220,"HMR"),e.k0s(),e.EFF(221,", ouvrez le fichier d'entr\xe9e de l'application ("),e.j41(222,"code"),e.EFF(223,"main.ts"),e.k0s(),e.EFF(224,") et ajoutez les instructions suivantes relatives au webpack :"),e.k0s(),e.j41(225,"app-copy-button")(226,"pre")(227,"code",14),e.EFF(228,"\ndeclare const module: any;\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(process.env.PORT ?? 3000);\n\n  if (module.hot) {\n    module.hot.accept();\n    module.hot.dispose(() => app.close());\n  }\n}\nbootstrap();\n"),e.k0s()()(),e.j41(229,"p"),e.EFF(230,"Pour simplifier le processus d'ex\xe9cution, ajoutez un script \xe0 votre fichier "),e.j41(231,"code"),e.EFF(232,"package.json"),e.k0s(),e.EFF(233,"."),e.k0s(),e.j41(234,"pre")(235,"code",16),e.EFF(236,'\n"start:dev": "webpack --config webpack.config.js --watch"\n'),e.k0s()(),e.j41(237,"p"),e.EFF(238,"Ouvrez maintenant votre ligne de commande et ex\xe9cutez la commande suivante :"),e.k0s(),e.j41(239,"pre")(240,"code",11),e.EFF(241,"\n$ npm run start:dev\n"),e.k0s()(),e.j41(242,"h4",21)(243,"span"),e.EFF(244,"Exemple"),e.k0s()(),e.j41(245,"p"),e.EFF(246,"Un exemple concret est disponible "),e.j41(247,"a",22),e.EFF(248,"ici"),e.k0s(),e.EFF(249,"."),e.k0s()()),2&t&&(e.R7$(103),e.Lme("WebpackPnpExternals(","{"," exclude : ['webpack/hot/poll?100'] ","}",")"),e.R7$(104),e.Lme("WebpackPnpExternals(","{"," exclude : ['webpack/hot/poll?100'] ","}",")"))},dependencies:[l.a,d.z],encapsulation:2,changeDetection:0})}return s})(),L=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-mikroorm"]],features:[e.Vt3],decls:325,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/mikroorm.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","mikroorm"],["rel","nofollow","target","_blank","href","https://mikro-orm.io/docs"],[1,"info"],["rel","nofollow","target","_blank","href","https://github.com/mikro-orm/nestjs"],["appAnchor","","id","installation"],[1,"language-bash"],["rel","nofollow","target","_blank","href","https://mikro-orm.io/docs/usage-with-sql/"],[1,"language-typescript"],["rel","nofollow","target","_blank","href","https://mikro-orm.io/docs/configuration"],["rel","nofollow","target","_blank","href","https://mikro-orm.io/docs/installation#setting-up-the-commandline-tool"],[1,"language-ts"],["appAnchor","","id","repository-pattern"],["rel","nofollow","target","_blank","href","https://mikro-orm.io/docs/repositories"],["appAnchor","","id","utilisation-de-repositories-personnalis\xe9s"],["appAnchor","","id","chargement-automatique-des-entit\xe9s"],["appAnchor","","id","s\xe9rialisation"],[1,"warning"],["routerLink","/techniques/serialization"],["rel","nofollow","target","_blank","href","https://mikro-orm.io/docs/serializing"],["appAnchor","","id","gestionnaires-de-requ\xeates-dans-les-files-dattente"],["rel","nofollow","target","_blank","href","https://mikro-orm.io/docs/identity-map"],["appAnchor","","id","tests"],["appAnchor","","id","exemple"],["rel","nofollow","target","_blank","href","https://github.com/mikro-orm/nestjs-realworld-example-app"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"MikroORM"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Cette recette a pour but d'aider les utilisateurs \xe0 d\xe9marrer avec MikroORM dans Nest. MikroORM est l'ORM TypeScript pour Node.js bas\xe9 sur les patterns Data Mapper, Unit of Work et Identity Map. C'est une excellente alternative \xe0 TypeORM et la migration depuis TypeORM devrait \xeatre assez facile. La documentation compl\xe8te sur MikroORM est disponible "),e.j41(9,"a",6),e.EFF(10,"ici"),e.k0s(),e.EFF(11,"."),e.k0s(),e.j41(12,"blockquote",7)(13,"strong"),e.EFF(14,"Info"),e.k0s(),e.j41(15,"code"),e.EFF(16,"@mikro-orm/nestjs"),e.k0s(),e.EFF(17," est un package tiers et n'est pas g\xe9r\xe9 par l'\xe9quipe NestJS. Veuillez rapporter tout probl\xe8me trouv\xe9 avec la biblioth\xe8que dans le "),e.j41(18,"a",8),e.EFF(19,"d\xe9p\xf4t appropri\xe9"),e.k0s(),e.EFF(20,".\n"),e.k0s(),e.j41(21,"h4",9)(22,"span"),e.EFF(23,"Installation"),e.k0s()(),e.j41(24,"p"),e.EFF(25,"La mani\xe8re la plus simple d'int\xe9grer MikroORM \xe0 Nest est d'utiliser le module "),e.j41(26,"a",8)(27,"code"),e.EFF(28,"@mikro-orm/nestjs"),e.k0s()(),e.EFF(29,".\nIl suffit de l'installer \xe0 c\xf4t\xe9 de Nest, MikroORM et du pilote sous-jacent :"),e.k0s(),e.j41(30,"pre")(31,"code",10),e.EFF(32,"\n$ npm i @mikro-orm/core @mikro-orm/nestjs @mikro-orm/sqlite\n"),e.k0s()(),e.j41(33,"p"),e.EFF(34,"MikroORM supporte \xe9galement "),e.j41(35,"code"),e.EFF(36,"postgres"),e.k0s(),e.EFF(37,", "),e.j41(38,"code"),e.EFF(39,"sqlite"),e.k0s(),e.EFF(40,", et "),e.j41(41,"code"),e.EFF(42,"mongo"),e.k0s(),e.EFF(43,". Voir la "),e.j41(44,"a",11),e.EFF(45,"documentation officielle"),e.k0s(),e.EFF(46," pour tous les pilotes."),e.k0s(),e.j41(47,"p"),e.EFF(48,"Une fois le processus d'installation termin\xe9, nous pouvons importer le "),e.j41(49,"code"),e.EFF(50,"MikroOrmModule"),e.k0s(),e.EFF(51," dans le "),e.j41(52,"code"),e.EFF(53,"AppModule"),e.k0s(),e.EFF(54," racine."),e.k0s(),e.j41(55,"app-copy-button")(56,"pre")(57,"code",12),e.EFF(58,"\nimport { SqliteDriver } from '@mikro-orm/sqlite';\n\n@Module({\n  imports: [\n    MikroOrmModule.forRoot({\n      entities: ['./dist/entities'],\n      entitiesTs: ['./src/entities'],\n      dbName: 'my-db-name.sqlite3',\n      driver: SqliteDriver,\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {\n}\n"),e.k0s()()(),e.j41(59,"p"),e.EFF(60,"La m\xe9thode "),e.j41(61,"code"),e.EFF(62,"forRoot()"),e.k0s(),e.EFF(63," accepte le m\xeame objet de configuration que "),e.j41(64,"code"),e.EFF(65,"init()"),e.k0s(),e.EFF(66," du package MikroORM. Consultez "),e.j41(67,"a",13),e.EFF(68,"cette page"),e.k0s(),e.EFF(69," pour obtenir la documentation compl\xe8te sur la configuration."),e.k0s(),e.j41(70,"p"),e.EFF(71,"Nous pouvons \xe9galement "),e.j41(72,"a",14),e.EFF(73,"configurer la CLI"),e.k0s(),e.EFF(74," en cr\xe9ant un fichier de configuration "),e.j41(75,"code"),e.EFF(76,"mikro-orm.config.ts"),e.k0s(),e.EFF(77," et en appelant la fonction "),e.j41(78,"code"),e.EFF(79,"forRoot()"),e.k0s(),e.EFF(80," sans aucun argument."),e.k0s(),e.j41(81,"app-copy-button")(82,"pre")(83,"code",12),e.EFF(84,"\n@Module({\n  imports: [\n    MikroOrmModule.forRoot(),\n  ],\n  ...\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(85,"p"),e.EFF(86,"Mais cela ne fonctionnera pas si vous utilisez un outil de construction qui utilise la m\xe9thode du tree shaking, pour cela il est pr\xe9f\xe9rable de fournir la configuration de mani\xe8re explicite :"),e.k0s(),e.j41(87,"app-copy-button")(88,"pre")(89,"code",12),e.EFF(90,"\nimport config from './mikro-orm.config'; // votre configuration ORM\n\n@Module({\n  imports: [\n    MikroOrmModule.forRoot(config),\n  ],\n  ...\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(91,"p"),e.EFF(92,"Par la suite, le "),e.j41(93,"code"),e.EFF(94,"EntityManager"),e.k0s(),e.EFF(95," sera disponible pour \xeatre inject\xe9 dans l'ensemble du projet (sans importer aucun module ailleurs)."),e.k0s(),e.j41(96,"app-copy-button")(97,"pre")(98,"code",15),e.EFF(99,"\n// Importez EntityManager depuis votre package de pilote ou `@mikro-orm/knex`\nimport { EntityManager, MikroORM } from '@mikro-orm/sqlite';\n\n@Injectable()\nexport class MyService {\n  constructor(\n    private readonly orm: MikroORM,\n    private readonly em: EntityManager,\n  ) {}\n}\n"),e.k0s()()(),e.j41(100,"blockquote",7)(101,"strong"),e.EFF(102,"Info"),e.k0s(),e.EFF(103," Notez que le "),e.j41(104,"code"),e.EFF(105,"EntityManager"),e.k0s(),e.EFF(106," est import\xe9 depuis le package "),e.j41(107,"code"),e.EFF(108,"@mikro-orm/driver"),e.k0s(),e.EFF(109,", o\xf9 driver est "),e.j41(110,"code"),e.EFF(111,"mysql"),e.k0s(),e.EFF(112,", "),e.j41(113,"code"),e.EFF(114,"sqlite"),e.k0s(),e.EFF(115,", "),e.j41(116,"code"),e.EFF(117,"postgres"),e.k0s(),e.EFF(118," ou tout autre driver que vous utilisez. Dans le cas o\xf9 vous avez "),e.j41(119,"code"),e.EFF(120,"@mikro-orm/knex"),e.k0s(),e.EFF(121," install\xe9 comme d\xe9pendance, vous pouvez aussi importer le "),e.j41(122,"code"),e.EFF(123,"EntityManager"),e.k0s(),e.EFF(124," \xe0 partir de l\xe0.\n"),e.k0s(),e.j41(125,"h4",16)(126,"span"),e.EFF(127,"Repository pattern"),e.k0s()(),e.j41(128,"p"),e.EFF(129,"MikroORM prend en charge le Repository pattern. Pour chaque entit\xe9, nous pouvons cr\xe9er un Repository. Lisez la documentation compl\xe8te sur les Repositories "),e.j41(130,"a",17),e.EFF(131,"ici"),e.k0s(),e.EFF(132,". Pour d\xe9finir quels Repositories doivent \xeatre enregistr\xe9s dans la port\xe9e courante, vous pouvez utiliser la m\xe9thode "),e.j41(133,"code"),e.EFF(134,"forFeature()"),e.k0s(),e.EFF(135,". Par exemple, de cette fa\xe7on :"),e.k0s(),e.j41(136,"blockquote",7)(137,"strong"),e.EFF(138,"Info"),e.k0s(),e.EFF(139," Vous ne devriez "),e.j41(140,"strong"),e.EFF(141,"pas"),e.k0s(),e.EFF(142," enregistrer vos entit\xe9s de base via "),e.j41(143,"code"),e.EFF(144,"forFeature()"),e.k0s(),e.EFF(145,", car il n'y a pas de Repository pour celles-ci. D'un autre c\xf4t\xe9, les entit\xe9s de base doivent faire partie de la liste dans "),e.j41(146,"code"),e.EFF(147,"forRoot()"),e.k0s(),e.EFF(148," (ou dans la configuration de l'ORM en g\xe9n\xe9ral).\n"),e.k0s(),e.j41(149,"app-copy-button")(150,"pre")(151,"code",12),e.EFF(152,"\n// photo.module.ts\n@Module({\n  imports: [MikroOrmModule.forFeature([Photo])],\n  providers: [PhotoService],\n  controllers: [PhotoController],\n})\nexport class PhotoModule {}\n"),e.k0s()()(),e.j41(153,"p"),e.EFF(154,"et l'importer dans la racine "),e.j41(155,"code"),e.EFF(156,"AppModule"),e.k0s(),e.EFF(157," :"),e.k0s(),e.j41(158,"app-copy-button")(159,"pre")(160,"code",12),e.EFF(161,"\n// app.module.ts\n@Module({\n  imports: [MikroOrmModule.forRoot(...), PhotoModule],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(162,"p"),e.EFF(163,"De cette fa\xe7on, nous pouvons injecter le "),e.j41(164,"code"),e.EFF(165,"PhotoRepository"),e.k0s(),e.EFF(166," dans le "),e.j41(167,"code"),e.EFF(168,"PhotoService"),e.k0s(),e.EFF(169," en utilisant le d\xe9corateur "),e.j41(170,"code"),e.EFF(171,"@InjectRepository()"),e.k0s(),e.EFF(172," :"),e.k0s(),e.j41(173,"app-copy-button")(174,"pre")(175,"code",12),e.EFF(176,"\n@Injectable()\nexport class PhotoService {\n  constructor(\n    @InjectRepository(Photo)\n    private readonly photoRepository: EntityRepository<Photo>,\n  ) {}\n}\n"),e.k0s()()(),e.j41(177,"h4",18)(178,"span"),e.EFF(179,"Utilisation de Repositories personnalis\xe9s"),e.k0s()(),e.j41(180,"p"),e.EFF(181,"Lors de l'utilisation de r\xe9f\xe9rentiels personnalis\xe9s, nous n'avons plus besoin du d\xe9corateur "),e.j41(182,"code"),e.EFF(183,"@InjectRepository()"),e.k0s(),e.EFF(184,", car l'ID de Nest est r\xe9solue sur la base des r\xe9f\xe9rences de la classe."),e.k0s(),e.j41(185,"app-copy-button")(186,"pre")(187,"code",15),e.EFF(188,"\n// `**./author.entity.ts**`\n@Entity({ repository: () => AuthorRepository })\nexport class Author {\n  // pour permettre l'inf\xe9rence dans `em.getRepository()`\n  [EntityRepositoryType]?: AuthorRepository;\n}\n\n// `**./author.repository.ts**`\nexport class AuthorRepository extends EntityRepository<Author> {\n  // vos m\xe9thodes personnalis\xe9es...\n}\n"),e.k0s()()(),e.j41(189,"p"),e.EFF(190,"Comme le nom du Repository personnalis\xe9 est le m\xeame que celui que "),e.j41(191,"code"),e.EFF(192,"getRepositoryToken()"),e.k0s(),e.EFF(193," retournerait, nous n'avons plus besoin du d\xe9corateur "),e.j41(194,"code"),e.EFF(195,"@InjectRepository()"),e.k0s(),e.EFF(196,"."),e.k0s(),e.j41(197,"app-copy-button")(198,"pre")(199,"code",15),e.EFF(200,"\n@Injectable()\nexport class MyService {\n  constructor(private readonly repo: AuthorRepository) {}\n}\n"),e.k0s()()(),e.j41(201,"h4",19)(202,"span"),e.EFF(203,"Chargement automatique des entit\xe9s"),e.k0s()(),e.j41(204,"p"),e.EFF(205,"L'ajout manuel d'entit\xe9s au tableau d'entit\xe9s des options de connexion peut s'av\xe9rer fastidieux. En outre, le r\xe9f\xe9rencement d'entit\xe9s \xe0 partir du module racine ne respecte pas les limites du domaine d'application et entra\xeene des fuites de d\xe9tails d'impl\xe9mentation vers d'autres parties de l'application. Pour r\xe9soudre ce probl\xe8me, il est possible d'utiliser des chemins globaux statiques."),e.k0s(),e.j41(206,"p"),e.EFF(207,"Notez cependant que les chemins globaux ne sont pas support\xe9s par webpack, donc si vous construisez votre application dans une monorepo, vous ne pourrez pas les utiliser. Pour r\xe9soudre ce probl\xe8me, une solution alternative est fournie. Pour charger automatiquement les entit\xe9s, mettez la propri\xe9t\xe9 "),e.j41(208,"code"),e.EFF(209,"autoLoadEntities"),e.k0s(),e.EFF(210," de l'objet de configuration (pass\xe9 dans la m\xe9thode "),e.j41(211,"code"),e.EFF(212,"forRoot()"),e.k0s(),e.EFF(213,") \xe0 "),e.j41(214,"code"),e.EFF(215,"true"),e.k0s(),e.EFF(216,", comme montr\xe9 ci-dessous :"),e.k0s(),e.j41(217,"app-copy-button")(218,"pre")(219,"code",15),e.EFF(220,"\n@Module({\n  imports: [\n    MikroOrmModule.forRoot({\n      ...\n      autoLoadEntities: true,\n    }),\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(221,"p"),e.EFF(222,"Si cette option est sp\xe9cifi\xe9e, chaque entit\xe9 enregistr\xe9e via la m\xe9thode "),e.j41(223,"code"),e.EFF(224,"forFeature()"),e.k0s(),e.EFF(225," sera automatiquement ajout\xe9e au tableau des entit\xe9s de l'objet configuration."),e.k0s(),e.j41(226,"blockquote",7)(227,"strong"),e.EFF(228,"Info"),e.k0s(),e.EFF(229," Notez que les entit\xe9s qui ne sont pas enregistr\xe9es via la m\xe9thode "),e.j41(230,"code"),e.EFF(231,"forFeature()"),e.k0s(),e.EFF(232,", mais qui sont seulement r\xe9f\xe9renc\xe9es \xe0 partir de l'entit\xe9 (via une relation), ne seront pas incluses par le biais du param\xe8tre "),e.j41(233,"code"),e.EFF(234,"autoLoadEntities"),e.k0s(),e.EFF(235,".\n"),e.k0s(),e.j41(236,"blockquote",7)(237,"strong"),e.EFF(238,"Info"),e.k0s(),e.EFF(239," L'utilisation de "),e.j41(240,"code"),e.EFF(241,"autoLoadEntities"),e.k0s(),e.EFF(242," n'a pas non plus d'effet sur le CLI de MikroORM - pour cela nous avons toujours besoin de la configuration du CLI avec la liste compl\xe8te des entit\xe9s. D'un autre c\xf4t\xe9, nous pouvons utiliser des globs, car le CLI ne passera pas par webpack.\n"),e.k0s(),e.j41(243,"h4",20)(244,"span"),e.EFF(245,"S\xe9rialisation"),e.k0s()(),e.j41(246,"blockquote",21)(247,"strong"),e.EFF(248,"Note"),e.k0s(),e.EFF(249," MikroORM enveloppe chaque relation d'entit\xe9 dans un objet "),e.j41(250,"code"),e.EFF(251,"Reference<T>"),e.k0s(),e.EFF(252," ou "),e.j41(253,"code"),e.EFF(254,"Collection<T>"),e.k0s(),e.EFF(255,", afin de fournir une meilleure s\xe9curit\xe9 de type. Cela rendra "),e.j41(256,"a",22),e.EFF(257,"le s\xe9rialiseur int\xe9gr\xe9 de Nest"),e.k0s(),e.EFF(258," aveugle \xe0 toutes les relations envelopp\xe9es. En d'autres termes, si vous renvoyez des entit\xe9s MikroORM \xe0 partir de vos gestionnaires HTTP ou WebSocket, toutes leurs relations ne seront PAS s\xe9rialis\xe9es.\n"),e.k0s(),e.j41(259,"p"),e.EFF(260,"Heureusement, MikroORM fournit une "),e.j41(261,"a",23),e.EFF(262,"API de s\xe9rialisation"),e.k0s(),e.EFF(263," qui peut \xeatre utilis\xe9e \xe0 la place de "),e.j41(264,"code"),e.EFF(265,"ClassSerializerInterceptor"),e.k0s(),e.EFF(266,"."),e.k0s(),e.j41(267,"app-copy-button")(268,"pre")(269,"code",12),e.EFF(270,"\n@Entity()\nexport class Book {\n  @Property({ hidden: true }) // \xc9quivalent du transformateur de classe `@Exclude`\n  hiddenField = Date.now();\n\n  @Property({ persist: false }) // Similaire \xe0 la fonction `@Expose()` du transformateur de classe. N'existera qu'en m\xe9moire et sera s\xe9rialis\xe9.\n  count?: number;\n\n  @ManyToOne({\n    serializer: (value) => value.name,\n    serializedName: 'authorName',\n  }) // \xc9quivalent du transformateur de classe `@Transform()`\n  author: Author;\n}\n"),e.k0s()()(),e.j41(271,"h4",24)(272,"span"),e.EFF(273,"Gestionnaires de requ\xeates dans les files d'attente"),e.k0s()(),e.j41(274,"p"),e.EFF(275,"Comme mentionn\xe9 dans les "),e.j41(276,"a",25),e.EFF(277,"docs"),e.k0s(),e.EFF(278,", nous avons besoin d'un \xe9tat propre pour chaque requ\xeate. Cela est g\xe9r\xe9 automatiquement gr\xe2ce \xe0 l'aide "),e.j41(279,"code"),e.EFF(280,"RequestContext"),e.k0s(),e.EFF(281," enregistr\xe9e par le middleware."),e.k0s(),e.j41(282,"p"),e.EFF(283,"Mais les middlewares ne sont ex\xe9cut\xe9s que pour les requ\xeates HTTP normales, que se passe-t-il si nous avons besoin d'une m\xe9thode \xe0 port\xe9e de requ\xeate en dehors de cela ? Les gestionnaires de file d'attente ou les t\xe2ches planifi\xe9es en sont un exemple."),e.k0s(),e.j41(284,"p"),e.EFF(285,"Nous pouvons utiliser le d\xe9corateur "),e.j41(286,"code"),e.EFF(287,"@CreateRequestContext()"),e.k0s(),e.EFF(288,". Il vous faut d'abord injecter l'instance "),e.j41(289,"code"),e.EFF(290,"MikroORM"),e.k0s(),e.EFF(291," dans le contexte courant, elle sera ensuite utilis\xe9e pour cr\xe9er le contexte pour vous. Sous le capot, le d\xe9corateur va enregistrer un nouveau contexte de requ\xeate pour votre m\xe9thode et l'ex\xe9cuter \xe0 l'int\xe9rieur du contexte."),e.k0s(),e.j41(292,"app-copy-button")(293,"pre")(294,"code",15),e.EFF(295,"\n@Injectable()\nexport class MyService {\n  constructor(private readonly orm: MikroORM) {}\n\n  @CreateRequestContext()\n  async doSomething() {\n    // cette op\xe9ration sera ex\xe9cut\xe9e dans un contexte distinct\n  }\n}\n"),e.k0s()()(),e.j41(296,"blockquote",21)(297,"strong"),e.EFF(298,"Note"),e.k0s(),e.EFF(299," Comme son nom l'indique, ce d\xe9corateur cr\xe9e toujours un nouveau contexte, contrairement \xe0 son alternative "),e.j41(300,"code"),e.EFF(301,"@EnsureRequestContext"),e.k0s(),e.EFF(302," qui ne le cr\xe9e que s'il n'est pas d\xe9j\xe0 \xe0 l'int\xe9rieur d'un autre.\n"),e.k0s(),e.j41(303,"h4",26)(304,"span"),e.EFF(305,"Tests"),e.k0s()(),e.j41(306,"p"),e.EFF(307,"Le package "),e.j41(308,"code"),e.EFF(309,"@mikro-orm/nestjs"),e.k0s(),e.EFF(310," expose la fonction "),e.j41(311,"code"),e.EFF(312,"getRepositoryToken()"),e.k0s(),e.EFF(313," qui renvoie un jeton pr\xe9par\xe9 bas\xe9 sur une entit\xe9 donn\xe9e pour permettre de simuler le d\xe9p\xf4t."),e.k0s(),e.j41(314,"app-copy-button")(315,"pre")(316,"code",12),e.EFF(317,"\n@Module({\n  providers: [\n    PhotoService,\n    {\n      // ou lorsque vous avez un r\xe9pertoire personnalis\xe9 : `provide : PhotoRepository`\n      provide: getRepositoryToken(Photo),\n      useValue: mockedRepository,\n    },\n  ],\n})\nexport class PhotoModule {}\n"),e.k0s()()(),e.j41(318,"h4",27)(319,"span"),e.EFF(320,"Exemple"),e.k0s()(),e.j41(321,"p"),e.EFF(322,"Un exemple concret de NestJS avec MikroORM est disponible "),e.j41(323,"a",28),e.EFF(324,"ici"),e.k0s()()())},dependencies:[l.a,d.z,k.Wk],encapsulation:2,changeDetection:0})}return s})(),z=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-mongodb"]],features:[e.Vt3],decls:242,vars:36,consts:[["contentReference",""],["app4ba52f0a3ba4b1f1862cf9f52b819d1b1a9373e1",""],["appb37ccdec91dde49cca1e0c4460052935b8429950",""],["app14628375641a1b14f617a5f1643a79dbb92a59ed",""],["app6e4ab61162e1f7e355b5ee8e4d79d22af498a788",""],["appec59e63cdb1710d512f2e9b7e7e05b1a915f28e1",""],["appc149e705ea19d62bca944a30c74f43fbedc674c9",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/mongodb.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","mongodb-mongoose"],[1,""],["routerLink","/techniques/mongodb"],["rel","nofollow","target","_blank","href","https://mongoosejs.com"],["rel","nofollow","target","_blank","href","https://www.mongodb.org/"],["appAnchor","","id","pour-commencer"],[1,"language-typescript"],["routerLink","/fundamentals/async-components"],[1,"with-heading"],[1,"filename"],[1,"info"],["appAnchor","","id","injection-de-mod\xe8le"],["rel","nofollow","target","_blank","href","https://mongoosejs.com/docs/guide.html"],[1,"warning"],["appAnchor","","id","exemple"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/tree/master/sample/14-mongoose-base"]],template:function(t,o){if(1&t&&(e.j41(0,"div",7,0)(2,"div",8)(3,"a",9),e.nrm(4,"i",10),e.k0s()(),e.j41(5,"h3",11),e.EFF(6,"MongoDB (Mongoose)"),e.k0s(),e.j41(7,"blockquote",12)(8,"strong"),e.EFF(9,"Attention"),e.k0s(),e.EFF(10," Dans cet article, vous apprendrez comment cr\xe9er un "),e.j41(11,"code"),e.EFF(12,"DatabaseModule"),e.k0s(),e.EFF(13," bas\xe9 sur le package "),e.j41(14,"strong"),e.EFF(15,"Mongoose"),e.k0s(),e.EFF(16," \xe0 partir de z\xe9ro en utilisant des composants personnalis\xe9s. En cons\xe9quence, cette solution contient beaucoup de surcharge que vous pouvez omettre en utilisant le package d\xe9di\xe9 "),e.j41(17,"code"),e.EFF(18,"@nestjs/mongoose"),e.k0s(),e.EFF(19," pr\xeat \xe0 l'emploi et disponible pr\xeat \xe0 l'emploi. Pour en savoir plus, voir "),e.j41(20,"a",13),e.EFF(21,"ici"),e.k0s(),e.EFF(22,".\n"),e.k0s(),e.j41(23,"p")(24,"a",14),e.EFF(25,"Mongoose"),e.k0s(),e.EFF(26," est l'outil de mod\xe9lisation d'objets "),e.j41(27,"a",15),e.EFF(28,"MongoDB"),e.k0s(),e.EFF(29," le plus populaire."),e.k0s(),e.j41(30,"h4",16)(31,"span"),e.EFF(32,"Pour commencer"),e.k0s()(),e.j41(33,"p"),e.EFF(34,"Pour commencer l'aventure avec cette biblioth\xe8que, nous devons installer toutes les d\xe9pendances n\xe9cessaires :"),e.k0s(),e.j41(35,"app-copy-button")(36,"pre")(37,"code",17),e.EFF(38,"\n$ npm install --save mongoose\n"),e.k0s()()(),e.j41(39,"p"),e.EFF(40,"La premi\xe8re \xe9tape est d'\xe9tablir une connexion avec notre base de donn\xe9es en utilisant la fonction "),e.j41(41,"code"),e.EFF(42,"connect()"),e.k0s(),e.EFF(43,". La fonction "),e.j41(44,"code"),e.EFF(45,"connect()"),e.k0s(),e.EFF(46," retourne une "),e.j41(47,"code"),e.EFF(48,"Promise"),e.k0s(),e.EFF(49,", et donc nous devons cr\xe9er un "),e.j41(50,"a",18),e.EFF(51,"async provider"),e.k0s(),e.EFF(52,"."),e.k0s(),e.j41(53,"app-copy-button",19)(54,"span",20),e.EFF(55),e.nI1(56,"extension"),e.nrm(57,"app-tabs",null,1),e.k0s(),e.j41(59,"pre")(60,"code",17),e.EFF(61,"\nimport * as mongoose from 'mongoose';\n\nexport const databaseProviders = [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: (): Promise<typeof mongoose> =>\n      mongoose.connect('mongodb://localhost/nest'),\n  },\n];\n"),e.k0s()(),e.j41(62,"pre")(63,"code",17),e.EFF(64,"\nimport * as mongoose from 'mongoose';\n\nexport const databaseProviders = [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: () => mongoose.connect('mongodb://localhost/nest'),\n  },\n];\n"),e.k0s()()(),e.j41(65,"blockquote",21)(66,"strong"),e.EFF(67,"Astuce"),e.k0s(),e.EFF(68," En suivant les meilleures pratiques, nous avons d\xe9clar\xe9 le fournisseur personnalis\xe9 dans le fichier s\xe9par\xe9 qui a un suffixe "),e.j41(69,"code"),e.EFF(70,"*.providers.ts"),e.k0s(),e.EFF(71,".\n"),e.k0s(),e.j41(72,"p"),e.EFF(73,"Ensuite, nous devons exporter ces fournisseurs pour les rendre "),e.j41(74,"strong"),e.EFF(75,"accessibles"),e.k0s(),e.EFF(76," pour le reste de l'application."),e.k0s(),e.j41(77,"app-copy-button",19)(78,"span",20),e.EFF(79),e.nI1(80,"extension"),e.nrm(81,"app-tabs",null,2),e.k0s(),e.j41(83,"pre")(84,"code",17),e.EFF(85,"\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n"),e.k0s()()(),e.j41(86,"p"),e.EFF(87,"Maintenant nous pouvons injecter l'objet "),e.j41(88,"code"),e.EFF(89,"Connection"),e.k0s(),e.EFF(90," en utilisant le d\xe9corateur "),e.j41(91,"code"),e.EFF(92,"@Inject()"),e.k0s(),e.EFF(93,". Chaque classe qui d\xe9pendrait du fournisseur asynchrone "),e.j41(94,"code"),e.EFF(95,"Connection"),e.k0s(),e.EFF(96," attendra jusqu'\xe0 ce qu'une "),e.j41(97,"code"),e.EFF(98,"Promise"),e.k0s(),e.EFF(99," soit r\xe9solue."),e.k0s(),e.j41(100,"h4",22)(101,"span"),e.EFF(102,"Injection de mod\xe8le"),e.k0s()(),e.j41(103,"p"),e.EFF(104,"Avec Mongoose, tout est d\xe9riv\xe9 d'un "),e.j41(105,"a",23),e.EFF(106,"Schema"),e.k0s(),e.EFF(107,". D\xe9finissons le "),e.j41(108,"code"),e.EFF(109,"CatSchema"),e.k0s(),e.EFF(110," :"),e.k0s(),e.j41(111,"app-copy-button",19)(112,"span",20),e.EFF(113),e.nI1(114,"extension"),e.nrm(115,"app-tabs",null,3),e.k0s(),e.j41(117,"pre")(118,"code",17),e.EFF(119,"\nimport * as mongoose from 'mongoose';\n\nexport const CatSchema = new mongoose.Schema({\n  name: String,\n  age: Number,\n  breed: String,\n});\n"),e.k0s()()(),e.j41(120,"p"),e.EFF(121,"Le "),e.j41(122,"code"),e.EFF(123,"CatsSchema"),e.k0s(),e.EFF(124," appartient au r\xe9pertoire "),e.j41(125,"code"),e.EFF(126,"cats"),e.k0s(),e.EFF(127,". Ce r\xe9pertoire repr\xe9sente le "),e.j41(128,"code"),e.EFF(129,"CatsModule"),e.k0s(),e.EFF(130,"."),e.k0s(),e.j41(131,"p"),e.EFF(132,"Il est maintenant temps de cr\xe9er un fournisseur "),e.j41(133,"strong"),e.EFF(134,"Model"),e.k0s(),e.EFF(135," :"),e.k0s(),e.j41(136,"app-copy-button",19)(137,"span",20),e.EFF(138),e.nI1(139,"extension"),e.nrm(140,"app-tabs",null,4),e.k0s(),e.j41(142,"pre")(143,"code",17),e.EFF(144,"\nimport { Connection } from 'mongoose';\nimport { CatSchema } from './schemas/cat.schema';\n\nexport const catsProviders = [\n  {\n    provide: 'CAT_MODEL',\n    useFactory: (connection: Connection) => connection.model('Cat', CatSchema),\n    inject: ['DATABASE_CONNECTION'],\n  },\n];\n"),e.k0s()(),e.j41(145,"pre")(146,"code",17),e.EFF(147,"\nimport { CatSchema } from './schemas/cat.schema';\n\nexport const catsProviders = [\n  {\n    provide: 'CAT_MODEL',\n    useFactory: (connection) => connection.model('Cat', CatSchema),\n    inject: ['DATABASE_CONNECTION'],\n  },\n];\n"),e.k0s()()(),e.j41(148,"blockquote",24)(149,"strong"),e.EFF(150,"Attention"),e.k0s(),e.EFF(151," Dans les applications r\xe9elles, vous devriez \xe9viter les "),e.j41(152,"strong"),e.EFF(153,"magic strings"),e.k0s(),e.EFF(154,". Le "),e.j41(155,"code"),e.EFF(156,"CAT_MODEL"),e.k0s(),e.EFF(157," et le "),e.j41(158,"code"),e.EFF(159,"DATABASE_CONNECTION"),e.k0s(),e.EFF(160," doivent \xeatre conserv\xe9s dans le fichier "),e.j41(161,"code"),e.EFF(162,"constants.ts"),e.k0s(),e.EFF(163," s\xe9par\xe9.\n"),e.k0s(),e.j41(164,"p"),e.EFF(165,"Maintenant nous pouvons injecter le "),e.j41(166,"code"),e.EFF(167,"CAT_MODEL"),e.k0s(),e.EFF(168," dans le "),e.j41(169,"code"),e.EFF(170,"CatsService"),e.k0s(),e.EFF(171," en utilisant le d\xe9corateur "),e.j41(172,"code"),e.EFF(173,"@Inject()"),e.k0s(),e.EFF(174," :"),e.k0s(),e.j41(175,"app-copy-button",19)(176,"span",20),e.EFF(177),e.nI1(178,"extension"),e.nrm(179,"app-tabs",null,5),e.k0s(),e.j41(181,"pre")(182,"code",17),e.EFF(183,"\nimport { Model } from 'mongoose';\nimport { Injectable, Inject } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\nimport { CreateCatDto } from './dto/create-cat.dto';\n\n@Injectable()\nexport class CatsService {\n  constructor(\n    @Inject('CAT_MODEL')\n    private catModel: Model<Cat>,\n  ) {}\n\n  async create(createCatDto: CreateCatDto): Promise<Cat> {\n    const createdCat = new this.catModel(createCatDto);\n    return createdCat.save();\n  }\n\n  async findAll(): Promise<Cat[]> {\n    return this.catModel.find().exec();\n  }\n}\n"),e.k0s()(),e.j41(184,"pre")(185,"code",17),e.EFF(186,"\nimport { Injectable, Dependencies } from '@nestjs/common';\n\n@Injectable()\n@Dependencies('CAT_MODEL')\nexport class CatsService {\n  constructor(catModel) {\n    this.catModel = catModel;\n  }\n\n  async create(createCatDto) {\n    const createdCat = new this.catModel(createCatDto);\n    return createdCat.save();\n  }\n\n  async findAll() {\n    return this.catModel.find().exec();\n  }\n}\n"),e.k0s()()(),e.j41(187,"p"),e.EFF(188,"Dans l'exemple ci-dessus, nous avons utilis\xe9 l'interface "),e.j41(189,"code"),e.EFF(190,"Cat"),e.k0s(),e.EFF(191,". Cette interface \xe9tend l'interface "),e.j41(192,"code"),e.EFF(193,"Document"),e.k0s(),e.EFF(194," du package mongoose :"),e.k0s(),e.j41(195,"app-copy-button")(196,"pre")(197,"code",17),e.EFF(198,"\nimport { Document } from 'mongoose';\n\nexport interface Cat extends Document {\n  readonly name: string;\n  readonly age: number;\n  readonly breed: string;\n}\n"),e.k0s()()(),e.j41(199,"p"),e.EFF(200,"La connexion \xe0 la base de donn\xe9es est "),e.j41(201,"strong"),e.EFF(202,"asynchrone"),e.k0s(),e.EFF(203,", mais Nest rend ce processus compl\xe8tement invisible pour l'utilisateur final. La classe "),e.j41(204,"code"),e.EFF(205,"CatModel"),e.k0s(),e.EFF(206," attend la connexion \xe0 la base de donn\xe9es, et le "),e.j41(207,"code"),e.EFF(208,"CatsService"),e.k0s(),e.EFF(209," est retard\xe9 jusqu'\xe0 ce que le mod\xe8le soit pr\xeat \xe0 \xeatre utilis\xe9. L'application enti\xe8re peut d\xe9marrer lorsque chaque classe est instanci\xe9e."),e.k0s(),e.j41(210,"p"),e.EFF(211,"Voici la version finale de "),e.j41(212,"code"),e.EFF(213,"CatsModule"),e.k0s(),e.EFF(214," :"),e.k0s(),e.j41(215,"app-copy-button",19)(216,"span",20),e.EFF(217),e.nI1(218,"extension"),e.nrm(219,"app-tabs",null,6),e.k0s(),e.j41(221,"pre")(222,"code",17),e.EFF(223,"\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { catsProviders } from './cats.providers';\nimport { DatabaseModule } from '../database/database.module';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [CatsController],\n  providers: [\n    CatsService,\n    ...catsProviders,\n  ],\n})\nexport class CatsModule {}\n"),e.k0s()()(),e.j41(224,"blockquote",21)(225,"strong"),e.EFF(226,"Astuce"),e.k0s(),e.EFF(227," N'oubliez pas d'importer le "),e.j41(228,"code"),e.EFF(229,"CatsModule"),e.k0s(),e.EFF(230," dans la racine "),e.j41(231,"code"),e.EFF(232,"AppModule"),e.k0s(),e.EFF(233,".\n"),e.k0s(),e.j41(234,"h4",25)(235,"span"),e.EFF(236,"Exemple"),e.k0s()(),e.j41(237,"p"),e.EFF(238,"Un exemple concret est disponible "),e.j41(239,"a",26),e.EFF(240,"ici"),e.k0s(),e.EFF(241,"."),e.k0s()()),2&t){const r=e.sdS(58),u=e.sdS(82),i=e.sdS(116),c=e.sdS(141),a=e.sdS(180),F=e.sdS(220);e.R7$(55),e.SpI(" ",e.i5U(56,18,"database.providers",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(17),e.SpI(" ",e.i5U(80,21,"database.module",u.isJsActive),"\n"),e.R7$(34),e.SpI(" ",e.i5U(114,24,"schemas/cat.schema",i.isJsActive),"\n"),e.R7$(25),e.SpI(" ",e.i5U(139,27,"cats.providers",c.isJsActive),"\n"),e.R7$(4),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(32),e.SpI(" ",e.i5U(178,30,"cats.service",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(33),e.SpI(" ",e.i5U(218,33,"cats.module",F.isJsActive),"\n")}},dependencies:[v.O,l.a,d.z,k.Wk,f.M],encapsulation:2,changeDetection:0})}return s})(),U=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-prisma"]],features:[e.Vt3],decls:631,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/prisma.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","prisma"],["rel","nofollow","target","_blank","href","https://www.prisma.io"],["rel","nofollow","target","_blank","href","https://github.com/prisma/prisma"],["rel","nofollow","target","_blank","href","https://knexjs.org/"],["rel","nofollow","target","_blank","href","https://typeorm.io/"],["rel","nofollow","target","_blank","href","https://sequelize.org/"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/reference/database-reference/supported-databases"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/concepts/more/comparisons/prisma-and-typeorm#type-safety"],[1,"info"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/getting-started/quickstart"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/understand-prisma/introduction"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/"],["rel","nofollow","target","_blank","href","https://github.com/prisma/prisma-examples/tree/b53fad046a6d55f0090ddce9fd17ec3f9b95cab3/orm/nest"],["rel","nofollow","target","_blank","href","https://github.com/prisma/prisma-examples/tree/b53fad046a6d55f0090ddce9fd17ec3f9b95cab3/orm/nest-graphql"],["rel","nofollow","target","_blank","href","https://github.com/prisma/prisma-examples/"],["appAnchor","","id","pour-commencer"],["rel","nofollow","target","_blank","href","https://sqlite.org/"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project-typescript-postgres"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/guides/migrate-to-prisma/migrate-from-typeorm"],["appAnchor","","id","cr\xe9ez-votre-projet-nestjs"],[1,"language-bash"],["routerLink","/first-steps"],["appAnchor","","id","mise-en-place-de-prisma"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-cli"],["rel","nofollow","target","_blank","href","https://github.com/motdotla/dotenv"],["appAnchor","","id","d\xe9finir-la-connexion-\xe0-la-base-de-donn\xe9es"],[1,"language-groovy"],["routerLink","/techniques/configuration"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/reference/database-reference/connection-urls"],["rel","nofollow","target","_blank","href","https://dev.to/prisma/how-to-setup-a-free-postgresql-database-on-heroku-1dc1"],["appAnchor","","id","cr\xe9er-deux-tables-de-base-de-donn\xe9es-avec-prisma-migrate"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/concepts/components/prisma-migrate"],[1,"language-sql"],["appAnchor","","id","installer-et-g\xe9n\xe9rer-le-prisma-client"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/concepts/components/prisma-client/crud"],["appAnchor","","id","utiliser-prisma-client-dans-vos-services-nestjs"],["rel","nofollow","target","_blank","href","https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/crud"],[1,"language-typescript"],["id","impl\xe9menter-les-routes-de-lapi-rest-dans-le-contr\xf4leur-principal-de-lapplication"],["id","get"],["id","post"],["id","put"],["id","delete"],["appAnchor","","id","r\xe9sum\xe9"],["rel","nofollow","target","_blank","href","https://www.prisma.io/nestjs"],["rel","nofollow","target","_blank","href","https://github.com/notiz-dev/nestjs-prisma-starter#instructions"],["rel","nofollow","target","_blank","href","https://www.youtube.com/watch?v=UlVJ340UEuk&ab_channel=Prisma"],["rel","nofollow","target","_blank","href","https://github.com/marcjulian"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Prisma"),e.k0s(),e.j41(7,"p")(8,"a",6),e.EFF(9,"Prisma"),e.k0s(),e.EFF(10," est un ORM "),e.j41(11,"a",7),e.EFF(12,"open-source"),e.k0s(),e.EFF(13," pour Node.js et TypeScript. Il est utilis\xe9 comme "),e.j41(14,"strong"),e.EFF(15,"alternative"),e.k0s(),e.EFF(16," \xe0 l'\xe9criture de SQL simple, ou \xe0 l'utilisation d'un autre outil d'acc\xe8s \xe0 la base de donn\xe9es comme les constructeurs de requ\xeates SQL (comme "),e.j41(17,"a",8),e.EFF(18,"knex.js"),e.k0s(),e.EFF(19,") ou les ORM (comme "),e.j41(20,"a",9),e.EFF(21,"TypeORM"),e.k0s(),e.EFF(22," et "),e.j41(23,"a",10),e.EFF(24,"Sequelize"),e.k0s(),e.EFF(25,"). Prisma supporte actuellement PostgreSQL, MySQL, SQL Server, SQLite, MongoDB et CockroachDB ("),e.j41(26,"a",11),e.EFF(27,"Voir les bases de donn\xe9es support\xe9es"),e.k0s(),e.EFF(28,")."),e.k0s(),e.j41(29,"p"),e.EFF(30,"Bien que Prisma puisse \xeatre utilis\xe9 avec du JavaScript simple, il embrasse TypeScript et fournit un niveau de s\xe9curit\xe9 de type qui va au-del\xe0 des garanties d'autres ORMs dans l'\xe9cosyst\xe8me TypeScript. Vous pouvez trouver une comparaison approfondie des garanties de s\xe9curit\xe9 de type de Prisma et TypeORM "),e.j41(31,"a",12),e.EFF(32,"ici"),e.k0s(),e.EFF(33,"."),e.k0s(),e.j41(34,"blockquote",13)(35,"strong"),e.EFF(36,"Note"),e.k0s(),e.EFF(37," Si vous voulez avoir un aper\xe7u rapide du fonctionnement de Prisma, vous pouvez suivre le "),e.j41(38,"a",14),e.EFF(39,"Quickstart"),e.k0s(),e.EFF(40," ou lire l'"),e.j41(41,"a",15),e.EFF(42,"Introduction"),e.k0s(),e.EFF(43," dans la "),e.j41(44,"a",16),e.EFF(45,"documentation"),e.k0s(),e.EFF(46,". Il existe \xe9galement des exemples pr\xeats \xe0 l'emploi pour "),e.j41(47,"a",17),e.EFF(48,"REST"),e.k0s(),e.EFF(49," et "),e.j41(50,"a",18),e.EFF(51,"GraphQL"),e.k0s(),e.EFF(52," dans le r\xe9pertoire "),e.j41(53,"a",19)(54,"code"),e.EFF(55,"prisma-examples"),e.k0s()(),e.EFF(56,".\n"),e.k0s(),e.j41(57,"h4",20)(58,"span"),e.EFF(59,"Pour commencer"),e.k0s()(),e.j41(60,"p"),e.EFF(61,"Dans cette recette, vous apprendrez \xe0 d\xe9marrer avec NestJS et Prisma \xe0 partir de z\xe9ro. Vous allez construire un exemple d'application NestJS avec une API REST qui peut lire et \xe9crire des donn\xe9es dans une base de donn\xe9es."),e.k0s(),e.j41(62,"p"),e.EFF(63,"Dans le cadre de ce guide, vous utiliserez une base de donn\xe9es "),e.j41(64,"a",21),e.EFF(65,"SQLite"),e.k0s(),e.EFF(66," pour \xe9viter de devoir configurer un serveur de base de donn\xe9es. Notez que vous pouvez toujours suivre ce guide, m\xeame si vous utilisez PostgreSQL ou MySQL - vous trouverez des instructions suppl\xe9mentaires pour l'utilisation de ces bases de donn\xe9es aux bons endroits."),e.k0s(),e.j41(67,"blockquote",13)(68,"strong"),e.EFF(69,"Note"),e.k0s(),e.EFF(70," Si vous avez d\xe9j\xe0 un projet existant et que vous envisagez de migrer vers Prisma, vous pouvez suivre le guide pour "),e.j41(71,"a",22),e.EFF(72,"ajouter Prisma \xe0 un projet existant"),e.k0s(),e.EFF(73,". Si vous migrez de TypeORM, vous pouvez lire le guide "),e.j41(74,"a",23),e.EFF(75,"Migrating from TypeORM to Prisma"),e.k0s(),e.EFF(76,".\n"),e.k0s(),e.j41(77,"h4",24)(78,"span"),e.EFF(79,"Cr\xe9ez votre projet NestJS"),e.k0s()(),e.j41(80,"p"),e.EFF(81,"Pour commencer, installez la CLI NestJS et cr\xe9ez votre squelette d'application avec les commandes suivantes :"),e.k0s(),e.j41(82,"pre")(83,"code",25),e.EFF(84,"\n$ npm install -g @nestjs/cli\n$ nest new hello-prisma\n"),e.k0s()(),e.j41(85,"p"),e.EFF(86,"Voir la page "),e.j41(87,"a",26),e.EFF(88,"Premiers pas"),e.k0s(),e.EFF(89," pour en savoir plus sur les fichiers de projet cr\xe9\xe9s par cette commande. Notez aussi que vous pouvez maintenant lancer "),e.j41(90,"code"),e.EFF(91,"npm start"),e.k0s(),e.EFF(92," pour d\xe9marrer votre application. L'API REST fonctionnant \xe0 "),e.j41(93,"code"),e.EFF(94,"http://localhost:3000/"),e.k0s(),e.EFF(95," sert actuellement une seule route qui est impl\xe9ment\xe9e dans "),e.j41(96,"code"),e.EFF(97,"src/app.controller.ts"),e.k0s(),e.EFF(98,". Au cours de ce guide, vous allez impl\xe9menter des routes suppl\xe9mentaires pour stocker et r\xe9cup\xe9rer des donn\xe9es sur "),e.j41(99,"em"),e.EFF(100,"users"),e.k0s(),e.EFF(101," et "),e.j41(102,"em"),e.EFF(103,"posts"),e.k0s(),e.EFF(104,"."),e.k0s(),e.j41(105,"h4",27)(106,"span"),e.EFF(107,"Mise en place de Prisma"),e.k0s()(),e.j41(108,"p"),e.EFF(109,"Commencez par installer la CLI Prisma en tant que d\xe9pendance de d\xe9veloppement dans votre projet :"),e.k0s(),e.j41(110,"pre")(111,"code",25),e.EFF(112,"\n$ cd hello-prisma\n$ npm install prisma --save-dev\n"),e.k0s()(),e.j41(113,"p"),e.EFF(114,"Dans les \xe9tapes suivantes, nous utiliserons la "),e.j41(115,"a",28),e.EFF(116,"CLI Prisma"),e.k0s(),e.EFF(117,". Comme meilleure pratique, il est recommand\xe9 d'invoquer la CLI localement en la pr\xe9fixant avec "),e.j41(118,"code"),e.EFF(119,"npx"),e.k0s(),e.EFF(120," :"),e.k0s(),e.j41(121,"pre")(122,"code",25),e.EFF(123,"\n$ npx prisma\n"),e.k0s()(),e.j41(124,"details")(125,"summary"),e.EFF(126,"D\xe9velopper si vous utilisez Yarn"),e.k0s(),e.j41(127,"p"),e.EFF(128,"Si vous utilisez Yarn, vous pouvez installer la CLI Prisma comme suit :"),e.k0s(),e.j41(129,"pre")(130,"code",25),e.EFF(131,"\n$ yarn add prisma --dev\n"),e.k0s()(),e.j41(132,"p"),e.EFF(133,"Une fois install\xe9, vous pouvez l'invoquer en le pr\xe9fixant avec "),e.j41(134,"code"),e.EFF(135,"yarn"),e.k0s(),e.EFF(136," :"),e.k0s(),e.j41(137,"pre")(138,"code",25),e.EFF(139,"\n$ yarn prisma\n"),e.k0s()()(),e.j41(140,"p"),e.EFF(141,"Maintenant, cr\xe9ez votre configuration initiale de Prisma en utilisant la commande "),e.j41(142,"code"),e.EFF(143,"init"),e.k0s(),e.EFF(144," de la CLI de Prisma :"),e.k0s(),e.j41(145,"pre")(146,"code",25),e.EFF(147,"\n$ npx prisma init\n"),e.k0s()(),e.j41(148,"p"),e.EFF(149,"Cette commande cr\xe9e un nouveau r\xe9pertoire "),e.j41(150,"code"),e.EFF(151,"prisma"),e.k0s(),e.EFF(152," avec le contenu suivant :"),e.k0s(),e.j41(153,"ul")(154,"li")(155,"code"),e.EFF(156,"schema.prisma"),e.k0s(),e.EFF(157,": Sp\xe9cifie la connexion \xe0 la base de donn\xe9es et contient le sch\xe9ma de la base de donn\xe9es."),e.k0s(),e.j41(158,"li")(159,"code"),e.EFF(160,".env"),e.k0s(),e.EFF(161,": Un fichier "),e.j41(162,"a",29),e.EFF(163,"dotenv"),e.k0s(),e.EFF(164,", g\xe9n\xe9ralement utilis\xe9 pour stocker les informations d'identification de la base de donn\xe9es dans un groupe de variables d'environnement."),e.k0s()(),e.j41(165,"h4",30)(166,"span"),e.EFF(167,"D\xe9finir la connexion \xe0 la base de donn\xe9es"),e.k0s()(),e.j41(168,"p"),e.EFF(169,"Votre connexion \xe0 la base de donn\xe9es est configur\xe9e dans le bloc "),e.j41(170,"code"),e.EFF(171,"datasource"),e.k0s(),e.EFF(172," de votre fichier "),e.j41(173,"code"),e.EFF(174,"schema.prisma"),e.k0s(),e.EFF(175,". Par d\xe9faut, elle est d\xe9finie \xe0 "),e.j41(176,"code"),e.EFF(177,"postgresql"),e.k0s(),e.EFF(178,", mais puisque vous utilisez une base de donn\xe9es SQLite dans ce guide, vous devez ajuster le champ "),e.j41(179,"code"),e.EFF(180,"provider"),e.k0s(),e.EFF(181," du bloc "),e.j41(182,"code"),e.EFF(183,"datasource"),e.k0s(),e.EFF(184," \xe0 "),e.j41(185,"code"),e.EFF(186,"sqlite"),e.k0s(),e.EFF(187," :"),e.k0s(),e.j41(188,"pre")(189,"code",31),e.EFF(190,'\ndatasource db {\n  provider = "sqlite"\n  url      = env("DATABASE_URL")\n}\n\ngenerator client {\n  provider = "prisma-client-js"\n}\n'),e.k0s()(),e.j41(191,"p"),e.EFF(192,"Maintenant, ouvrez "),e.j41(193,"code"),e.EFF(194,".env"),e.k0s(),e.EFF(195," et ajustez la variable d'environnement "),e.j41(196,"code"),e.EFF(197,"DATABASE_URL"),e.k0s(),e.EFF(198," pour qu'elle ressemble \xe0 ce qui suit :"),e.k0s(),e.j41(199,"pre")(200,"code",25),e.EFF(201,'\nDATABASE_URL="file:./dev.db"\n'),e.k0s()(),e.j41(202,"p"),e.EFF(203,"Assurez-vous d'avoir un "),e.j41(204,"a",32),e.EFF(205,"ConfigModule"),e.k0s(),e.EFF(206," configur\xe9, sinon la variable "),e.j41(207,"code"),e.EFF(208,"DATABASE_URL"),e.k0s(),e.EFF(209," ne sera pas r\xe9cup\xe9r\xe9e dans "),e.j41(210,"code"),e.EFF(211,".env"),e.k0s(),e.EFF(212,"."),e.k0s(),e.j41(213,"p"),e.EFF(214,"Les bases de donn\xe9es SQLite sont de simples fichiers ; aucun serveur n'est n\xe9cessaire pour utiliser une base de donn\xe9es SQLite. Ainsi, au lieu de configurer une URL de connexion avec un "),e.j41(215,"em"),e.EFF(216,"host"),e.k0s(),e.EFF(217," et un "),e.j41(218,"em"),e.EFF(219,"port"),e.k0s(),e.EFF(220,", vous pouvez simplement la faire pointer vers un fichier local qui, dans ce cas, s'appelle "),e.j41(221,"code"),e.EFF(222,"dev.db"),e.k0s(),e.EFF(223,". Ce fichier sera cr\xe9\xe9 dans l'\xe9tape suivante."),e.k0s(),e.j41(224,"details")(225,"summary"),e.EFF(226,"D\xe9veloppez si vous utilisez PostgreSQL, MySQL, MsSQL ou Azure SQL"),e.k0s(),e.j41(227,"p"),e.EFF(228,"Avec PostgreSQL et MySQL, vous devez configurer l'URL de connexion pour qu'elle pointe vers le "),e.j41(229,"em"),e.EFF(230,"serveur de base de donn\xe9es"),e.k0s(),e.EFF(231,". Vous pouvez en savoir plus sur le format requis de l'URL de connexion "),e.j41(232,"a",33),e.EFF(233,"ici"),e.k0s(),e.EFF(234,"."),e.k0s(),e.j41(235,"p")(236,"strong"),e.EFF(237,"PostgreSQL"),e.k0s()(),e.j41(238,"p"),e.EFF(239,"Si vous utilisez PostgreSQL, vous devez ajuster les fichiers "),e.j41(240,"code"),e.EFF(241,"schema.prisma"),e.k0s(),e.EFF(242," et "),e.j41(243,"code"),e.EFF(244,".env"),e.k0s(),e.EFF(245," comme suit :"),e.k0s(),e.j41(246,"p")(247,"strong")(248,"code"),e.EFF(249,"schema.prisma"),e.k0s()()(),e.j41(250,"pre")(251,"code",31),e.EFF(252,'\ndatasource db {\n  provider = "postgresql"\n  url      = env("DATABASE_URL")\n}\n\ngenerator client {\n  provider = "prisma-client-js"\n}\n'),e.k0s()(),e.j41(253,"p")(254,"strong")(255,"code"),e.EFF(256,".env"),e.k0s()()(),e.j41(257,"pre")(258,"code",25),e.EFF(259,'\nDATABASE_URL="postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=SCHEMA"\n'),e.k0s()(),e.j41(260,"p"),e.EFF(261,"Remplacez les caract\xe8res de remplacement en majuscules par les informations d'identification de votre base de donn\xe9es. Notez que si vous n'\xeates pas s\xfbr de ce que vous devez fournir pour l'espace r\xe9serv\xe9 "),e.j41(262,"code"),e.EFF(263,"SCHEMA"),e.k0s(),e.EFF(264,", c'est tr\xe8s probablement la valeur par d\xe9faut "),e.j41(265,"code"),e.EFF(266,"public"),e.k0s(),e.EFF(267," :"),e.k0s(),e.j41(268,"pre")(269,"code",25),e.EFF(270,'\nDATABASE_URL="postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public"\n'),e.k0s()(),e.j41(271,"p"),e.EFF(272,"Si vous souhaitez apprendre \xe0 configurer une base de donn\xe9es PostgreSQL, vous pouvez suivre ce guide sur "),e.j41(273,"a",34),e.EFF(274,"la configuration d'une base de donn\xe9es PostgreSQL gratuite sur Heroku"),e.k0s(),e.EFF(275,"."),e.k0s(),e.j41(276,"p")(277,"strong"),e.EFF(278,"MySQL"),e.k0s()(),e.j41(279,"p"),e.EFF(280,"Si vous utilisez MySQL, vous devez ajuster les fichiers "),e.j41(281,"code"),e.EFF(282,"schema.prisma"),e.k0s(),e.EFF(283," et "),e.j41(284,"code"),e.EFF(285,".env"),e.k0s(),e.EFF(286," comme suit :"),e.k0s(),e.j41(287,"p")(288,"strong")(289,"code"),e.EFF(290,"schema.prisma"),e.k0s()()(),e.j41(291,"pre")(292,"code",31),e.EFF(293,'\ndatasource db {\n  provider = "mysql"\n  url      = env("DATABASE_URL")\n}\n\ngenerator client {\n  provider = "prisma-client-js"\n}\n'),e.k0s()(),e.j41(294,"p")(295,"strong")(296,"code"),e.EFF(297,".env"),e.k0s()()(),e.j41(298,"pre")(299,"code",25),e.EFF(300,'\nDATABASE_URL="mysql://USER:PASSWORD@HOST:PORT/DATABASE"\n'),e.k0s()(),e.j41(301,"p"),e.EFF(302,"Remplacez les caract\xe8res de remplacement \xe9crits en majuscules par les informations d'identification de votre base de donn\xe9es."),e.k0s(),e.j41(303,"p")(304,"strong"),e.EFF(305,"Microsoft SQL Server / Azure SQL Server"),e.k0s()(),e.j41(306,"p"),e.EFF(307,"Si vous utilisez Microsoft SQL Server ou Azure SQL Server, vous devez ajuster les fichiers "),e.j41(308,"code"),e.EFF(309,"schema.prisma"),e.k0s(),e.EFF(310," et "),e.j41(311,"code"),e.EFF(312,".env"),e.k0s(),e.EFF(313," comme suit :"),e.k0s(),e.j41(314,"p")(315,"strong")(316,"code"),e.EFF(317,"schema.prisma"),e.k0s()()(),e.j41(318,"pre")(319,"code",31),e.EFF(320,'\ndatasource db {\n  provider = "sqlserver"\n  url      = env("DATABASE_URL")\n}\ngenerator client {\n  provider = "prisma-client-js"\n}\n'),e.k0s()(),e.j41(321,"p")(322,"strong")(323,"code"),e.EFF(324,".env"),e.k0s()()(),e.j41(325,"p"),e.EFF(326,"Remplacez les caract\xe8res de remplacement en majuscules par les informations d'identification de votre base de donn\xe9es. Notez que si vous n'\xeates pas s\xfbr de ce que vous devez fournir pour l'espace r\xe9serv\xe9 "),e.j41(327,"code"),e.EFF(328,"encrypt"),e.k0s(),e.EFF(329,", c'est tr\xe8s probablement la valeur par d\xe9faut "),e.j41(330,"code"),e.EFF(331,"true"),e.k0s(),e.EFF(332," :"),e.k0s(),e.j41(333,"pre")(334,"code",25),e.EFF(335,'\nDATABASE_URL="sqlserver://HOST:PORT;database=DATABASE;user=USER;password=PASSWORD;encrypt=true"\n'),e.k0s()()(),e.j41(336,"h4",35)(337,"span"),e.EFF(338,"Cr\xe9er deux tables de base de donn\xe9es avec Prisma Migrate"),e.k0s()(),e.j41(339,"p"),e.EFF(340,"Dans cette section, vous allez cr\xe9er deux nouvelles tables dans votre base de donn\xe9es en utilisant "),e.j41(341,"a",36),e.EFF(342,"Prisma Migrate"),e.k0s(),e.EFF(343,". Prisma Migrate g\xe9n\xe8re des fichiers de migration SQL pour votre d\xe9finition de mod\xe8le de donn\xe9es d\xe9claratif dans le sch\xe9ma Prisma. Ces fichiers de migration sont enti\xe8rement personnalisables, ce qui vous permet de configurer toutes les fonctionnalit\xe9s suppl\xe9mentaires de la base de donn\xe9es sous-jacente ou d'inclure des commandes suppl\xe9mentaires, par exemple pour l'ensemencement."),e.k0s(),e.j41(344,"p"),e.EFF(345,"Ajoutez les deux mod\xe8les suivants \xe0 votre fichier "),e.j41(346,"code"),e.EFF(347,"schema.prisma"),e.k0s(),e.EFF(348," :"),e.k0s(),e.j41(349,"pre")(350,"code",31),e.EFF(351,"\nmodel User {\n  id    Int     @default(autoincrement()) @id\n  email String  @unique\n  name  String?\n  posts Post[]\n}\n\nmodel Post {\n  id        Int      @default(autoincrement()) @id\n  title     String\n  content   String?\n  published Boolean? @default(false)\n  author    User?    @relation(fields: [authorId], references: [id])\n  authorId  Int?\n}\n"),e.k0s()(),e.j41(352,"p"),e.EFF(353,"Avec vos mod\xe8les Prisma en place, vous pouvez g\xe9n\xe9rer vos fichiers de migration SQL et les ex\xe9cuter contre la base de donn\xe9es. Ex\xe9cutez les commandes suivantes dans votre terminal :"),e.k0s(),e.j41(354,"pre")(355,"code",25),e.EFF(356,"\n$ npx prisma migrate dev --name init\n"),e.k0s()(),e.j41(357,"p"),e.EFF(358,"Cette commande "),e.j41(359,"code"),e.EFF(360,"prisma migrate dev"),e.k0s(),e.EFF(361," g\xe9n\xe8re des fichiers SQL et les ex\xe9cute directement sur la base de donn\xe9es. Dans ce cas, les fichiers de migration suivants ont \xe9t\xe9 cr\xe9\xe9s dans le r\xe9pertoire "),e.j41(362,"code"),e.EFF(363,"prisma"),e.k0s(),e.EFF(364," existant :"),e.k0s(),e.j41(365,"pre")(366,"code",25),e.EFF(367,"\n$ tree prisma\nprisma\n\u251c\u2500\u2500 dev.db\n\u251c\u2500\u2500 migrations\n\u2502   \u2514\u2500\u2500 20201207100915_init\n\u2502       \u2514\u2500\u2500 migration.sql\n\u2514\u2500\u2500 schema.prisma\n"),e.k0s()(),e.j41(368,"details")(369,"summary"),e.EFF(370,"D\xe9velopper pour visualiser les instructions SQL g\xe9n\xe9r\xe9es"),e.k0s(),e.j41(371,"p"),e.EFF(372,"Les tables suivantes ont \xe9t\xe9 cr\xe9\xe9es dans votre base de donn\xe9es SQLite :"),e.k0s(),e.j41(373,"pre")(374,"code",37),e.EFF(375,'\n-- CreateTable\nCREATE TABLE "User" (\n    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    "email" TEXT NOT NULL,\n    "name" TEXT\n);\n\n-- CreateTable\nCREATE TABLE "Post" (\n    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    "title" TEXT NOT NULL,\n    "content" TEXT,\n    "published" BOOLEAN DEFAULT false,\n    "authorId" INTEGER,\n\n    FOREIGN KEY ("authorId") REFERENCES "User"("id") ON DELETE SET NULL ON UPDATE CASCADE\n);\n\n-- CreateIndex\nCREATE UNIQUE INDEX "User.email_unique" ON "User"("email");\n'),e.k0s()()(),e.j41(376,"h4",38)(377,"span"),e.EFF(378,"Installer et g\xe9n\xe9rer le Prisma Client"),e.k0s()(),e.j41(379,"p"),e.EFF(380,"Prisma Client est un client de base de donn\xe9es \xe0 s\xe9curit\xe9 de type qui est "),e.j41(381,"em"),e.EFF(382,"g\xe9n\xe9r\xe9"),e.k0s(),e.EFF(383," \xe0 partir de votre d\xe9finition de mod\xe8le Prisma. Gr\xe2ce \xe0 cette approche, Prisma Client peut exposer des op\xe9rations "),e.j41(384,"a",39),e.EFF(385,"CRUD"),e.k0s(),e.EFF(386," qui sont "),e.j41(387,"em"),e.EFF(388,"taill\xe9es"),e.k0s(),e.EFF(389," sp\xe9cifiquement pour vos mod\xe8les."),e.k0s(),e.j41(390,"p"),e.EFF(391,"Pour installer Prisma Client dans votre projet, lancez la commande suivante dans votre terminal :"),e.k0s(),e.j41(392,"pre")(393,"code",25),e.EFF(394,"\n$ npm install @prisma/client\n"),e.k0s()(),e.j41(395,"p"),e.EFF(396,"Notez que pendant l'installation, Prisma invoque automatiquement la commande "),e.j41(397,"code"),e.EFF(398,"prisma generate"),e.k0s(),e.EFF(399," pour vous. Dans le futur, vous devrez lancer cette commande apr\xe8s "),e.j41(400,"em"),e.EFF(401,"chaque"),e.k0s(),e.EFF(402," changement dans vos mod\xe8les Prisma pour mettre \xe0 jour votre client Prisma g\xe9n\xe9r\xe9."),e.k0s(),e.j41(403,"blockquote",13)(404,"strong"),e.EFF(405,"Note"),e.k0s(),e.EFF(406," La commande "),e.j41(407,"code"),e.EFF(408,"prisma generate"),e.k0s(),e.EFF(409," lit votre sch\xe9ma Prisma et met \xe0 jour la biblioth\xe8que Prisma Client g\xe9n\xe9r\xe9e dans "),e.j41(410,"code"),e.EFF(411,"node_modules/@prisma/client"),e.k0s(),e.EFF(412,".\n"),e.k0s(),e.j41(413,"h4",40)(414,"span"),e.EFF(415,"Utiliser Prisma Client dans vos services NestJS"),e.k0s()(),e.j41(416,"p"),e.EFF(417,"Vous \xeates maintenant en mesure d'envoyer des requ\xeates de base de donn\xe9es avec Prisma Client. Si vous souhaitez en savoir plus sur la cr\xe9ation de requ\xeates avec Prisma Client, consultez la "),e.j41(418,"a",41),e.EFF(419,"documentation API"),e.k0s(),e.EFF(420,"."),e.k0s(),e.j41(421,"p"),e.EFF(422,"Lors de la mise en place de votre application NestJS, vous voudrez abstraire l'API du client Prisma pour les requ\xeates de base de donn\xe9es \xe0 l'int\xe9rieur d'un service. Pour commencer, vous pouvez cr\xe9er un nouveau "),e.j41(423,"code"),e.EFF(424,"PrismaService"),e.k0s(),e.EFF(425," qui se charge d'instancier "),e.j41(426,"code"),e.EFF(427,"PrismaClient"),e.k0s(),e.EFF(428," et de se connecter \xe0 votre base de donn\xe9es."),e.k0s(),e.j41(429,"p"),e.EFF(430,"Dans le r\xe9pertoire "),e.j41(431,"code"),e.EFF(432,"src"),e.k0s(),e.EFF(433,", cr\xe9ez un nouveau fichier appel\xe9 "),e.j41(434,"code"),e.EFF(435,"prisma.service.ts"),e.k0s(),e.EFF(436," et ajoutez-y le code suivant :"),e.k0s(),e.j41(437,"app-copy-button")(438,"pre")(439,"code",42),e.EFF(440,"\nimport { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n"),e.k0s()()(),e.j41(441,"blockquote",13)(442,"strong"),e.EFF(443,"Note"),e.k0s(),e.EFF(444," Le "),e.j41(445,"code"),e.EFF(446,"onModuleInit"),e.k0s(),e.EFF(447," est optionnel - si vous l'omettez, Prisma se connectera paresseusement lors de son premier appel \xe0 la base de donn\xe9es.\n"),e.k0s(),e.j41(448,"p"),e.EFF(449,"Ensuite, vous pouvez \xe9crire des services que vous pouvez utiliser pour faire des appels \xe0 la base de donn\xe9es pour les mod\xe8les "),e.j41(450,"code"),e.EFF(451,"User"),e.k0s(),e.EFF(452," et "),e.j41(453,"code"),e.EFF(454,"Post"),e.k0s(),e.EFF(455," de votre sch\xe9ma Prisma."),e.k0s(),e.j41(456,"p"),e.EFF(457,"Toujours dans le r\xe9pertoire "),e.j41(458,"code"),e.EFF(459,"src"),e.k0s(),e.EFF(460,", cr\xe9ez un nouveau fichier appel\xe9 "),e.j41(461,"code"),e.EFF(462,"user.service.ts"),e.k0s(),e.EFF(463," et ajoutez-y le code suivant :"),e.k0s(),e.j41(464,"app-copy-button")(465,"pre")(466,"code",42),e.EFF(467,"\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { User, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(\n    userWhereUniqueInput: Prisma.UserWhereUniqueInput,\n  ): Promise<User | null> {\n    return this.prisma.user.findUnique({\n      where: userWhereUniqueInput,\n    });\n  }\n\n  async users(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.UserWhereUniqueInput;\n    where?: Prisma.UserWhereInput;\n    orderBy?: Prisma.UserOrderByWithRelationInput;\n  }): Promise<User[]> {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.user.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createUser(data: Prisma.UserCreateInput): Promise<User> {\n    return this.prisma.user.create({\n      data,\n    });\n  }\n\n  async updateUser(params: {\n    where: Prisma.UserWhereUniqueInput;\n    data: Prisma.UserUpdateInput;\n  }): Promise<User> {\n    const { where, data } = params;\n    return this.prisma.user.update({\n      data,\n      where,\n    });\n  }\n\n  async deleteUser(where: Prisma.UserWhereUniqueInput): Promise<User> {\n    return this.prisma.user.delete({\n      where,\n    });\n  }\n}\n"),e.k0s()()(),e.j41(468,"p"),e.EFF(469,"Remarquez que vous utilisez les types g\xe9n\xe9r\xe9s par Prisma Client pour vous assurer que les m\xe9thodes expos\xe9es par votre service sont correctement typ\xe9es. Vous \xe9vitez ainsi de taper vos mod\xe8les et de cr\xe9er des fichiers d'interface ou de DTO suppl\xe9mentaires."),e.k0s(),e.j41(470,"p"),e.EFF(471,"Maintenant faites la m\xeame chose pour le mod\xe8le "),e.j41(472,"code"),e.EFF(473,"Post"),e.k0s(),e.EFF(474,"."),e.k0s(),e.j41(475,"p"),e.EFF(476,"Toujours dans le r\xe9pertoire "),e.j41(477,"code"),e.EFF(478,"src"),e.k0s(),e.EFF(479,", cr\xe9ez un nouveau fichier appel\xe9 "),e.j41(480,"code"),e.EFF(481,"post.service.ts"),e.k0s(),e.EFF(482," et ajoutez-y le code suivant :"),e.k0s(),e.j41(483,"app-copy-button")(484,"pre")(485,"code",42),e.EFF(486,"\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { Post, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class PostService {\n  constructor(private prisma: PrismaService) {}\n\n  async post(\n    postWhereUniqueInput: Prisma.PostWhereUniqueInput,\n  ): Promise<Post | null> {\n    return this.prisma.post.findUnique({\n      where: postWhereUniqueInput,\n    });\n  }\n\n  async posts(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.PostWhereUniqueInput;\n    where?: Prisma.PostWhereInput;\n    orderBy?: Prisma.PostOrderByWithRelationInput;\n  }): Promise<Post[]> {\n    const { skip, take, cursor, where, orderBy } = params;\n    return this.prisma.post.findMany({\n      skip,\n      take,\n      cursor,\n      where,\n      orderBy,\n    });\n  }\n\n  async createPost(data: Prisma.PostCreateInput): Promise<Post> {\n    return this.prisma.post.create({\n      data,\n    });\n  }\n\n  async updatePost(params: {\n    where: Prisma.PostWhereUniqueInput;\n    data: Prisma.PostUpdateInput;\n  }): Promise<Post> {\n    const { data, where } = params;\n    return this.prisma.post.update({\n      data,\n      where,\n    });\n  }\n\n  async deletePost(where: Prisma.PostWhereUniqueInput): Promise<Post> {\n    return this.prisma.post.delete({\n      where,\n    });\n  }\n}\n"),e.k0s()()(),e.j41(487,"p"),e.EFF(488,"Vos "),e.j41(489,"code"),e.EFF(490,"UserService"),e.k0s(),e.EFF(491," et "),e.j41(492,"code"),e.EFF(493,"PostService"),e.k0s(),e.EFF(494," contiennent actuellement les requ\xeates CRUD disponibles dans Prisma Client. Dans une application r\xe9elle, le service serait \xe9galement l'endroit o\xf9 ajouter de la logique m\xe9tier \xe0 votre application. Par exemple, vous pourriez avoir une m\xe9thode appel\xe9e "),e.j41(495,"code"),e.EFF(496,"updatePassword"),e.k0s(),e.EFF(497," dans le "),e.j41(498,"code"),e.EFF(499,"UserService"),e.k0s(),e.EFF(500," qui serait responsable de la mise \xe0 jour du mot de passe d'un utilisateur."),e.k0s(),e.j41(501,"p"),e.EFF(502,"N'oubliez pas d'enregistrer les nouveaux services dans le module d'application."),e.k0s(),e.j41(503,"h5",43),e.EFF(504,"Impl\xe9menter les routes de l'API REST dans le contr\xf4leur principal de l'application"),e.k0s(),e.j41(505,"p"),e.EFF(506,"Enfin, vous utiliserez les services que vous avez cr\xe9\xe9s dans les sections pr\xe9c\xe9dentes pour impl\xe9menter les diff\xe9rentes routes de votre application. Pour les besoins de ce guide, vous placerez toutes vos routes dans la classe "),e.j41(507,"code"),e.EFF(508,"AppController"),e.k0s(),e.EFF(509," d\xe9j\xe0 existante."),e.k0s(),e.j41(510,"p"),e.EFF(511,"Remplacez le contenu du fichier "),e.j41(512,"code"),e.EFF(513,"app.controller.ts"),e.k0s(),e.EFF(514," par le code suivant :"),e.k0s(),e.j41(515,"app-copy-button")(516,"pre")(517,"code",42),e.EFF(518,"\nimport {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Body,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { PostService } from './post.service';\nimport { User as UserModel, Post as PostModel } from '@prisma/client';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly postService: PostService,\n  ) {}\n\n  @Get('post/:id')\n  async getPostById(@Param('id') id: string): Promise<PostModel> {\n    return this.postService.post({ id: Number(id) });\n  }\n\n  @Get('feed')\n  async getPublishedPosts(): Promise<PostModel[]> {\n    return this.postService.posts({\n      where: { published: true },\n    });\n  }\n\n  @Get('filtered-posts/:searchString')\n  async getFilteredPosts(\n    @Param('searchString') searchString: string,\n  ): Promise<PostModel[]> {\n    return this.postService.posts({\n      where: {\n        OR: [\n          {\n            title: { contains: searchString },\n          },\n          {\n            content: { contains: searchString },\n          },\n        ],\n      },\n    });\n  }\n\n  @Post('post')\n  async createDraft(\n    @Body() postData: { title: string; content?: string; authorEmail: string },\n  ): Promise<PostModel> {\n    const { title, content, authorEmail } = postData;\n    return this.postService.createPost({\n      title,\n      content,\n      author: {\n        connect: { email: authorEmail },\n      },\n    });\n  }\n\n  @Post('user')\n  async signupUser(\n    @Body() userData: { name?: string; email: string },\n  ): Promise<UserModel> {\n    return this.userService.createUser(userData);\n  }\n\n  @Put('publish/:id')\n  async publishPost(@Param('id') id: string): Promise<PostModel> {\n    return this.postService.updatePost({\n      where: { id: Number(id) },\n      data: { published: true },\n    });\n  }\n\n  @Delete('post/:id')\n  async deletePost(@Param('id') id: string): Promise<PostModel> {\n    return this.postService.deletePost({ id: Number(id) });\n  }\n}\n"),e.k0s()()(),e.j41(519,"p"),e.EFF(520,"Ce contr\xf4leur met en \u0153uvre les routes suivantes :"),e.k0s(),e.j41(521,"h6",44)(522,"code"),e.EFF(523,"GET"),e.k0s()(),e.j41(524,"ul")(525,"li")(526,"code"),e.EFF(527,"/post/:id"),e.k0s(),e.EFF(528,": R\xe9cup\xe8rer un seul message par son "),e.j41(529,"code"),e.EFF(530,"id"),e.k0s(),e.EFF(531,"."),e.k0s(),e.j41(532,"li")(533,"code"),e.EFF(534,"/feed"),e.k0s(),e.EFF(535,": R\xe9cup\xe8rer tous les articles _publi\xe9s"),e.k0s(),e.j41(536,"li")(537,"code"),e.EFF(538,"/filter-posts/:searchString"),e.k0s(),e.EFF(539,": Filtrer les messages par "),e.j41(540,"code"),e.EFF(541,"title"),e.k0s(),e.EFF(542," ou "),e.j41(543,"code"),e.EFF(544,"content"),e.k0s()()(),e.j41(545,"h6",45)(546,"code"),e.EFF(547,"POST"),e.k0s()(),e.j41(548,"ul")(549,"li")(550,"code"),e.EFF(551,"/post"),e.k0s(),e.EFF(552,": Cr\xe9er un nouveau message"),e.j41(553,"ul")(554,"li"),e.EFF(555,"Corps :"),e.j41(556,"ul")(557,"li")(558,"code"),e.EFF(559,"title: String"),e.k0s(),e.EFF(560," (obligatoire) : Le titre de l'article"),e.k0s(),e.j41(561,"li")(562,"code"),e.EFF(563,"content: String"),e.k0s(),e.EFF(564," (facultatif) : Le contenu du message"),e.k0s(),e.j41(565,"li")(566,"code"),e.EFF(567,"authorEmail: String"),e.k0s(),e.EFF(568," (obligatoire) : L'adresse \xe9lectronique de l'utilisateur qui cr\xe9e le message"),e.k0s()()()()(),e.j41(569,"li")(570,"code"),e.EFF(571,"/user"),e.k0s(),e.EFF(572,": Cr\xe9er un nouvel utilisateur"),e.j41(573,"ul")(574,"li"),e.EFF(575,"Corps :"),e.j41(576,"ul")(577,"li")(578,"code"),e.EFF(579,"email: String"),e.k0s(),e.EFF(580," (obligatoire) : L'adresse \xe9lectronique de l'utilisateur"),e.k0s(),e.j41(581,"li")(582,"code"),e.EFF(583,"name: String"),e.k0s(),e.EFF(584," (facultatif) : Le nom de l'utilisateur"),e.k0s()()()()()(),e.j41(585,"h6",46)(586,"code"),e.EFF(587,"PUT"),e.k0s()(),e.j41(588,"ul")(589,"li")(590,"code"),e.EFF(591,"/publish/:id"),e.k0s(),e.EFF(592,": Publier un message par son "),e.j41(593,"code"),e.EFF(594,"id"),e.k0s()()(),e.j41(595,"h6",47)(596,"code"),e.EFF(597,"DELETE"),e.k0s()(),e.j41(598,"ul")(599,"li")(600,"code"),e.EFF(601,"/post/:id"),e.k0s(),e.EFF(602,": Supprimer un message par son "),e.j41(603,"code"),e.EFF(604,"id"),e.k0s()()(),e.j41(605,"h4",48)(606,"span"),e.EFF(607,"R\xe9sum\xe9"),e.k0s()(),e.j41(608,"p"),e.EFF(609,"Dans cette recette, vous avez appris \xe0 utiliser Prisma avec NestJS pour impl\xe9menter une API REST. Le contr\xf4leur qui impl\xe9mente les routes de l'API appelle un "),e.j41(610,"code"),e.EFF(611,"PrismaService"),e.k0s(),e.EFF(612," qui \xe0 son tour utilise Prisma Client pour envoyer des requ\xeates \xe0 une base de donn\xe9es pour r\xe9pondre aux besoins de donn\xe9es des requ\xeates entrantes."),e.k0s(),e.j41(613,"p"),e.EFF(614,"Si vous souhaitez en savoir plus sur l'utilisation de NestJS avec Prisma, n'h\xe9sitez pas \xe0 consulter les ressources suivantes (en anglais) :"),e.k0s(),e.j41(615,"ul")(616,"li")(617,"a",49),e.EFF(618,"NestJS & Prisma"),e.k0s()(),e.j41(619,"li")(620,"a",19),e.EFF(621,"Exemples de projets pr\xeats \xe0 l'emploi pour REST et GraphQL"),e.k0s()(),e.j41(622,"li")(623,"a",50),e.EFF(624,"Kit de d\xe9marrage pr\xeat pour la production"),e.k0s()(),e.j41(625,"li")(626,"a",51),e.EFF(627,"Vid\xe9o : Acc\xe9der aux bases de donn\xe9es avec NestJS et Prisma (5min)"),e.k0s(),e.EFF(628," par "),e.j41(629,"a",52),e.EFF(630,"Marc Stammerjohann"),e.k0s()()()())},dependencies:[l.a,d.z,k.Wk],encapsulation:2,changeDetection:0})}return s})(),D=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-repl"]],features:[e.Vt3],decls:199,vars:8,consts:[["contentReference",""],["app8362f7e49a9b3cee997a6be539a04ed3a0d6bac2",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/repl.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","read-eval-print-loop-repl"],["appAnchor","","id","usage"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"language-bash"],[1,"info"],["rel","nofollow","target","_blank","href","https://nodejs.org/api/repl.html"],["src","/assets/repl.gif","alt","Exemple REPL"],["appAnchor","","id","fonctions-natives"],[1,"language-text"],["rel","nofollow","target","_blank","href","https://www.typescriptlang.org/docs/handbook/2/functions.html#function-type-expressions"],["appAnchor","","id","mode-de-surveillance"]],template:function(t,o){if(1&t&&(e.j41(0,"div",2,0)(2,"div",3)(3,"a",4),e.nrm(4,"i",5),e.k0s()(),e.j41(5,"h3",6),e.EFF(6,"Read-Eval-Print-Loop (REPL)"),e.k0s(),e.j41(7,"p"),e.EFF(8,"REPL est un environnement interactif simple qui prend des entr\xe9es utilisateur uniques, les ex\xe9cute et renvoie le r\xe9sultat \xe0 l'utilisateur.\nLa fonction REPL vous permet d'inspecter votre graphe de d\xe9pendance et d'appeler des m\xe9thodes sur vos fournisseurs (et contr\xf4leurs) directement depuis votre terminal."),e.k0s(),e.j41(9,"h4",7)(10,"span"),e.EFF(11,"Usage"),e.k0s()(),e.j41(12,"p"),e.EFF(13,"Pour ex\xe9cuter votre application NestJS en mode REPL, cr\xe9ez un nouveau fichier "),e.j41(14,"code"),e.EFF(15,"repl.ts"),e.k0s(),e.EFF(16," (\xe0 c\xf4t\xe9 du fichier "),e.j41(17,"code"),e.EFF(18,"main.ts"),e.k0s(),e.EFF(19," existant) et ajoutez le code suivant \xe0 l'int\xe9rieur :"),e.k0s(),e.j41(20,"app-copy-button",8)(21,"span",9),e.EFF(22),e.nI1(23,"extension"),e.nrm(24,"app-tabs",null,1),e.k0s(),e.j41(26,"pre")(27,"code",10),e.EFF(28,"\nimport { repl } from '@nestjs/core';\nimport { AppModule } from './src/app.module';\n\nasync function bootstrap() {\n  await repl(AppModule);\n}\nbootstrap();\n"),e.k0s()(),e.j41(29,"pre")(30,"code",10),e.EFF(31,"\nimport { repl } from '@nestjs/core';\nimport { AppModule } from './src/app.module';\n\nasync function bootstrap() {\n  await repl(AppModule);\n}\nbootstrap();\n"),e.k0s()()(),e.j41(32,"p"),e.EFF(33,"Maintenant, dans votre terminal, d\xe9marrez le REPL avec la commande suivante :"),e.k0s(),e.j41(34,"pre")(35,"code",11),e.EFF(36,"\n$ npm run start -- --entryFile repl\n"),e.k0s()(),e.j41(37,"blockquote",12)(38,"strong"),e.EFF(39,"Astuce"),e.k0s(),e.j41(40,"code"),e.EFF(41,"repl"),e.k0s(),e.EFF(42," renvoie un objet "),e.j41(43,"a",13),e.EFF(44,"serveur Node.js REPL"),e.k0s(),e.EFF(45,".\n"),e.k0s(),e.j41(46,"p"),e.EFF(47,"Une fois qu'il est op\xe9rationnel, vous devriez voir le message suivant dans votre console :"),e.k0s(),e.j41(48,"pre")(49,"code",11),e.EFF(50,"\nLOG [NestFactory] Starting Nest application...\nLOG [InstanceLoader] AppModule dependencies initialized\nLOG REPL initialized\n"),e.k0s()(),e.j41(51,"p"),e.EFF(52,"Et maintenant vous pouvez commencer \xe0 interagir avec votre graphe de d\xe9pendances. Par exemple, vous pouvez r\xe9cup\xe9rer un "),e.j41(53,"code"),e.EFF(54,"AppService"),e.k0s(),e.EFF(55," (nous utilisons le projet starter comme exemple ici) et appeler la m\xe9thode "),e.j41(56,"code"),e.EFF(57,"getHello()"),e.k0s(),e.EFF(58," :"),e.k0s(),e.j41(59,"app-copy-button")(60,"pre")(61,"code",10),e.EFF(62,"\n> get(AppService).getHello()\n'Hello World!'\n"),e.k0s()()(),e.j41(63,"p"),e.EFF(64,"Vous pouvez ex\xe9cuter n'importe quel code JavaScript depuis votre terminal, par exemple, assigner une instance de "),e.j41(65,"code"),e.EFF(66,"AppController"),e.k0s(),e.EFF(67," \xe0 une variable locale, et utiliser "),e.j41(68,"code"),e.EFF(69,"await"),e.k0s(),e.EFF(70," pour appeler une m\xe9thode asynchrone :"),e.k0s(),e.j41(71,"app-copy-button")(72,"pre")(73,"code",10),e.EFF(74,"\n> appController = get(AppController)\nAppController { appService: AppService {} }\n> await appController.getHello()\n'Hello World!'\n"),e.k0s()()(),e.j41(75,"p"),e.EFF(76,"Pour afficher toutes les m\xe9thodes publiques disponibles sur un fournisseur ou un contr\xf4leur donn\xe9, utilisez la fonction "),e.j41(77,"code"),e.EFF(78,"methods()"),e.k0s(),e.EFF(79,", comme suit :"),e.k0s(),e.j41(80,"app-copy-button")(81,"pre")(82,"code",10),e.EFF(83,"\n> methods(AppController)\n\nMethods:\n \u25fb getHello\n"),e.k0s()()(),e.j41(84,"p"),e.EFF(85,"Pour afficher tous les modules enregistr\xe9s sous forme de liste avec leurs contr\xf4leurs et fournisseurs, utilisez "),e.j41(86,"code"),e.EFF(87,"debug()"),e.k0s(),e.EFF(88,"."),e.k0s(),e.j41(89,"app-copy-button")(90,"pre")(91,"code",10),e.EFF(92,"\n> debug()\n\nAppModule:\n - controllers:\n  \u25fb AppController\n - providers:\n  \u25fb AppService\n"),e.k0s()()(),e.j41(93,"p"),e.EFF(94,"D\xe9mo rapide :"),e.k0s(),e.j41(95,"figure"),e.nrm(96,"img",14),e.k0s(),e.j41(97,"p"),e.EFF(98,"Vous trouverez plus d'informations sur les m\xe9thodes natives pr\xe9d\xe9finies existantes dans la section ci-dessous."),e.k0s(),e.j41(99,"h4",15)(100,"span"),e.EFF(101,"Fonctions natives"),e.k0s()(),e.j41(102,"p"),e.EFF(103,"Le REPL NestJS int\xe9gr\xe9 est livr\xe9 avec quelques fonctions natives qui sont globalement disponibles lorsque vous d\xe9marrez le REPL. Vous pouvez appeler "),e.j41(104,"code"),e.EFF(105,"help()"),e.k0s(),e.EFF(106," pour les \xe9num\xe9rer."),e.k0s(),e.j41(107,"p"),e.EFF(108,"Si vous ne vous souvenez pas de la signature (c'est-\xe0-dire des param\xe8tres attendus et du type de retour) d'une fonction, vous pouvez appeler "),e.j41(109,"code"),e.EFF(110,"<nom_de_la_fonction>.help"),e.k0s(),e.EFF(111,".\nPar exemple :"),e.k0s(),e.j41(112,"pre")(113,"code",16),e.EFF(114,"\n> $.help\nRetrieves an instance of either injectable or controller, otherwise, throws exception.\nInterface: $(token: InjectionToken) => any\n"),e.k0s()(),e.j41(115,"blockquote",12)(116,"strong"),e.EFF(117,"Astuce"),e.k0s(),e.EFF(118," Ces interfaces de fonction sont \xe9crites en "),e.j41(119,"a",17),e.EFF(120,"syntaxe d'expression de type de fonction TypeScript"),e.k0s(),e.EFF(121,".\n"),e.k0s(),e.j41(122,"table")(123,"thead")(124,"tr")(125,"th"),e.EFF(126,"Fonction"),e.k0s(),e.j41(127,"th"),e.EFF(128,"Description"),e.k0s(),e.j41(129,"th"),e.EFF(130,"Signature"),e.k0s()()(),e.j41(131,"tbody")(132,"tr")(133,"td")(134,"code"),e.EFF(135,"debug"),e.k0s()(),e.j41(136,"td"),e.EFF(137,"Affiche tous les modules enregistr\xe9s sous forme de liste, avec leurs contr\xf4leurs et leurs fournisseurs."),e.k0s(),e.j41(138,"td")(139,"code"),e.EFF(140,"debug(moduleCls?: ClassRef | string) => void"),e.k0s()()(),e.j41(141,"tr")(142,"td")(143,"code"),e.EFF(144,"get"),e.k0s(),e.EFF(145," ou "),e.j41(146,"code"),e.EFF(147,"$"),e.k0s()(),e.j41(148,"td"),e.EFF(149,"R\xe9cup\xe8re une instance d'injectable ou de contr\xf4leur, sinon, l\xe8ve une exception."),e.k0s(),e.j41(150,"td")(151,"code"),e.EFF(152,"get(token: InjectionToken) => any"),e.k0s()()(),e.j41(153,"tr")(154,"td")(155,"code"),e.EFF(156,"methods"),e.k0s()(),e.j41(157,"td"),e.EFF(158,"Affiche toutes les m\xe9thodes publiques disponibles pour un fournisseur ou un contr\xf4leur donn\xe9."),e.k0s(),e.j41(159,"td")(160,"code"),e.EFF(161,"methods(token: ClassRef | string) => void"),e.k0s()()(),e.j41(162,"tr")(163,"td")(164,"code"),e.EFF(165,"resolve"),e.k0s()(),e.j41(166,"td"),e.EFF(167,"R\xe9sout l'instance transitoire ou \xe0 port\xe9e de requ\xeate de l'injectable ou du contr\xf4leur, sinon l\xe8ve une exception."),e.k0s(),e.j41(168,"td")(169,"code"),e.EFF(170,"resolve(token: InjectionToken, contextId: any) => Promise<any>"),e.k0s()()(),e.j41(171,"tr")(172,"td")(173,"code"),e.EFF(174,"select"),e.k0s()(),e.j41(175,"td"),e.EFF(176,"Permet de naviguer dans l'arborescence des modules, par exemple pour extraire une instance sp\xe9cifique du module s\xe9lectionn\xe9."),e.k0s(),e.j41(177,"td")(178,"code"),e.EFF(179,"select(token: DynamicModule | ClassRef) => INestApplicationContext"),e.k0s()()()()(),e.j41(180,"h4",18)(181,"span"),e.EFF(182,"Mode de surveillance"),e.k0s()(),e.j41(183,"p"),e.EFF(184,"Pendant le d\xe9veloppement, il est utile d'ex\xe9cuter REPL en mode veille pour refl\xe9ter automatiquement toutes les modifications du code :"),e.k0s(),e.j41(185,"pre")(186,"code",11),e.EFF(187,"\n$ npm run start -- --watch --entryFile repl\n"),e.k0s()(),e.j41(188,"p"),e.EFF(189,"Cela a un d\xe9faut, l'historique des commandes du REPL est supprim\xe9 apr\xe8s chaque rechargement, ce qui peut s'av\xe9rer fastidieux.\nHeureusement, il existe une solution tr\xe8s simple. Modifiez votre fonction "),e.j41(190,"code"),e.EFF(191,"bootstrap"),e.k0s(),e.EFF(192," comme suit :"),e.k0s(),e.j41(193,"app-copy-button")(194,"pre")(195,"code",10),e.EFF(196,'\nasync function bootstrap() {\n  const replServer = await repl(AppModule);\n  replServer.setupHistory(".nestjs_repl_history", (err) => {\n    if (err) {\n      console.error(err);\n    }\n  });\n}\n'),e.k0s()()(),e.j41(197,"p"),e.EFF(198,"D\xe9sormais, l'historique est pr\xe9serv\xe9 entre les ex\xe9cutions/rechargements."),e.k0s()()),2&t){const r=e.sdS(25);e.R7$(22),e.SpI(" ",e.i5U(23,5,"repl",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive)}},dependencies:[v.O,l.a,d.z,f.M],encapsulation:2,changeDetection:0})}return s})(),H=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-serve-static"]],features:[e.Vt3],decls:81,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/serve-static.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","serve-static"],["rel","nofollow","target","_blank","href","https://www.npmjs.com/package/@nestjs/serve-static"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","bootstrap"],[1,"language-typescript"],["appAnchor","","id","configuration"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/serve-static"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/serve-static/blob/master/lib/interfaces/serve-static-options.interface.ts"],[1,"warning"],["appAnchor","","id","exemple"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/tree/master/sample/24-serve-static"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Serve Static"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Afin de servir un contenu statique comme une application \xe0 page unique (SPA), nous pouvons utiliser le module "),e.j41(9,"code"),e.EFF(10,"ServeStaticModule"),e.k0s(),e.EFF(11," du package "),e.j41(12,"a",6)(13,"code"),e.EFF(14,"@nestjs/serve-static"),e.k0s()(),e.EFF(15,"."),e.k0s(),e.j41(16,"h4",7)(17,"span"),e.EFF(18,"Installation"),e.k0s()(),e.j41(19,"p"),e.EFF(20,"Nous devons d'abord installer le package requis :"),e.k0s(),e.j41(21,"pre")(22,"code",8),e.EFF(23,"\n$ npm install --save @nestjs/serve-static\n"),e.k0s()(),e.j41(24,"h4",9)(25,"span"),e.EFF(26,"Bootstrap"),e.k0s()(),e.j41(27,"p"),e.EFF(28,"Une fois le processus d'installation termin\xe9, nous pouvons importer le module "),e.j41(29,"code"),e.EFF(30,"ServeStaticModule"),e.k0s(),e.EFF(31," dans le module racine "),e.j41(32,"code"),e.EFF(33,"AppModule"),e.k0s(),e.EFF(34," et le configurer en passant un objet de configuration \xe0 la m\xe9thode "),e.j41(35,"code"),e.EFF(36,"forRoot()"),e.k0s(),e.EFF(37,"."),e.k0s(),e.j41(38,"app-copy-button")(39,"pre")(40,"code",10),e.EFF(41,"\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client'),\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(42,"p"),e.EFF(43,"Avec ceci en place, construisez le site web statique et placez son contenu dans l'emplacement sp\xe9cifi\xe9 par la propri\xe9t\xe9 "),e.j41(44,"code"),e.EFF(45,"rootPath"),e.k0s(),e.EFF(46,"."),e.k0s(),e.j41(47,"h4",11)(48,"span"),e.EFF(49,"Configuration"),e.k0s()(),e.j41(50,"p")(51,"a",12),e.EFF(52,"ServeStaticModule"),e.k0s(),e.EFF(53," peut \xeatre configur\xe9 avec une vari\xe9t\xe9 d'options pour personnaliser son comportement.\nVous pouvez d\xe9finir le chemin de rendu de votre application statique, sp\xe9cifier des chemins exclus, activer ou d\xe9sactiver l'en-t\xeate de r\xe9ponse Cache-Control, etc. Voir la liste compl\xe8te des options "),e.j41(54,"a",13),e.EFF(55,"ici"),e.k0s(),e.EFF(56,"."),e.k0s(),e.j41(57,"blockquote",14)(58,"strong"),e.EFF(59,"Remarque"),e.k0s(),e.EFF(60," Le "),e.j41(61,"code"),e.EFF(62,"renderPath"),e.k0s(),e.EFF(63," par d\xe9faut de l'application statique est "),e.j41(64,"code"),e.EFF(65,"*"),e.k0s(),e.EFF(66,' (tous les chemins), et le module enverra des fichiers "index.html" en r\xe9ponse.\nIl vous permet de cr\xe9er un routage c\xf4t\xe9 client pour votre SPA. Les chemins d\'acc\xe8s sp\xe9cifi\xe9s dans vos contr\xf4leurs seront renvoy\xe9s vers le serveur.\nVous pouvez modifier ce comportement en param\xe9trant '),e.j41(67,"code"),e.EFF(68,"serveRoot"),e.k0s(),e.EFF(69,", "),e.j41(70,"code"),e.EFF(71,"renderPath"),e.k0s(),e.EFF(72," en les combinant avec d'autres options.\n"),e.k0s(),e.j41(73,"h4",15)(74,"span"),e.EFF(75,"Exemple"),e.k0s()(),e.j41(76,"p"),e.EFF(77,"Un exemple concret est disponible "),e.j41(78,"a",16),e.EFF(79,"ici"),e.k0s(),e.EFF(80,"."),e.k0s()())},dependencies:[l.a,d.z],encapsulation:2,changeDetection:0})}return s})(),J=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-sql-sequelize"]],features:[e.Vt3],decls:209,vars:20,consts:[["contentReference",""],["app037e5b70362bab3965676933626f814313746304",""],["appe4beccab7e0bede3253fae5614062a00ac1701d1",""],["app59edb93bdeb81a02c68bdd9b58b81ffcf9250e2c",""],["app98e80058ca774ccbcbb813964b5e79abe17993ad",""],["app34519a9bfc2811113f715b9d2c3c09575915735f",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/sql-sequelize.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","sql-sequelize"],["id","ce-chapitre-ne-sapplique-uniquement-\xe0-typescript"],[1,""],["href","/techniques/database#int%C3%A9gration-sequelize"],["rel","nofollow","target","_blank","href","https://github.com/sequelize/sequelize"],["rel","nofollow","target","_blank","href","https://github.com/RobinBuschmann/sequelize-typescript"],["appAnchor","","id","pour-commencer"],[1,"language-bash"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","injection-de-mod\xe8le"],[1,"warning"]],template:function(t,o){if(1&t&&(e.j41(0,"div",6,0)(2,"div",7)(3,"a",8),e.nrm(4,"i",9),e.k0s()(),e.j41(5,"h3",10),e.EFF(6,"SQL (Sequelize)"),e.k0s(),e.j41(7,"h5",11),e.EFF(8,"Ce chapitre ne s'applique uniquement \xe0 TypeScript"),e.k0s(),e.j41(9,"blockquote",12)(10,"strong"),e.EFF(11,"Attention"),e.k0s(),e.EFF(12," Dans cet article, vous apprendrez comment cr\xe9er un "),e.j41(13,"code"),e.EFF(14,"DatabaseModule"),e.k0s(),e.EFF(15," bas\xe9 sur le paquet "),e.j41(16,"strong"),e.EFF(17,"Sequelize"),e.k0s(),e.EFF(18," \xe0 partir de z\xe9ro en utilisant des composants personnalis\xe9s. En cons\xe9quence, cette technique contient beaucoup de surcharge que vous pouvez \xe9viter en utilisant le package d\xe9di\xe9 et pr\xeat \xe0 l'emploi "),e.j41(19,"code"),e.EFF(20,"@nestjs/sequelize"),e.k0s(),e.EFF(21,". Pour en savoir plus, voir "),e.j41(22,"a",13),e.EFF(23,"ici"),e.k0s(),e.EFF(24,".\n"),e.k0s(),e.j41(25,"p")(26,"a",14),e.EFF(27,"Sequelize"),e.k0s(),e.EFF(28," est un ORM (Object Relational Mapper) populaire \xe9crit en JavaScript classique, mais il existe un "),e.j41(29,"a",15),e.EFF(30,"sequelize-typescript"),e.k0s(),e.EFF(31," wrapper TypeScript qui fournit un ensemble de d\xe9corateurs et d'autres extras pour le sequelize de base."),e.k0s(),e.j41(32,"h4",16)(33,"span"),e.EFF(34,"Pour commencer"),e.k0s()(),e.j41(35,"p"),e.EFF(36,"Pour commencer l'aventure avec cette biblioth\xe8que, nous devons installer les d\xe9pendances suivantes :"),e.k0s(),e.j41(37,"pre")(38,"code",17),e.EFF(39,"\n$ npm install --save sequelize sequelize-typescript mysql2\n$ npm install --save-dev @types/sequelize\n"),e.k0s()(),e.j41(40,"p"),e.EFF(41,"La premi\xe8re \xe9tape est de cr\xe9er une instance "),e.j41(42,"strong"),e.EFF(43,"Sequelize"),e.k0s(),e.EFF(44," avec un objet options pass\xe9 dans le constructeur. Nous devons \xe9galement ajouter tous les mod\xe8les (l'alternative est d'utiliser la propri\xe9t\xe9 "),e.j41(45,"code"),e.EFF(46,"modelPaths"),e.k0s(),e.EFF(47,") et "),e.j41(48,"code"),e.EFF(49,"sync()"),e.k0s(),e.EFF(50," nos tables de base de donn\xe9es."),e.k0s(),e.j41(51,"app-copy-button",18)(52,"span",19),e.EFF(53),e.nI1(54,"extension"),e.nrm(55,"app-tabs",null,1),e.k0s(),e.j41(57,"pre")(58,"code",20),e.EFF(59,"\nimport { Sequelize } from 'sequelize-typescript';\nimport { Cat } from '../cats/cat.entity';\n\nexport const databaseProviders = [\n  {\n    provide: 'SEQUELIZE',\n    useFactory: async () => {\n      const sequelize = new Sequelize({\n        dialect: 'mysql',\n        host: 'localhost',\n        port: 3306,\n        username: 'root',\n        password: 'motdepasse',\n        database: 'nest',\n      });\n      sequelize.addModels([Cat]);\n      await sequelize.sync();\n      return sequelize;\n    },\n  },\n];\n"),e.k0s()()(),e.j41(60,"blockquote",21)(61,"strong"),e.EFF(62,"Astuce"),e.k0s(),e.EFF(63," En suivant les meilleures pratiques, nous avons d\xe9clar\xe9 le fournisseur personnalis\xe9 dans le fichier s\xe9par\xe9 qui a un suffixe "),e.j41(64,"code"),e.EFF(65,"*.providers.ts"),e.k0s(),e.EFF(66,".\n"),e.k0s(),e.j41(67,"p"),e.EFF(68,"Ensuite, nous devons exporter ces fournisseurs pour les rendre "),e.j41(69,"strong"),e.EFF(70,"accessibles"),e.k0s(),e.EFF(71," pour le reste de l'application."),e.k0s(),e.j41(72,"app-copy-button")(73,"pre")(74,"code",20),e.EFF(75,"\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n"),e.k0s()()(),e.j41(76,"p"),e.EFF(77,"Maintenant nous pouvons injecter l'objet "),e.j41(78,"code"),e.EFF(79,"Sequelize"),e.k0s(),e.EFF(80," en utilisant le d\xe9corateur "),e.j41(81,"code"),e.EFF(82,"@Inject()"),e.k0s(),e.EFF(83,". Chaque classe qui d\xe9pendrait du fournisseur asynchrone "),e.j41(84,"code"),e.EFF(85,"Sequelize"),e.k0s(),e.EFF(86," attendra jusqu'\xe0 ce qu'une "),e.j41(87,"code"),e.EFF(88,"Promise"),e.k0s(),e.EFF(89," soit r\xe9solue."),e.k0s(),e.j41(90,"h4",22)(91,"span"),e.EFF(92,"Injection de mod\xe8le"),e.k0s()(),e.j41(93,"p"),e.EFF(94,"Dans "),e.j41(95,"a",14),e.EFF(96,"Sequelize"),e.k0s(),e.EFF(97,", le "),e.j41(98,"strong"),e.EFF(99,"Mod\xe8le"),e.k0s(),e.EFF(100," d\xe9finit une table dans la base de donn\xe9es. Les instances de cette classe repr\xe9sentent une ligne de la base de donn\xe9es. Tout d'abord, nous avons besoin d'au moins une entit\xe9 :"),e.k0s(),e.j41(101,"app-copy-button",18)(102,"span",19),e.EFF(103),e.nI1(104,"extension"),e.nrm(105,"app-tabs",null,2),e.k0s(),e.j41(107,"pre")(108,"code",20),e.EFF(109,"\nimport { Table, Column, Model } from 'sequelize-typescript';\n\n@Table\nexport class Cat extends Model {\n  @Column\n  name: string;\n\n  @Column\n  age: number;\n\n  @Column\n  breed: string;\n}\n"),e.k0s()()(),e.j41(110,"p"),e.EFF(111,"L'entit\xe9 "),e.j41(112,"code"),e.EFF(113,"Cat"),e.k0s(),e.EFF(114," appartient au r\xe9pertoire "),e.j41(115,"code"),e.EFF(116,"cats"),e.k0s(),e.EFF(117,". Ce r\xe9pertoire repr\xe9sente le module "),e.j41(118,"code"),e.EFF(119,"Cats"),e.k0s(),e.EFF(120,". Il est maintenant temps de cr\xe9er un fournisseur "),e.j41(121,"strong"),e.EFF(122,"Repository"),e.k0s(),e.EFF(123," :"),e.k0s(),e.j41(124,"app-copy-button",18)(125,"span",19),e.EFF(126),e.nI1(127,"extension"),e.nrm(128,"app-tabs",null,3),e.k0s(),e.j41(130,"pre")(131,"code",20),e.EFF(132,"\nimport { Cat } from './cat.entity';\n\nexport const catsProviders = [\n  {\n    provide: 'CATS_REPOSITORY',\n    useValue: Cat,\n  },\n];\n"),e.k0s()()(),e.j41(133,"blockquote",23)(134,"strong"),e.EFF(135,"Attention"),e.k0s(),e.EFF(136," Dans les applications r\xe9elles, vous devriez \xe9viter les "),e.j41(137,"strong"),e.EFF(138,"magic strings"),e.k0s(),e.EFF(139,". "),e.j41(140,"code"),e.EFF(141,"CATS_REPOSITORY"),e.k0s(),e.EFF(142," et "),e.j41(143,"code"),e.EFF(144,"SEQUELIZE"),e.k0s(),e.EFF(145," doivent \xeatre conserv\xe9s dans le fichier "),e.j41(146,"code"),e.EFF(147,"constants.ts"),e.k0s(),e.EFF(148," s\xe9par\xe9.\n"),e.k0s(),e.j41(149,"p"),e.EFF(150,"Dans Sequelize, nous utilisons des m\xe9thodes statiques pour manipuler les donn\xe9es, et nous avons donc cr\xe9\xe9 un "),e.j41(151,"strong"),e.EFF(152,"alias"),e.k0s(),e.EFF(153," ici."),e.k0s(),e.j41(154,"p"),e.EFF(155,"Maintenant nous pouvons injecter le "),e.j41(156,"code"),e.EFF(157,"CATS_REPOSITORY"),e.k0s(),e.EFF(158," dans le "),e.j41(159,"code"),e.EFF(160,"CatsService"),e.k0s(),e.EFF(161," en utilisant le d\xe9corateur "),e.j41(162,"code"),e.EFF(163,"@Inject()"),e.k0s(),e.EFF(164," :"),e.k0s(),e.j41(165,"app-copy-button",18)(166,"span",19),e.EFF(167),e.nI1(168,"extension"),e.nrm(169,"app-tabs",null,4),e.k0s(),e.j41(171,"pre")(172,"code",20),e.EFF(173,"\nimport { Injectable, Inject } from '@nestjs/common';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { Cat } from './cat.entity';\n\n@Injectable()\nexport class CatsService {\n  constructor(\n    @Inject('CATS_REPOSITORY')\n    private catsRepository: typeof Cat\n  ) {}\n\n  async findAll(): Promise<Cat[]> {\n    return this.catsRepository.findAll<Cat>();\n  }\n}\n"),e.k0s()()(),e.j41(174,"p"),e.EFF(175,"La connexion \xe0 la base de donn\xe9es est "),e.j41(176,"strong"),e.EFF(177,"asynchrone"),e.k0s(),e.EFF(178,", mais Nest rend ce processus compl\xe8tement invisible pour l'utilisateur final. Le fournisseur "),e.j41(179,"code"),e.EFF(180,"CATS_REPOSITORY"),e.k0s(),e.EFF(181," attend la connexion \xe0 la base de donn\xe9es, et le "),e.j41(182,"code"),e.EFF(183,"CatsService"),e.k0s(),e.EFF(184," est retard\xe9 jusqu'\xe0 ce que le r\xe9f\xe9rentiel soit pr\xeat \xe0 \xeatre utilis\xe9. L'application enti\xe8re peut d\xe9marrer lorsque chaque classe est instanci\xe9e."),e.k0s(),e.j41(185,"p"),e.EFF(186,"Voici la version finale de "),e.j41(187,"code"),e.EFF(188,"CatsModule"),e.k0s(),e.EFF(189," :"),e.k0s(),e.j41(190,"app-copy-button",18)(191,"span",19),e.EFF(192),e.nI1(193,"extension"),e.nrm(194,"app-tabs",null,5),e.k0s(),e.j41(196,"pre")(197,"code",20),e.EFF(198,"\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { catsProviders } from './cats.providers';\nimport { DatabaseModule } from '../database/database.module';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [CatsController],\n  providers: [\n    CatsService,\n    ...catsProviders,\n  ],\n})\nexport class CatsModule {}\n"),e.k0s()()(),e.j41(199,"blockquote",21)(200,"strong"),e.EFF(201,"Astuce"),e.k0s(),e.EFF(202," N'oubliez pas d'importer le "),e.j41(203,"code"),e.EFF(204,"CatsModule"),e.k0s(),e.EFF(205," dans la racine "),e.j41(206,"code"),e.EFF(207,"AppModule"),e.k0s(),e.EFF(208,".\n"),e.k0s()()),2&t){const r=e.sdS(56),u=e.sdS(106),i=e.sdS(129),c=e.sdS(170),a=e.sdS(195);e.R7$(53),e.SpI(" ",e.i5U(54,5,"database.providers",r.isJsActive),"\n"),e.R7$(50),e.SpI(" ",e.i5U(104,8,"cat.entity",u.isJsActive),"\n"),e.R7$(23),e.SpI(" ",e.i5U(127,11,"cats.providers",i.isJsActive),"\n"),e.R7$(41),e.SpI(" ",e.i5U(168,14,"cats.service",c.isJsActive),"\n"),e.R7$(25),e.SpI(" ",e.i5U(193,17,"cats.module",a.isJsActive),"\n")}},dependencies:[v.O,l.a,d.z,f.M],encapsulation:2,changeDetection:0})}return s})(),O=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-sql-typeorm"]],features:[e.Vt3],decls:223,vars:24,consts:[["contentReference",""],["app55c00aea703a69f29dee42b7059560421757868f",""],["app3cf2a13a7e2203852addcc4e60dcf06807a4999c",""],["app70c33259c3b0e87827b562bdd400ddfdb1c8ecd6",""],["appdda63db31480cdd442bda1d15cde3dbc796afbc3",""],["appb74de4c0d0776dab1eca46b390bb917a326783e6",""],["app1ac2f1ce89678cc586f62c45e1c199ddd58135b6",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/sql-typeorm.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","sql-typeorm"],["id","ce-chapitre-ne-sapplique-uniquement-\xe0-typescript"],[1,""],["routerLink","/techniques/sql"],["rel","nofollow","target","_blank","href","https://github.com/typeorm/typeorm"],["appAnchor","","id","pour-commencer"],[1,"language-bash"],["routerLink","/fundamentals/async-components"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"warning"],[1,"info"],["appAnchor","","id","repository-pattern"]],template:function(t,o){if(1&t&&(e.j41(0,"div",7,0)(2,"div",8)(3,"a",9),e.nrm(4,"i",10),e.k0s()(),e.j41(5,"h3",11),e.EFF(6,"SQL (TypeORM)"),e.k0s(),e.j41(7,"h5",12),e.EFF(8,"Ce chapitre ne s'applique uniquement \xe0 TypeScript"),e.k0s(),e.j41(9,"blockquote",13)(10,"strong"),e.EFF(11,"Warning"),e.k0s(),e.j41(12,"strong"),e.EFF(13,"Attention"),e.k0s(),e.EFF(14," Dans cet article, vous apprendrez comment cr\xe9er un "),e.j41(15,"code"),e.EFF(16,"DatabaseModule"),e.k0s(),e.EFF(17," bas\xe9 sur le paquet "),e.j41(18,"strong"),e.EFF(19,"TypeORM"),e.k0s(),e.EFF(20," package \xe0 partir de z\xe9ro en utilisant un m\xe9canisme de fournisseurs personnalis\xe9s. En cons\xe9quence, cette technique contient beaucoup de surcharge que vous pouvez \xe9viter en utilisant le package d\xe9di\xe9 et pr\xeat \xe0 l'emploi "),e.j41(21,"code"),e.EFF(22,"@nestjs/typeorm"),e.k0s(),e.EFF(23,". Pour en savoir plus, voir "),e.j41(24,"a",14),e.EFF(25,"ici"),e.k0s(),e.EFF(26,".\n"),e.k0s(),e.j41(27,"p")(28,"a",15),e.EFF(29,"TypeORM"),e.k0s(),e.EFF(30," est sans aucun doute l'ORM (Object Relational Mapper) le plus mature disponible dans le monde node.js. Comme il est \xe9crit en TypeScript, il fonctionne tr\xe8s bien avec le framework Nest."),e.k0s(),e.j41(31,"h4",16)(32,"span"),e.EFF(33,"Pour commencer"),e.k0s()(),e.j41(34,"p"),e.EFF(35,"Pour commencer l'aventure avec cette biblioth\xe8que, nous devons installer toutes les d\xe9pendances n\xe9cessaires :"),e.k0s(),e.j41(36,"pre")(37,"code",17),e.EFF(38,"\n$ npm install --save typeorm mysql2\n"),e.k0s()(),e.j41(39,"p"),e.EFF(40,"La premi\xe8re \xe9tape que nous devons faire est d'\xe9tablir la connexion avec notre base de donn\xe9es en utilisant la classe "),e.j41(41,"code"),e.EFF(42,"new DataSource().initialize()"),e.k0s(),e.EFF(43," import\xe9e du package "),e.j41(44,"code"),e.EFF(45,"typeorm"),e.k0s(),e.EFF(46,". La fonction "),e.j41(47,"code"),e.EFF(48,"initialize()"),e.k0s(),e.EFF(49," retourne une "),e.j41(50,"code"),e.EFF(51,"Promise"),e.k0s(),e.EFF(52,", et donc nous devons cr\xe9er un "),e.j41(53,"a",18),e.EFF(54,"fournisseur async"),e.k0s(),e.EFF(55,"."),e.k0s(),e.j41(56,"app-copy-button",19)(57,"span",20),e.EFF(58),e.nI1(59,"extension"),e.nrm(60,"app-tabs",null,1),e.k0s(),e.j41(62,"pre")(63,"code",21),e.EFF(64,"\nimport { DataSource } from 'typeorm';\n\nexport const databaseProviders = [\n  {\n    provide: 'DATA_SOURCE',\n    useFactory: async () => {\n      const dataSource = new DataSource({\n        type: 'mysql',\n        host: 'localhost',\n        port: 3306,\n        username: 'root',\n        password: 'root',\n        database: 'test',\n        entities: [\n            __dirname + '/../**/*.entity{.ts,.js}',\n        ],\n        synchronize: true,\n      });\n\n      return dataSource.initialize();\n    },\n  },\n];\n"),e.k0s()()(),e.j41(65,"blockquote",22)(66,"strong"),e.EFF(67,"Attention"),e.k0s(),e.EFF(68," Le param\xe8tre "),e.j41(69,"code"),e.EFF(70,"synchronize : true"),e.k0s(),e.EFF(71," ne doit pas \xeatre utilis\xe9 en production - sinon vous pouvez perdre des donn\xe9es de production.\n"),e.k0s(),e.j41(72,"blockquote",23)(73,"strong"),e.EFF(74,"Astuce"),e.k0s(),e.EFF(75," En suivant les meilleures pratiques, nous avons d\xe9clar\xe9 le fournisseur personnalis\xe9 dans le fichier s\xe9par\xe9 qui a un suffixe "),e.j41(76,"code"),e.EFF(77,"*.providers.ts"),e.k0s(),e.EFF(78,".\n"),e.k0s(),e.j41(79,"p"),e.EFF(80,"Ensuite, nous devons exporter ces fournisseurs pour les rendre "),e.j41(81,"strong"),e.EFF(82,"accessibles"),e.k0s(),e.EFF(83," au reste de l'application."),e.k0s(),e.j41(84,"app-copy-button",19)(85,"span",20),e.EFF(86),e.nI1(87,"extension"),e.nrm(88,"app-tabs",null,2),e.k0s(),e.j41(90,"pre")(91,"code",21),e.EFF(92,"\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n"),e.k0s()()(),e.j41(93,"p"),e.EFF(94,"Maintenant nous pouvons injecter l'objet "),e.j41(95,"code"),e.EFF(96,"DATA_SOURCE"),e.k0s(),e.EFF(97," en utilisant le d\xe9corateur "),e.j41(98,"code"),e.EFF(99,"@Inject()"),e.k0s(),e.EFF(100,". Chaque classe qui d\xe9pendrait du fournisseur asynchrone "),e.j41(101,"code"),e.EFF(102,"DATA_SOURCE"),e.k0s(),e.EFF(103," attendra jusqu'\xe0 ce qu'une "),e.j41(104,"code"),e.EFF(105,"Promise"),e.k0s(),e.EFF(106," soit r\xe9solue."),e.k0s(),e.j41(107,"h4",24)(108,"span"),e.EFF(109,"Repository pattern"),e.k0s()(),e.j41(110,"p"),e.EFF(111,"Le "),e.j41(112,"a",15),e.EFF(113,"TypeORM"),e.k0s(),e.EFF(114," prend en charge le Repository pattern, de sorte que chaque entit\xe9 dispose de son propre Repository. Ces Repositorys peuvent \xeatre obtenus \xe0 partir de la connexion \xe0 la base de donn\xe9es."),e.k0s(),e.j41(115,"p"),e.EFF(116,"Mais tout d'abord, nous avons besoin d'au moins une entit\xe9. Nous allons r\xe9utiliser l'entit\xe9 "),e.j41(117,"code"),e.EFF(118,"Photo"),e.k0s(),e.EFF(119," de la documentation officielle."),e.k0s(),e.j41(120,"app-copy-button",19)(121,"span",20),e.EFF(122),e.nI1(123,"extension"),e.nrm(124,"app-tabs",null,3),e.k0s(),e.j41(126,"pre")(127,"code",21),e.EFF(128,"\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Photo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 500 })\n  name: string;\n\n  @Column('text')\n  description: string;\n\n  @Column()\n  filename: string;\n\n  @Column('int')\n  views: number;\n\n  @Column()\n  isPublished: boolean;\n}\n"),e.k0s()()(),e.j41(129,"p"),e.EFF(130,"L'entit\xe9 "),e.j41(131,"code"),e.EFF(132,"Photo"),e.k0s(),e.EFF(133," appartient au r\xe9pertoire "),e.j41(134,"code"),e.EFF(135,"photo"),e.k0s(),e.EFF(136,". Ce r\xe9pertoire repr\xe9sente le "),e.j41(137,"code"),e.EFF(138,"PhotoModule"),e.k0s(),e.EFF(139,". Maintenant, cr\xe9ons un fournisseur "),e.j41(140,"strong"),e.EFF(141,"Repository"),e.k0s(),e.EFF(142," :"),e.k0s(),e.j41(143,"app-copy-button",19)(144,"span",20),e.EFF(145),e.nI1(146,"extension"),e.nrm(147,"app-tabs",null,4),e.k0s(),e.j41(149,"pre")(150,"code",21),e.EFF(151,"\nimport { DataSource } from 'typeorm';\nimport { Photo } from './photo.entity';\n\nexport const photoProviders = [\n  {\n    provide: 'PHOTO_REPOSITORY',\n    useFactory: (dataSource: DataSource) => dataSource.getRepository(Photo),\n    inject: ['DATA_SOURCE'],\n  },\n];\n"),e.k0s()()(),e.j41(152,"blockquote",22)(153,"strong"),e.EFF(154,"Attention"),e.k0s(),e.EFF(155," Dans les applications r\xe9elles, vous devriez \xe9viter les "),e.j41(156,"strong"),e.EFF(157,"magic strings"),e.k0s(),e.EFF(158,". Les deux fichiers "),e.j41(159,"code"),e.EFF(160,"PHOTO_REPOSITORY"),e.k0s(),e.EFF(161," et "),e.j41(162,"code"),e.EFF(163,"DATA_SOURCE"),e.k0s(),e.EFF(164," doivent \xeatre conserv\xe9s dans le fichier s\xe9par\xe9 "),e.j41(165,"code"),e.EFF(166,"constants.ts"),e.k0s(),e.EFF(167,".\n"),e.k0s(),e.j41(168,"p"),e.EFF(169,"Nous pouvons maintenant injecter le "),e.j41(170,"code"),e.EFF(171,"Repository<Photo>"),e.k0s(),e.EFF(172," dans le "),e.j41(173,"code"),e.EFF(174,"PhotoService"),e.k0s(),e.EFF(175," en utilisant le d\xe9corateur "),e.j41(176,"code"),e.EFF(177,"@Inject()"),e.k0s(),e.EFF(178," :"),e.k0s(),e.j41(179,"app-copy-button",19)(180,"span",20),e.EFF(181),e.nI1(182,"extension"),e.nrm(183,"app-tabs",null,5),e.k0s(),e.j41(185,"pre")(186,"code",21),e.EFF(187,"\nimport { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Photo } from './photo.entity';\n\n@Injectable()\nexport class PhotoService {\n  constructor(\n    @Inject('PHOTO_REPOSITORY')\n    private photoRepository: Repository<Photo>,\n  ) {}\n\n  async findAll(): Promise<Photo[]> {\n    return this.photoRepository.find();\n  }\n}\n"),e.k0s()()(),e.j41(188,"p"),e.EFF(189,"La connexion \xe0 la base de donn\xe9es est "),e.j41(190,"strong"),e.EFF(191,"asynchrone"),e.k0s(),e.EFF(192,", mais Nest rend ce processus compl\xe8tement invisible pour l'utilisateur final. Le "),e.j41(193,"code"),e.EFF(194,"PhotoRepository"),e.k0s(),e.EFF(195," attend la connexion \xe0 la base de donn\xe9es, et le "),e.j41(196,"code"),e.EFF(197,"PhotoService"),e.k0s(),e.EFF(198," est retard\xe9 jusqu'\xe0 ce que le repository soit pr\xeat \xe0 \xeatre utilis\xe9. L'application enti\xe8re peut d\xe9marrer lorsque chaque classe est instanci\xe9e."),e.k0s(),e.j41(199,"p"),e.EFF(200,"Voici un "),e.j41(201,"code"),e.EFF(202,"PhotoModule"),e.k0s(),e.EFF(203," final :"),e.k0s(),e.j41(204,"app-copy-button",19)(205,"span",20),e.EFF(206),e.nI1(207,"extension"),e.nrm(208,"app-tabs",null,6),e.k0s(),e.j41(210,"pre")(211,"code",21),e.EFF(212,"\nimport { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { photoProviders } from './photo.providers';\nimport { PhotoService } from './photo.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [\n    ...photoProviders,\n    PhotoService,\n  ],\n})\nexport class PhotoModule {}\n"),e.k0s()()(),e.j41(213,"blockquote",23)(214,"strong"),e.EFF(215,"Astuce"),e.k0s(),e.EFF(216," N'oubliez pas d'importer le "),e.j41(217,"code"),e.EFF(218,"PhotoModule"),e.k0s(),e.EFF(219," dans la racine "),e.j41(220,"code"),e.EFF(221,"AppModule"),e.k0s(),e.EFF(222,".\n"),e.k0s()()),2&t){const r=e.sdS(61),u=e.sdS(89),i=e.sdS(125),c=e.sdS(148),a=e.sdS(184),F=e.sdS(209);e.R7$(58),e.SpI(" ",e.i5U(59,6,"database.providers",r.isJsActive),"\n"),e.R7$(28),e.SpI(" ",e.i5U(87,9,"database.module",u.isJsActive),"\n"),e.R7$(36),e.SpI(" ",e.i5U(123,12,"photo.entity",i.isJsActive),"\n"),e.R7$(23),e.SpI(" ",e.i5U(146,15,"photo.providers",c.isJsActive),"\n"),e.R7$(36),e.SpI(" ",e.i5U(182,18,"photo.service",a.isJsActive),"\n"),e.R7$(25),e.SpI(" ",e.i5U(207,21,"photo.module",F.isJsActive),"\n")}},dependencies:[v.O,l.a,d.z,k.Wk,f.M],encapsulation:2,changeDetection:0})}return s})(),N=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-terminus"]],features:[e.Vt3],decls:650,vars:100,consts:[["contentReference",""],["app283d802285710b467792f0ae82f53fe910c68e06",""],["app2a9a59907f1101c855c836d3b9ed01b21d658dcb",""],["app2e6edcdf784a5f4c3a641811973232118c53c6ff",""],["app1d56efe435780177650dc047c3b0abf2b787292e",""],["appa38c5a3a4af99646d63c26eeccb49254289b7340",""],["app2e7c22459a01b8a4ebe2aed1dc572df48203ada0",""],["app2d58d15112cf0659c4b22ac8c8d4fac98d6d4dbf",""],["appe24871aef3aa56734a3984fae2d5d09c6e51040c",""],["app2b946b9a08ae249f4e1fa85c524b8a205ab263f2",""],["app6c8b30900d618da12c2fbb22621796c2f699e41d",""],["appf977f9a2fa3bd74c2f669340c61d3d9aee6497f6",""],["appf7f8757ae676fa4797f6abc7395fbe1e13c07778",""],["appdca0a85fd36ec82f153ae996cced61454ab8a3fb",""],["app7366506501de7b69bf8871a0abb36e397ff7182d",""],["app89008a8c2ea358c318a0c4a713344eaaf7b17214",""],["appafc2d65087cabac78320555d2e0e3f6b44449ec9",""],["app54f4fec3b789bca1f5c58993bc2b54a69c6e0625",""],["app073eda7cea6de5f3652fd6fb5c6e407066e534b7",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/terminus.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","contr\xf4les-de-sant\xe9-terminus"],["rel","nofollow","target","_blank","href","https://kubernetes.io/"],["appAnchor","","id","pour-commencer"],[1,"language-bash"],["appAnchor","","id","mise-en-place-dun-contr\xf4le-de-sant\xe9"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/terminus"],[1,"info"],["routerLink","cli/overview"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],["routerLink","/controllers"],["href","fundamentals/lifecycle-events#arr%C3%AAt-de-lapplication"],["appAnchor","","id","contr\xf4le-de-sant\xe9-http"],[1,"language-json"],["id","contr\xf4le-de-codes-de-r\xe9ponse-http-sp\xe9cifiques"],["appAnchor","","id","indicateur-de-sant\xe9-typeorm"],["routerLink","/techniques/sql"],["href","techniques/database#bases-de-donn%C3%A9es-multiples"],["appAnchor","","id","indicateur-de-sant\xe9-du-disque"],["appAnchor","","id","indicateur-de-sant\xe9-de-la-m\xe9moire"],["appAnchor","","id","indicateur-de-sant\xe9-personnalis\xe9"],["appAnchor","","id","journalisation"],["href","/techniques/logger#injection-dun-logger-personnalis%C3%A9"],["align","left"],["src","/assets/Terminus_Error_Log_Json.png"],["src","/assets/Terminus_Error_Log_Pretty.png"],["appAnchor","","id","d\xe9lai-darr\xeat-en-douceur"],["appAnchor","","id","plus-dexemples"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/terminus/tree/master/sample"]],template:function(t,o){if(1&t&&(e.j41(0,"div",19,0)(2,"div",20)(3,"a",21),e.nrm(4,"i",22),e.k0s()(),e.j41(5,"h3",23),e.EFF(6,"Contr\xf4les de sant\xe9 (Terminus)"),e.k0s(),e.j41(7,"p"),e.EFF(8,"L'int\xe9gration de Terminus vous fournit des contr\xf4les de sant\xe9 "),e.j41(9,"strong"),e.EFF(10,"readiness/liveness"),e.k0s(),e.EFF(11,". Les contr\xf4les de sant\xe9 sont cruciaux lorsqu'il s'agit de configurations backend complexes. En bref, un contr\xf4le de sant\xe9 dans le domaine du d\xe9veloppement web consiste g\xe9n\xe9ralement en une adresse sp\xe9ciale, par exemple, "),e.j41(12,"code"),e.EFF(13,"https://my-website.com/health/readiness"),e.k0s(),e.EFF(14,".\nUn service ou un composant de votre infrastructure (par exemple, "),e.j41(15,"a",24),e.EFF(16,"Kubernetes"),e.k0s(),e.EFF(17,") v\xe9rifie cette adresse en permanence. En fonction du code d'\xe9tat HTTP renvoy\xe9 par une requ\xeate "),e.j41(18,"code"),e.EFF(19,"GET"),e.k0s(),e.EFF(20,' \xe0 cette adresse, le service prendra des mesures lorsqu\'il recevra une r\xe9ponse "malsaine".\n\xc9tant donn\xe9 que la d\xe9finition de "sain" ou "malsain" varie selon le type de service que vous fournissez, l\'int\xe9gration '),e.j41(21,"strong"),e.EFF(22,"Terminus"),e.k0s(),e.EFF(23," vous aide avec un ensemble d'"),e.j41(24,"strong"),e.EFF(25,"indicateurs de sant\xe9"),e.k0s(),e.EFF(26,"."),e.k0s(),e.j41(27,"p"),e.EFF(28,"Par exemple, si votre serveur web utilise MongoDB pour stocker ses donn\xe9es, il serait vital de savoir si MongoDB est toujours op\xe9rationnel. Dans ce cas, vous pouvez utiliser le "),e.j41(29,"code"),e.EFF(30,"MongooseHealthIndicator"),e.k0s(),e.EFF(31,". Si elle est configur\xe9e correctement - nous y reviendrons plus tard - votre adresse de contr\xf4le de sant\xe9 renverra un code de statut HTTP sain ou malsain, selon que MongoDB est en cours d'ex\xe9cution ou non."),e.k0s(),e.j41(32,"h4",25)(33,"span"),e.EFF(34,"Pour commencer"),e.k0s()(),e.j41(35,"p"),e.EFF(36,"Pour commencer avec "),e.j41(37,"code"),e.EFF(38,"@nestjs/terminus"),e.k0s(),e.EFF(39,", nous devons installer les d\xe9pendances n\xe9cessaires."),e.k0s(),e.j41(40,"pre")(41,"code",26),e.EFF(42,"\n$ npm install --save @nestjs/terminus\n"),e.k0s()(),e.j41(43,"h4",27)(44,"span"),e.EFF(45,"Mise en place d'un contr\xf4le de sant\xe9"),e.k0s()(),e.j41(46,"p"),e.EFF(47,"Un contr\xf4le de sant\xe9 repr\xe9sente un r\xe9sum\xe9 des "),e.j41(48,"strong"),e.EFF(49,"indicateurs de sant\xe9"),e.k0s(),e.EFF(50,". Un indicateur de sant\xe9 ex\xe9cute un contr\xf4le d'un service, pour savoir s'il est dans un \xe9tat sain ou malsain. Un contr\xf4le de sant\xe9 est positif si tous les indicateurs de sant\xe9 assign\xe9s sont op\xe9rationnels. Parce que beaucoup d'applications auront besoin d'indicateurs de sant\xe9 similaires, "),e.j41(51,"a",28)(52,"code"),e.EFF(53,"@nestjs/terminus"),e.k0s()(),e.EFF(54," fournit un ensemble d'indicateurs pr\xe9d\xe9finis, tels que :"),e.k0s(),e.j41(55,"ul")(56,"li")(57,"code"),e.EFF(58,"HttpHealthIndicator"),e.k0s()(),e.j41(59,"li")(60,"code"),e.EFF(61,"TypeOrmHealthIndicator"),e.k0s()(),e.j41(62,"li")(63,"code"),e.EFF(64,"MongooseHealthIndicator"),e.k0s()(),e.j41(65,"li")(66,"code"),e.EFF(67,"SequelizeHealthIndicator"),e.k0s()(),e.j41(68,"li")(69,"code"),e.EFF(70,"MikroOrmHealthIndicator"),e.k0s()(),e.j41(71,"li")(72,"code"),e.EFF(73,"PrismaHealthIndicator"),e.k0s()(),e.j41(74,"li")(75,"code"),e.EFF(76,"MicroserviceHealthIndicator"),e.k0s()(),e.j41(77,"li")(78,"code"),e.EFF(79,"GRPCHealthIndicator"),e.k0s()(),e.j41(80,"li")(81,"code"),e.EFF(82,"MemoryHealthIndicator"),e.k0s()(),e.j41(83,"li")(84,"code"),e.EFF(85,"DiskHealthIndicator"),e.k0s()()(),e.j41(86,"p"),e.EFF(87,"Pour commencer notre premier contr\xf4le de sant\xe9, cr\xe9ons le module "),e.j41(88,"code"),e.EFF(89,"HealthModule"),e.k0s(),e.EFF(90," et importons-y le module "),e.j41(91,"code"),e.EFF(92,"TerminusModule"),e.k0s(),e.EFF(93," dans son tableau d'importations."),e.k0s(),e.j41(94,"blockquote",29)(95,"strong"),e.EFF(96,"Astuce"),e.k0s(),e.EFF(97," Pour cr\xe9er le module \xe0 l'aide de la "),e.j41(98,"a",30),e.EFF(99,"CLI Nest"),e.k0s(),e.EFF(100,", il suffit d'ex\xe9cuter la commande "),e.j41(101,"code"),e.EFF(102,"$ nest g module health"),e.k0s(),e.EFF(103,".\n"),e.k0s(),e.j41(104,"app-copy-button",31)(105,"span",32),e.EFF(106),e.nI1(107,"extension"),e.nrm(108,"app-tabs",null,1),e.k0s(),e.j41(110,"pre")(111,"code",33),e.EFF(112,"\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule]\n})\nexport class HealthModule {}\n"),e.k0s()()(),e.j41(113,"p"),e.EFF(114,"Nos contr\xf4les de sant\xe9 peuvent \xeatre ex\xe9cut\xe9s \xe0 l'aide d'un "),e.j41(115,"a",34),e.EFF(116,"contr\xf4leur"),e.k0s(),e.EFF(117,", qui peut \xeatre facilement configur\xe9 \xe0 l'aide du "),e.j41(118,"a",30),e.EFF(119,"Nest CLI"),e.k0s(),e.EFF(120,"."),e.k0s(),e.j41(121,"pre")(122,"code",26),e.EFF(123,"\n$ nest g controller health\n"),e.k0s()(),e.j41(124,"blockquote",29)(125,"strong"),e.EFF(126,"Info"),e.k0s(),e.EFF(127," Il est fortement recommand\xe9 d'activer les hooks d'arr\xeat dans votre application. L'int\xe9gration Terminus utilise cet \xe9v\xe9nement du cycle de vie s'il est activ\xe9. Pour en savoir plus sur les hooks d'arr\xeat "),e.j41(128,"a",35),e.EFF(129,"ici"),e.k0s(),e.EFF(130,".\n"),e.k0s(),e.j41(131,"h4",36)(132,"span"),e.EFF(133,"Contr\xf4le de sant\xe9 HTTP"),e.k0s()(),e.j41(134,"p"),e.EFF(135,"Une fois que nous avons install\xe9 "),e.j41(136,"code"),e.EFF(137,"@nestjs/terminus"),e.k0s(),e.EFF(138,", import\xe9 notre "),e.j41(139,"code"),e.EFF(140,"TerminusModule"),e.k0s(),e.EFF(141," et cr\xe9\xe9 un nouveau contr\xf4leur, nous sommes pr\xeats \xe0 cr\xe9er un contr\xf4le de sant\xe9."),e.k0s(),e.j41(142,"p"),e.EFF(143,"Le "),e.j41(144,"code"),e.EFF(145,"HTTPHealthIndicator"),e.k0s(),e.EFF(146," n\xe9cessite le paquetage "),e.j41(147,"code"),e.EFF(148,"@nestjs/axios"),e.k0s(),e.EFF(149,", assurez-vous donc de l'avoir install\xe9 :"),e.k0s(),e.j41(150,"pre")(151,"code",26),e.EFF(152,"\n$ npm i --save @nestjs/axios axios\n"),e.k0s()(),e.j41(153,"p"),e.EFF(154,"Nous pouvons maintenant configurer notre "),e.j41(155,"code"),e.EFF(156,"HealthController"),e.k0s(),e.EFF(157,":"),e.k0s(),e.j41(158,"app-copy-button",31)(159,"span",32),e.EFF(160),e.nI1(161,"extension"),e.nrm(162,"app-tabs",null,2),e.k0s(),e.j41(164,"pre")(165,"code",33),e.EFF(166,"\nimport { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n    ]);\n  }\n}\n"),e.k0s()(),e.j41(167,"pre")(168,"code",33),e.EFF(169,"\nimport { Controller, Dependencies, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\n@Dependencies(HealthCheckService, HttpHealthIndicator)\nexport class HealthController {\n  constructor(\n    private health,\n    private http,\n  ) { }\n\n  @Get()\n  @HealthCheck()\n  healthCheck() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n    ])\n  }\n}\n"),e.k0s()()(),e.j41(170,"app-copy-button",31)(171,"span",32),e.EFF(172),e.nI1(173,"extension"),e.nrm(174,"app-tabs",null,3),e.k0s(),e.j41(176,"pre")(177,"code",33),e.EFF(178,"\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n"),e.k0s()(),e.j41(179,"pre")(180,"code",33),e.EFF(181,"\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n"),e.k0s()()(),e.j41(182,"p"),e.EFF(183,"Notre contr\xf4le de sant\xe9 va maintenant envoyer une requ\xeate "),e.j41(184,"em"),e.EFF(185,"GET"),e.k0s(),e.EFF(186," \xe0 l'adresse "),e.j41(187,"code"),e.EFF(188,"https://docs.nestjs.com"),e.k0s(),e.EFF(189,". Si nous obtenons une r\xe9ponse saine de cette adresse, notre route \xe0 "),e.j41(190,"code"),e.EFF(191,"http://localhost:3000/health"),e.k0s(),e.EFF(192," retournera l'objet suivant avec un code de statut 200."),e.k0s(),e.j41(193,"pre")(194,"code",37),e.EFF(195,'\n{\n  "status": "ok",\n  "info": {\n    "nestjs-docs": {\n      "status": "up"\n    }\n  },\n  "error": {},\n  "details": {\n    "nestjs-docs": {\n      "status": "up"\n    }\n  }\n}\n'),e.k0s()(),e.j41(196,"p"),e.EFF(197,"L'interface de cet objet de r\xe9ponse est accessible depuis le paquet "),e.j41(198,"code"),e.EFF(199,"@nestjs/terminus"),e.k0s(),e.EFF(200," avec l'interface "),e.j41(201,"code"),e.EFF(202,"HealthCheckResult"),e.k0s(),e.EFF(203,"."),e.k0s(),e.j41(204,"table"),e.nrm(205,"thead"),e.j41(206,"tbody")(207,"tr")(208,"td")(209,"code"),e.EFF(210,"status"),e.k0s()(),e.j41(211,"td"),e.EFF(212,"Si un indicateur de sant\xe9 a \xe9chou\xe9, le statut sera "),e.j41(213,"code"),e.EFF(214,"'error'"),e.k0s(),e.EFF(215,". Si l'application NestJS s'arr\xeate mais accepte toujours des requ\xeates HTTP, le contr\xf4le de sant\xe9 aura le statut "),e.j41(216,"code"),e.EFF(217,"'shutting_down'"),e.k0s(),e.EFF(218,"."),e.k0s(),e.j41(219,"td")(220,"code"),e.EFF(221,"'error' | 'ok' | 'shutting_down'"),e.k0s()()(),e.j41(222,"tr")(223,"td")(224,"code"),e.EFF(225,"info"),e.k0s()(),e.j41(226,"td"),e.EFF(227,"Objet contenant des informations sur chaque indicateur de sant\xe9 dont l'\xe9tat est "),e.j41(228,"code"),e.EFF(229,"'up'"),e.k0s(),e.EFF(230,', c\'est-\xe0-dire " sain ".'),e.k0s(),e.j41(231,"td")(232,"code"),e.EFF(233,"object"),e.k0s()()(),e.j41(234,"tr")(235,"td")(236,"code"),e.EFF(237,"error"),e.k0s()(),e.j41(238,"td"),e.EFF(239,"Objet contenant des informations sur chaque indicateur de sant\xe9 dont l'\xe9tat est "),e.j41(240,"code"),e.EFF(241,"'down'"),e.k0s(),e.EFF(242,', c\'est-\xe0-dire "malsain".'),e.k0s(),e.j41(243,"td")(244,"code"),e.EFF(245,"object"),e.k0s()()(),e.j41(246,"tr")(247,"td")(248,"code"),e.EFF(249,"details"),e.k0s()(),e.j41(250,"td"),e.EFF(251,"Objet contenant toutes les informations relatives \xe0 chaque indicateur de sant\xe9"),e.k0s(),e.j41(252,"td")(253,"code"),e.EFF(254,"object"),e.k0s()()()()(),e.j41(255,"h5",38),e.EFF(256,"Contr\xf4le de codes de r\xe9ponse HTTP sp\xe9cifiques"),e.k0s(),e.j41(257,"p"),e.EFF(258,"Dans certains cas, vous pouvez vouloir contr\xf4ler des crit\xe8res sp\xe9cifiques et valider la r\xe9ponse. Par exemple, supposons que "),e.j41(259,"code"),e.EFF(260,"https://my-external-service.com"),e.k0s(),e.EFF(261," renvoie un code de r\xe9ponse "),e.j41(262,"code"),e.EFF(263,"204"),e.k0s(),e.EFF(264,". Avec "),e.j41(265,"code"),e.EFF(266,"HttpHealthIndicator.responseCheck"),e.k0s(),e.EFF(267,", vous pouvez contr\xf4ler ce code de r\xe9ponse sp\xe9cifiquement et d\xe9terminer que tous les autres codes sont malsains."),e.k0s(),e.j41(268,"p"),e.EFF(269,"Dans le cas o\xf9 un autre code de r\xe9ponse que "),e.j41(270,"code"),e.EFF(271,"204"),e.k0s(),e.EFF(272," est retourn\xe9, l'exemple suivant serait malsain. Le troisi\xe8me param\xe8tre vous demande de fournir une fonction (sync ou async) qui retourne un bool\xe9en indiquant si la r\xe9ponse est consid\xe9r\xe9e comme saine ("),e.j41(273,"code"),e.EFF(274,"true"),e.k0s(),e.EFF(275,") ou malsaine ("),e.j41(276,"code"),e.EFF(277,"false"),e.k0s(),e.EFF(278,")."),e.k0s(),e.j41(279,"app-copy-button",31)(280,"span",32),e.EFF(281),e.nI1(282,"extension"),e.nrm(283,"app-tabs",null,4),e.k0s(),e.j41(285,"pre")(286,"code",33),e.EFF(287,"\n// Dans la classe `HealthController` (contr\xf4leur de sant\xe9)\n\n@Get()\n@HealthCheck()\ncheck() {\n  return this.health.check([\n    () =>\n      this.http.responseCheck(\n        'my-external-service',\n        'https://my-external-service.com',\n        (res) => res.status === 204,\n      ),\n  ]);\n}\n"),e.k0s()()(),e.j41(288,"h4",39)(289,"span"),e.EFF(290,"Indicateur de sant\xe9 TypeOrm"),e.k0s()(),e.j41(291,"p"),e.EFF(292,"Terminus offre la possibilit\xe9 d'ajouter des contr\xf4les de base de donn\xe9es \xe0 votre contr\xf4le de sant\xe9. Pour commencer \xe0 utiliser cet indicateur de sant\xe9, vous devez\nPour commencer \xe0 utiliser cet indicateur de sant\xe9, vous devriez lire le "),e.j41(293,"a",40),e.EFF(294,"chapitre Base de donn\xe9es"),e.k0s(),e.EFF(295," et vous assurer que la connexion \xe0 la base de donn\xe9es de votre application est bien \xe9tablie."),e.k0s(),e.j41(296,"blockquote",29)(297,"strong"),e.EFF(298,"Astuce"),e.k0s(),e.EFF(299," Dans les coulisses, le "),e.j41(300,"code"),e.EFF(301,"TypeOrmHealthIndicator"),e.k0s(),e.EFF(302," ex\xe9cute simplement une commande SQL "),e.j41(303,"code"),e.EFF(304,"SELECT 1"),e.k0s(),e.EFF(305," qui est souvent utilis\xe9e pour v\xe9rifier si la base de donn\xe9es est toujours vivante. Dans le cas o\xf9 vous utilisez une base de donn\xe9es Oracle, il utilise "),e.j41(306,"code"),e.EFF(307,"SELECT 1 FROM DUAL"),e.k0s(),e.EFF(308,".\n"),e.k0s(),e.j41(309,"app-copy-button",31)(310,"span",32),e.EFF(311),e.nI1(312,"extension"),e.nrm(313,"app-tabs",null,5),e.k0s(),e.j41(315,"pre")(316,"code",33),e.EFF(317,"\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.db.pingCheck('database'),\n    ]);\n  }\n}\n"),e.k0s()(),e.j41(318,"pre")(319,"code",33),e.EFF(320,"\n@Controller('health')\n@Dependencies(HealthCheckService, TypeOrmHealthIndicator)\nexport class HealthController {\n  constructor(\n    private health,\n    private db,\n  ) { }\n\n  @Get()\n  @HealthCheck()\n  healthCheck() {\n    return this.health.check([\n      () => this.db.pingCheck('database'),\n    ])\n  }\n}\n"),e.k0s()()(),e.j41(321,"p"),e.EFF(322,"Si votre base de donn\xe9es est accessible, vous devriez maintenant voir le r\xe9sultat JSON suivant lorsque vous demandez "),e.j41(323,"code"),e.EFF(324,"http://localhost:3000/health"),e.k0s(),e.EFF(325," avec une requ\xeate "),e.j41(326,"code"),e.EFF(327,"GET"),e.k0s(),e.EFF(328," :"),e.k0s(),e.j41(329,"pre")(330,"code",37),e.EFF(331,'\n{\n  "status": "ok",\n  "info": {\n    "database": {\n      "status": "up"\n    }\n  },\n  "error": {},\n  "details": {\n    "database": {\n      "status": "up"\n    }\n  }\n}\n'),e.k0s()(),e.j41(332,"p"),e.EFF(333,"Si votre application utilise "),e.j41(334,"a",41),e.EFF(335,"plusieurs bases de donn\xe9es"),e.k0s(),e.EFF(336,", vous devez injecter chaque connexion dans votre "),e.j41(337,"code"),e.EFF(338,"HealthController"),e.k0s(),e.EFF(339,". dans votre "),e.j41(340,"code"),e.EFF(341,"HealthController"),e.k0s(),e.EFF(342,". Ensuite, vous pouvez simplement passer la r\xe9f\xe9rence de la connexion au "),e.j41(343,"code"),e.EFF(344,"TypeOrmHealthIndicator"),e.k0s(),e.EFF(345,"."),e.k0s(),e.j41(346,"app-copy-button",31)(347,"span",32),e.EFF(348),e.nI1(349,"extension"),e.nrm(350,"app-tabs",null,6),e.k0s(),e.j41(352,"pre")(353,"code",33),e.EFF(354,"\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: TypeOrmHealthIndicator,\n    @InjectConnection('albumsConnection')\n    private albumsConnection: Connection,\n    @InjectConnection()\n    private defaultConnection: Connection,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.db.pingCheck('albums-database', { connection: this.albumsConnection }),\n      () => this.db.pingCheck('database', { connection: this.defaultConnection }),\n    ]);\n  }\n}\n"),e.k0s()()(),e.j41(355,"h4",42)(356,"span"),e.EFF(357,"Indicateur de sant\xe9 du disque"),e.k0s()(),e.j41(358,"p"),e.EFF(359,"Avec le "),e.j41(360,"code"),e.EFF(361,"DiskHealthIndicator"),e.k0s(),e.EFF(362," nous pouvons contr\xf4ler la quantit\xe9 de stockage utilis\xe9e. Pour commencer, assurez-vous d'injecter le "),e.j41(363,"code"),e.EFF(364,"DiskHealthIndicator"),e.k0s(),e.EFF(365," dans votre "),e.j41(366,"code"),e.EFF(367,"HealthController"),e.k0s(),e.EFF(368,". L'exemple suivant contr\xf4le le stockage utilis\xe9 du chemin "),e.j41(369,"code"),e.EFF(370,"/"),e.k0s(),e.EFF(371," (ou sous Windows vous pouvez utiliser `C:\\N-). Si cela d\xe9passe plus de 50% de l'espace de stockage total, il r\xe9pondra avec un bilan de sant\xe9 malsain."),e.k0s(),e.j41(372,"app-copy-button",31)(373,"span",32),e.EFF(374),e.nI1(375,"extension"),e.nrm(376,"app-tabs",null,7),e.k0s(),e.j41(378,"pre")(379,"code",33),e.EFF(380,"\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private readonly health: HealthCheckService,\n    private readonly disk: DiskHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.disk.checkStorage('storage', { path: '/', thresholdPercent: 0.5 }),\n    ]);\n  }\n}\n"),e.k0s()(),e.j41(381,"pre")(382,"code",33),e.EFF(383,"\n@Controller('health')\n@Dependencies(HealthCheckService, DiskHealthIndicator)\nexport class HealthController {\n  constructor(health, disk) {}\n\n  @Get()\n  @HealthCheck()\n  healthCheck() {\n    return this.health.check([\n      () => this.disk.checkStorage('storage', { path: '/', thresholdPercent: 0.5 }),\n    ])\n  }\n}\n"),e.k0s()()(),e.j41(384,"p"),e.EFF(385,"Avec la fonction "),e.j41(386,"code"),e.EFF(387,"DiskHealthIndicator.checkStorage"),e.k0s(),e.EFF(388," vous avez aussi la possibilit\xe9 de contr\xf4ler une quantit\xe9 fixe d'espace. L'exemple suivant serait malsain dans le cas o\xf9 le chemin "),e.j41(389,"code"),e.EFF(390,"/my-app/"),e.k0s(),e.EFF(391," d\xe9passerait 250GB."),e.k0s(),e.j41(392,"app-copy-button",31)(393,"span",32),e.EFF(394),e.nI1(395,"extension"),e.nrm(396,"app-tabs",null,8),e.k0s(),e.j41(398,"pre")(399,"code",33),e.EFF(400,"\n// Dans la classe `HealthController` (contr\xf4leur de sant\xe9)\n\n@Get()\n@HealthCheck()\ncheck() {\n  return this.health.check([\n    () => this.disk.checkStorage('storage', {  path: '/', threshold: 250 * 1024 * 1024 * 1024, })\n  ]);\n}\n"),e.k0s()()(),e.j41(401,"h4",43)(402,"span"),e.EFF(403,"Indicateur de sant\xe9 de la m\xe9moire"),e.k0s()(),e.j41(404,"p"),e.EFF(405,"Pour s'assurer que votre processus ne d\xe9passe pas une certaine limite de m\xe9moire, le "),e.j41(406,"code"),e.EFF(407,"MemoryHealthIndicator"),e.k0s(),e.EFF(408," peut \xeatre utilis\xe9. L'exemple suivant peut \xeatre utilis\xe9 pour contr\xf4ler le volume de m\xe9moire de votre processus."),e.k0s(),e.j41(409,"blockquote",29)(410,"strong"),e.EFF(411,"Astuce"),e.k0s(),e.EFF(412," Le heap est la partie de la m\xe9moire o\xf9 r\xe9side la m\xe9moire allou\xe9e dynamiquement (c'est-\xe0-dire la m\xe9moire allou\xe9e via malloc). La m\xe9moire allou\xe9e \xe0 partir du heap restera allou\xe9e jusqu'\xe0 ce que l'une des situations suivantes se produise :\n"),e.j41(413,"ul")(414,"li"),e.EFF(415,"La m\xe9moire est "),e.j41(416,"em"),e.EFF(417,"free"),e.k0s(),e.EFF(418," (lib\xe9r\xe9e)"),e.k0s(),e.j41(419,"li"),e.EFF(420,"Le programme se termine"),e.k0s()()(),e.j41(421,"app-copy-button",31)(422,"span",32),e.EFF(423),e.nI1(424,"extension"),e.nrm(425,"app-tabs",null,9),e.k0s(),e.j41(427,"pre")(428,"code",33),e.EFF(429,"\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private memory: MemoryHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.memory.checkHeap('memory_heap', 150 * 1024 * 1024),\n    ]);\n  }\n}\n"),e.k0s()(),e.j41(430,"pre")(431,"code",33),e.EFF(432,"\n@Controller('health')\n@Dependencies(HealthCheckService, MemoryHealthIndicator)\nexport class HealthController {\n  constructor(health, memory) {}\n\n  @Get()\n  @HealthCheck()\n  healthCheck() {\n    return this.health.check([\n      () => this.memory.checkHeap('memory_heap', 150 * 1024 * 1024),\n    ])\n  }\n}\n"),e.k0s()()(),e.j41(433,"p"),e.EFF(434,"Il est \xe9galement possible de v\xe9rifier le RSS m\xe9moire de votre processus avec "),e.j41(435,"code"),e.EFF(436,"MemoryHealthIndicator.checkRSS"),e.k0s(),e.EFF(437,". Cet exemple renverrait un code de r\xe9ponse malsain dans le cas o\xf9 votre processus aurait plus de 150MB allou\xe9s."),e.k0s(),e.j41(438,"blockquote",29)(439,"strong"),e.EFF(440,"Astuce"),e.k0s(),e.EFF(441," RSS est la taille de l'ensemble r\xe9sident (Resident Set Size) et sert \xe0 indiquer la quantit\xe9 de m\xe9moire allou\xe9e \xe0 ce processus et se trouvant dans la RAM.\nElle n'inclut pas la m\xe9moire qui est \xe9chang\xe9e. Elle inclut la m\xe9moire des biblioth\xe8ques partag\xe9es tant que les pages de ces biblioth\xe8ques sont effectivement en m\xe9moire. Elle inclut toute la m\xe9moire de la pile et du tas (heap).\n"),e.k0s(),e.j41(442,"app-copy-button",31)(443,"span",32),e.EFF(444),e.nI1(445,"extension"),e.nrm(446,"app-tabs",null,10),e.k0s(),e.j41(448,"pre")(449,"code",33),e.EFF(450,"\n// Dans la classe `HealthController` (contr\xf4leur de sant\xe9)\n\n@Get()\n@HealthCheck()\ncheck() {\n  return this.health.check([\n    () => this.memory.checkRSS('memory_rss', 150 * 1024 * 1024),\n  ]);\n}\n"),e.k0s()()(),e.j41(451,"h4",44)(452,"span"),e.EFF(453,"Indicateur de sant\xe9 personnalis\xe9"),e.k0s()(),e.j41(454,"p"),e.EFF(455,"Dans certains cas, les indicateurs de sant\xe9 pr\xe9d\xe9finis fournis par "),e.j41(456,"code"),e.EFF(457,"@nestjs/terminus"),e.k0s(),e.EFF(458," ne couvrent pas tous vos besoins en mati\xe8re de contr\xf4le de sant\xe9. Dans ce cas, vous pouvez configurer un indicateur de sant\xe9 personnalis\xe9 en fonction de vos besoins."),e.k0s(),e.j41(459,"p"),e.EFF(460,"Commen\xe7ons par cr\xe9er un service qui repr\xe9sentera notre indicateur personnalis\xe9. Pour comprendre comment un indicateur est structur\xe9, nous allons cr\xe9er un exemple "),e.j41(461,"code"),e.EFF(462,"DogHealthIndicator"),e.k0s(),e.EFF(463,". Ce service devrait avoir l'\xe9tat "),e.j41(464,"code"),e.EFF(465,"'up'"),e.k0s(),e.EFF(466," si chaque objet "),e.j41(467,"code"),e.EFF(468,"Dog"),e.k0s(),e.EFF(469," a le type "),e.j41(470,"code"),e.EFF(471,"'goodboy'"),e.k0s(),e.EFF(472,". Si cette condition n'est pas remplie, il doit g\xe9n\xe9rer une erreur."),e.k0s(),e.j41(473,"app-copy-button",31)(474,"span",32),e.EFF(475),e.nI1(476,"extension"),e.nrm(477,"app-tabs",null,11),e.k0s(),e.j41(479,"pre")(480,"code",33),e.EFF(481,"\nimport { Injectable } from '@nestjs/common';\nimport { HealthIndicator, HealthIndicatorResult, HealthCheckError } from '@nestjs/terminus';\n\nexport interface Dog {\n  name: string;\n  type: string;\n}\n\n@Injectable()\nexport class DogHealthIndicator extends HealthIndicator {\n  private dogs: Dog[] = [\n    { name: 'Fido', type: 'goodboy' },\n    { name: 'Rex', type: 'badboy' },\n  ];\n\n  async isHealthy(key: string): Promise<HealthIndicatorResult> {\n    const badboys = this.dogs.filter(dog => dog.type === 'badboy');\n    const isHealthy = badboys.length === 0;\n    const result = this.getStatus(key, isHealthy, { badboys: badboys.length });\n\n    if (isHealthy) {\n      return result;\n    }\n    throw new HealthCheckError('Dogcheck failed', result);\n  }\n}\n"),e.k0s()(),e.j41(482,"pre")(483,"code",33),e.EFF(484,"\nimport { Injectable } from '@nestjs/common';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n@Injectable()\nexport class DogHealthIndicator extends HealthIndicator {\n  dogs = [\n    { name: 'Fido', type: 'goodboy' },\n    { name: 'Rex', type: 'badboy' },\n  ];\n\n  async isHealthy(key) {\n    const badboys = this.dogs.filter(dog => dog.type === 'badboy');\n    const isHealthy = badboys.length === 0;\n    const result = this.getStatus(key, isHealthy, { badboys: badboys.length });\n\n    if (isHealthy) {\n      return result;\n    }\n    throw new HealthCheckError('Dogcheck failed', result);\n  }\n}\n"),e.k0s()()(),e.j41(485,"p"),e.EFF(486,"La prochaine chose \xe0 faire est d'enregistrer l'indicateur de sant\xe9 en tant que fournisseur."),e.k0s(),e.j41(487,"app-copy-button",31)(488,"span",32),e.EFF(489),e.nI1(490,"extension"),e.nrm(491,"app-tabs",null,12),e.k0s(),e.j41(493,"pre")(494,"code",33),e.EFF(495,"\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { DogHealthIndicator } from './dog.health';\n\n@Module({\n  controllers: [HealthController],\n  imports: [TerminusModule],\n  providers: [DogHealthIndicator]\n})\nexport class HealthModule { }\n"),e.k0s()()(),e.j41(496,"blockquote",29)(497,"strong"),e.EFF(498,"Astuce"),e.k0s(),e.EFF(499," Dans une application r\xe9elle, le "),e.j41(500,"code"),e.EFF(501,"DogHealthIndicator"),e.k0s(),e.EFF(502," devrait \xeatre fourni dans un module s\xe9par\xe9, par exemple, "),e.j41(503,"code"),e.EFF(504,"DogModule"),e.k0s(),e.EFF(505,", qui sera ensuite import\xe9 par le "),e.j41(506,"code"),e.EFF(507,"HealthModule"),e.k0s(),e.EFF(508,".\n"),e.k0s(),e.j41(509,"p"),e.EFF(510,"La derni\xe8re \xe9tape n\xe9cessaire est d'ajouter l'indicateur de sant\xe9 maintenant disponible dans le point de terminaison de contr\xf4le de sant\xe9 requis. Pour cela, nous retournons dans notre "),e.j41(511,"code"),e.EFF(512,"HealthController"),e.k0s(),e.EFF(513," et l'ajoutons \xe0 notre fonction "),e.j41(514,"code"),e.EFF(515,"check"),e.k0s(),e.EFF(516,"."),e.k0s(),e.j41(517,"app-copy-button",31)(518,"span",32),e.EFF(519),e.nI1(520,"extension"),e.nrm(521,"app-tabs",null,13),e.k0s(),e.j41(523,"pre")(524,"code",33),e.EFF(525,"\nimport { HealthCheckService, HealthCheck } from '@nestjs/terminus';\nimport { Injectable, Dependencies, Get } from '@nestjs/common';\nimport { DogHealthIndicator } from './dog.health';\n\n@Injectable()\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private dogHealthIndicator: DogHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  healthCheck() {\n    return this.health.check([\n      () => this.dogHealthIndicator.isHealthy('dog'),\n    ])\n  }\n}\n"),e.k0s()(),e.j41(526,"pre")(527,"code",33),e.EFF(528,"\nimport { HealthCheckService, HealthCheck } from '@nestjs/terminus';\nimport { Injectable, Get } from '@nestjs/common';\nimport { DogHealthIndicator } from './dog.health';\n\n@Injectable()\n@Dependencies(HealthCheckService, DogHealthIndicator)\nexport class HealthController {\n  constructor(\n    private health,\n    private dogHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  healthCheck() {\n    return this.health.check([\n      () => this.dogHealthIndicator.isHealthy('dog'),\n    ])\n  }\n}\n"),e.k0s()()(),e.j41(529,"h4",45)(530,"span"),e.EFF(531,"Journalisation"),e.k0s()(),e.j41(532,"p"),e.EFF(533,"Terminus ne consigne que les messages d'erreur, par exemple lorsqu'un Healthcheck a \xe9chou\xe9. Avec la m\xe9thode "),e.j41(534,"code"),e.EFF(535,"TerminusModule.forRoot()"),e.k0s(),e.EFF(536," vous avez plus de contr\xf4le sur la fa\xe7on dont les erreurs sont enregistr\xe9es et vous pouvez aussi prendre compl\xe8tement en charge la journalisation elle-m\xeame."),e.k0s(),e.j41(537,"p"),e.EFF(538,"Dans cette section, nous allons vous expliquer comment cr\xe9er un logger personnalis\xe9 "),e.j41(539,"code"),e.EFF(540,"TerminusLogger"),e.k0s(),e.EFF(541,". Ce logger \xe9tend le logger int\xe9gr\xe9.\nVous pouvez donc choisir la partie du logger que vous souhaitez \xe9craser."),e.k0s(),e.j41(542,"blockquote",29)(543,"strong"),e.EFF(544,"Info"),e.k0s(),e.EFF(545," Si vous souhaitez en savoir plus sur les loggers personnalis\xe9s dans NestJS, vous pouvez "),e.j41(546,"a",46),e.EFF(547,"en lire plus ici"),e.k0s(),e.EFF(548,".\n"),e.k0s(),e.j41(549,"app-copy-button",31)(550,"span",32),e.EFF(551),e.nI1(552,"extension"),e.nrm(553,"app-tabs",null,14),e.k0s(),e.j41(555,"pre")(556,"code",33),e.EFF(557,"\nimport { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class TerminusLogger extends ConsoleLogger {\n  error(message: any, stack?: string, context?: string): void;\n  error(message: any, ...optionalParams: any[]): void;\n  error(\n    message: unknown,\n    stack?: unknown,\n    context?: unknown,\n    ...rest: unknown[]\n  ): void {\n    // Remplacer ici la fa\xe7on dont les messages d'erreur doivent \xeatre enregistr\xe9s\n  }\n}\n"),e.k0s()()(),e.j41(558,"p"),e.EFF(559,"Une fois que vous avez cr\xe9\xe9 votre logger personnalis\xe9, tout ce que vous avez \xe0 faire est de le passer dans le "),e.j41(560,"code"),e.EFF(561,"TerminusModule.forRoot()"),e.k0s(),e.EFF(562," comme tel."),e.k0s(),e.j41(563,"app-copy-button",31)(564,"span",32),e.EFF(565),e.nI1(566,"extension"),e.nrm(567,"app-tabs",null,15),e.k0s(),e.j41(569,"pre")(570,"code",33),e.EFF(571,"\n@Module({\nimports: [\n  TerminusModule.forRoot({\n    logger: TerminusLogger,\n  }),\n],\n})\nexport class HealthModule {}\n"),e.k0s()()(),e.j41(572,"p"),e.EFF(573,"Pour supprimer compl\xe8tement les messages de journal provenant de Terminus, y compris les messages d'erreur, configurez Terminus comme tel."),e.k0s(),e.j41(574,"app-copy-button",31)(575,"span",32),e.EFF(576),e.nI1(577,"extension"),e.nrm(578,"app-tabs",null,16),e.k0s(),e.j41(580,"pre")(581,"code",33),e.EFF(582,"\n@Module({\nimports: [\n  TerminusModule.forRoot({\n    logger: false,\n  }),\n],\n})\nexport class HealthModule {}\n"),e.k0s()()(),e.j41(583,"p"),e.EFF(584,"Terminus vous permet de configurer l'affichage des erreurs de Healthcheck dans vos journaux."),e.k0s(),e.j41(585,"table")(586,"thead")(587,"tr")(588,"th",47),e.EFF(589,"Style du journal d'erreurs"),e.k0s(),e.j41(590,"th",47),e.EFF(591,"Description"),e.k0s(),e.j41(592,"th",47),e.EFF(593,"Example"),e.k0s()()(),e.j41(594,"tbody")(595,"tr")(596,"td",47)(597,"code"),e.EFF(598,"json"),e.k0s(),e.EFF(599," (par d\xe9faut)"),e.k0s(),e.j41(600,"td",47),e.EFF(601,"Affiche un r\xe9sum\xe9 du r\xe9sultat du contr\xf4le de sant\xe9 en cas d'erreur sous la forme d'un objet JSON."),e.k0s(),e.j41(602,"td",47)(603,"figure"),e.nrm(604,"img",48),e.k0s()()(),e.j41(605,"tr")(606,"td",47)(607,"code"),e.EFF(608,"pretty"),e.k0s()(),e.j41(609,"td",47),e.EFF(610,"Affiche un r\xe9sum\xe9 du r\xe9sultat du contr\xf4le de sant\xe9 en cas d'erreur dans des cases format\xe9es et met en \xe9vidence les r\xe9sultats positifs ou erron\xe9s."),e.k0s(),e.j41(611,"td",47)(612,"figure"),e.nrm(613,"img",49),e.k0s()()()()(),e.j41(614,"p"),e.EFF(615,"Vous pouvez changer le style du journal en utilisant l'option de configuration "),e.j41(616,"code"),e.EFF(617,"errorLogStyle"),e.k0s(),e.EFF(618," comme dans l'extrait suivant."),e.k0s(),e.j41(619,"app-copy-button",31)(620,"span",32),e.EFF(621),e.nI1(622,"extension"),e.nrm(623,"app-tabs",null,17),e.k0s(),e.j41(625,"pre")(626,"code",33),e.EFF(627,"\n@Module({\n  imports: [\n    TerminusModule.forRoot({\n      errorLogStyle: 'pretty',\n    }),\n  ]\n})\nexport class HealthModule {}\n"),e.k0s()()(),e.j41(628,"h4",50)(629,"span"),e.EFF(630,"D\xe9lai d'arr\xeat en douceur"),e.k0s()(),e.j41(631,"p"),e.EFF(632,"Si votre application n\xe9cessite de reporter son processus d'arr\xeat, Terminus peut s'en charger pour vous.\nCe param\xe8tre peut s'av\xe9rer particuli\xe8rement b\xe9n\xe9fique lorsque vous travaillez avec un orchestrateur tel que Kubernetes.\nEn d\xe9finissant un d\xe9lai l\xe9g\xe8rement plus long que l'intervalle de contr\xf4le de l'\xe9tat de pr\xe9paration, vous pouvez obtenir un temps d'arr\xeat nul lors de l'arr\xeat des conteneurs."),e.k0s(),e.j41(633,"app-copy-button",31)(634,"span",32),e.EFF(635),e.nI1(636,"extension"),e.nrm(637,"app-tabs",null,18),e.k0s(),e.j41(639,"pre")(640,"code",33),e.EFF(641,"\n@Module({\n  imports: [\n    TerminusModule.forRoot({\n      gracefulShutdownTimeoutMs: 1000,\n    }),\n  ]\n})\nexport class HealthModule {}\n"),e.k0s()()(),e.j41(642,"h4",51)(643,"span"),e.EFF(644,"Plus d'exemples"),e.k0s()(),e.j41(645,"p"),e.EFF(646,"D'autres exemples pratiques sont disponibles "),e.j41(647,"a",52),e.EFF(648,"ici"),e.k0s(),e.EFF(649,"."),e.k0s()()),2&t){const r=e.sdS(109),u=e.sdS(163),i=e.sdS(175),c=e.sdS(284),a=e.sdS(314),F=e.sdS(351),E=e.sdS(377),j=e.sdS(397),h=e.sdS(426),y=e.sdS(447),g=e.sdS(478),A=e.sdS(492),b=e.sdS(522),S=e.sdS(554),C=e.sdS(568),x=e.sdS(579),X=e.sdS(624),Z=e.sdS(638);e.R7$(106),e.SpI(" ",e.i5U(107,46,"health.module",r.isJsActive),"\n"),e.R7$(54),e.SpI(" ",e.i5U(161,49,"health.controller",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(5),e.SpI(" ",e.i5U(173,52,"health.module",i.isJsActive),"\n"),e.R7$(4),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(102),e.SpI(" ",e.i5U(282,55,"health.controller",c.isJsActive),"\n"),e.R7$(30),e.SpI(" ",e.i5U(312,58,"health.controller",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(30),e.SpI(" ",e.i5U(349,61,"health.controller",F.isJsActive),"\n"),e.R7$(26),e.SpI(" ",e.i5U(375,64,"health.controller",E.isJsActive),"\n"),e.R7$(4),e.AVh("hide",E.isJsActive),e.R7$(3),e.AVh("hide",!E.isJsActive),e.R7$(13),e.SpI(" ",e.i5U(395,67,"health.controller",j.isJsActive),"\n"),e.R7$(29),e.SpI(" ",e.i5U(424,70,"health.controller",h.isJsActive),"\n"),e.R7$(4),e.AVh("hide",h.isJsActive),e.R7$(3),e.AVh("hide",!h.isJsActive),e.R7$(14),e.SpI(" ",e.i5U(445,73,"health.controller",y.isJsActive),"\n"),e.R7$(31),e.SpI(" ",e.i5U(476,76,"dog.health",g.isJsActive),"\n"),e.R7$(4),e.AVh("hide",g.isJsActive),e.R7$(3),e.AVh("hide",!g.isJsActive),e.R7$(7),e.SpI(" ",e.i5U(490,79,"health.module",A.isJsActive),"\n"),e.R7$(30),e.SpI(" ",e.i5U(520,82,"health.controller",b.isJsActive),"\n"),e.R7$(4),e.AVh("hide",b.isJsActive),e.R7$(3),e.AVh("hide",!b.isJsActive),e.R7$(25),e.SpI(" ",e.i5U(552,85,"terminus-logger.service",S.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(566,88,"health.module",C.isJsActive),"\n"),e.R7$(11),e.SpI(" ",e.i5U(577,91,"health.module",x.isJsActive),"\n"),e.R7$(45),e.SpI(" ",e.i5U(622,94,"health.module",X.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(636,97,"health.module",Z.isJsActive),"\n")}},dependencies:[v.O,l.a,d.z,k.Wk,f.M],encapsulation:2,changeDetection:0})}return s})(),$=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-router-module"]],features:[e.Vt3],decls:83,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/router-module.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","module-router"],[1,"info"],["href","/controllers#routage"],["routerLink","/faq/global-prefix"],["routerLink","/techniques/versioning"],[1,"language-typescript"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Module Router"),e.k0s(),e.j41(7,"blockquote",6)(8,"strong"),e.EFF(9,"Astuce"),e.k0s(),e.EFF(10," Ce chapitre ne concerne que les applications bas\xe9es sur le protocole HTTP.\n"),e.k0s(),e.j41(11,"p"),e.EFF(12,"Dans une application HTTP (par exemple, une API REST), le chemin d'acc\xe8s \xe0 un handler est d\xe9termin\xe9 en concat\xe9nant le pr\xe9fixe (optionnel) d\xe9clar\xe9 pour le contr\xf4leur (dans le d\xe9corateur "),e.j41(13,"code"),e.EFF(14,"@Controller"),e.k0s(),e.EFF(15,"), et tout chemin sp\xe9cifi\xe9 dans le d\xe9corateur de la m\xe9thode (par exemple, "),e.j41(16,"code"),e.EFF(17,"@Get('users')"),e.k0s(),e.EFF(18,"). Vous pouvez en apprendre plus \xe0 ce sujet dans "),e.j41(19,"a",7),e.EFF(20,"cette section"),e.k0s(),e.EFF(21,". De plus, vous pouvez d\xe9finir un "),e.j41(22,"a",8),e.EFF(23,"pr\xe9fixe global"),e.k0s(),e.EFF(24," pour toutes les routes enregistr\xe9es dans votre application, ou activer le "),e.j41(25,"a",9),e.EFF(26,"versioning"),e.k0s(),e.EFF(27,"."),e.k0s(),e.j41(28,"p"),e.EFF(29,"Par ailleurs, il existe des cas o\xf9 la d\xe9finition d'un pr\xe9fixe au niveau d'un module (et donc pour tous les contr\xf4leurs enregistr\xe9s dans ce module) peut s'av\xe9rer utile. Par exemple, imaginez une application REST qui expose plusieurs points d'acc\xe8s diff\xe9rents utilis\xe9s par une partie sp\xe9cifique de votre application appel\xe9e \"Dashboard\".\nDans un tel cas, au lieu de r\xe9p\xe9ter le pr\xe9fixe "),e.j41(30,"code"),e.EFF(31,"/dashboard"),e.k0s(),e.EFF(32," dans chaque contr\xf4leur, vous pourriez utiliser un module utilitaire "),e.j41(33,"code"),e.EFF(34,"RouterModule"),e.k0s(),e.EFF(35,", comme suit :"),e.k0s(),e.j41(36,"app-copy-button")(37,"pre")(38,"code",10),e.EFF(39,"\n@Module({\n  imports: [\n    DashboardModule,\n    RouterModule.register([\n      {\n        path: 'dashboard',\n        module: DashboardModule,\n      },\n    ]),\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(40,"blockquote",6)(41,"strong"),e.EFF(42,"Astuce"),e.k0s(),e.EFF(43," La classe "),e.j41(44,"code"),e.EFF(45,"RouterModule"),e.k0s(),e.EFF(46," est export\xe9e du package "),e.j41(47,"code"),e.EFF(48,"@nestjs/core"),e.k0s(),e.EFF(49,".\n"),e.k0s(),e.j41(50,"p"),e.EFF(51,'En outre, vous pouvez d\xe9finir des structures hi\xe9rarchiques. Cela signifie que chaque module peut avoir des modules "enfants".\nLes modules enfants h\xe9riteront du pr\xe9fixe de leur parent. Dans l\'exemple suivant, nous allons enregistrer le module '),e.j41(52,"code"),e.EFF(53,"AdminModule"),e.k0s(),e.EFF(54," en tant que module parent des modules "),e.j41(55,"code"),e.EFF(56,"DashboardModule"),e.k0s(),e.EFF(57," et "),e.j41(58,"code"),e.EFF(59,"MetricsModule"),e.k0s(),e.EFF(60,"."),e.k0s(),e.j41(61,"app-copy-button")(62,"pre")(63,"code",10),e.EFF(64,"\n@Module({\n  imports: [\n    AdminModule,\n    DashboardModule,\n    MetricsModule,\n    RouterModule.register([\n      {\n        path: 'admin',\n        module: AdminModule,\n        children: [\n          {\n            path: 'dashboard',\n            module: DashboardModule,\n          },\n          {\n            path: 'metrics',\n            module: MetricsModule,\n          },\n        ],\n      },\n    ])\n  ],\n});\n"),e.k0s()()(),e.j41(65,"blockquote",6)(66,"strong"),e.EFF(67,"Astuce"),e.k0s(),e.EFF(68," Cette fonctionnalit\xe9 doit \xeatre utilis\xe9e avec pr\xe9caution, car une utilisation excessive peut rendre le code difficile \xe0 maintenir dans le temps.\n"),e.k0s(),e.j41(69,"p"),e.EFF(70,"Dans l'exemple ci-dessus, tout contr\xf4leur enregistr\xe9 dans le "),e.j41(71,"code"),e.EFF(72,"DashboardModule"),e.k0s(),e.EFF(73," aura un pr\xe9fixe suppl\xe9mentaire "),e.j41(74,"code"),e.EFF(75,"/admin/dashboard"),e.k0s(),e.EFF(76," (car le module concat\xe8ne les chemins de haut en bas - r\xe9cursivement - du parent aux enfants).\nDe m\xeame, chaque contr\xf4leur d\xe9fini \xe0 l'int\xe9rieur du "),e.j41(77,"code"),e.EFF(78,"MetricsModule"),e.k0s(),e.EFF(79," aura un pr\xe9fixe suppl\xe9mentaire au niveau du module "),e.j41(80,"code"),e.EFF(81,"/admin/metrics"),e.k0s(),e.EFF(82,"."),e.k0s()())},dependencies:[d.z,k.Wk],encapsulation:2,changeDetection:0})}return s})(),_=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-nest-commander"]],features:[e.Vt3],decls:219,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/nest-commander.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","nest-commander"],["routerLink","/standalone-applications"],["rel","nofollow","target","_blank","href","https://jmcdo29.github.io/nest-commander"],[1,"info"],["rel","nofollow","target","_blank","href","https://github.com/jmcdo29/nest-commander/issues/new/choose"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","un-fichier-de-commande"],["rel","nofollow","target","_blank","href","https://www.typescriptlang.org/docs/handbook/decorators.html"],["appAnchor","","id","ex\xe9cution-de-la-commande"],[1,"language-ts"],["appAnchor","","id","tests"],["appAnchor","","id","tout-mettre-en-place"],["appAnchor","","id","plus-dinformations"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"Nest Commander"),e.k0s(),e.j41(7,"p"),e.EFF(8,"En compl\xe9ment de la documentation sur les "),e.j41(9,"a",6),e.EFF(10,"applications autonomes"),e.k0s(),e.EFF(11,", il existe \xe9galement le package "),e.j41(12,"a",7),e.EFF(13,"nest-commander"),e.k0s(),e.EFF(14," qui permet d'\xe9crire des applications en ligne de commande dans une structure similaire \xe0 celle d'une application Nest classique."),e.k0s(),e.j41(15,"blockquote",8)(16,"strong"),e.EFF(17,"Info"),e.k0s(),e.j41(18,"code"),e.EFF(19,"nest-commander"),e.k0s(),e.EFF(20," est un package tiers et n'est pas g\xe9r\xe9 par l'ensemble de l'\xe9quipe NestJS. Veuillez rapporter tout probl\xe8me trouv\xe9 avec la biblioth\xe8que dans le "),e.j41(21,"a",9),e.EFF(22,"d\xe9p\xf4t appropri\xe9"),e.k0s(),e.EFF(23,".\n"),e.k0s(),e.j41(24,"h4",10)(25,"span"),e.EFF(26,"Installation"),e.k0s()(),e.j41(27,"p"),e.EFF(28,"Comme tout autre package, vous devez l'installer avant de pouvoir l'utiliser."),e.k0s(),e.j41(29,"pre")(30,"code",11),e.EFF(31,"\n$ npm i nest-commander\n"),e.k0s()(),e.j41(32,"h4",12)(33,"span"),e.EFF(34,"Un fichier de commande"),e.k0s()(),e.j41(35,"p")(36,"code"),e.EFF(37,"nest-commander"),e.k0s(),e.EFF(38," facilite l'\xe9criture de nouvelles applications de ligne de commande avec "),e.j41(39,"a",13),e.EFF(40,"decorators"),e.k0s(),e.EFF(41," via le d\xe9corateur "),e.j41(42,"code"),e.EFF(43,"@Command()"),e.k0s(),e.EFF(44," pour les classes et le d\xe9corateur "),e.j41(45,"code"),e.EFF(46,"@Option()"),e.k0s(),e.EFF(47," pour les m\xe9thodes de cette classe. Chaque fichier de commande doit impl\xe9menter la classe abstraite "),e.j41(48,"code"),e.EFF(49,"CommandRunner"),e.k0s(),e.EFF(50," et doit \xeatre d\xe9cor\xe9 avec un d\xe9corateur "),e.j41(51,"code"),e.EFF(52,"@Command()"),e.k0s(),e.EFF(53,"."),e.k0s(),e.j41(54,"p"),e.EFF(55,"Chaque commande est vue comme un "),e.j41(56,"code"),e.EFF(57,"@Injectable()"),e.k0s(),e.EFF(58," par Nest, donc votre injection de d\xe9pendance normale fonctionne toujours comme vous vous y attendez. La seule chose \xe0 noter est la classe abstraite "),e.j41(59,"code"),e.EFF(60,"CommandRunner"),e.k0s(),e.EFF(61,", qui doit \xeatre impl\xe9ment\xe9e par chaque commande. La classe abstraite "),e.j41(62,"code"),e.EFF(63,"CommandRunner"),e.k0s(),e.EFF(64," assure que toutes les commandes ont une m\xe9thode "),e.j41(65,"code"),e.EFF(66,"run"),e.k0s(),e.EFF(67," qui retourne une "),e.j41(68,"code"),e.EFF(69,"Promesse<void>"),e.k0s(),e.EFF(70," et prend les param\xe8tres "),e.j41(71,"code"),e.EFF(72,"string[], Record<string, any>"),e.k0s(),e.EFF(73,". La commande "),e.j41(74,"code"),e.EFF(75,"run"),e.k0s(),e.EFF(76," est l'endroit o\xf9 vous pouvez lancer toute votre logique, elle prendra tous les param\xe8tres qui ne correspondent pas aux drapeaux d'options et les passera sous forme de tableau, juste au cas o\xf9 vous voudriez vraiment travailler avec des param\xe8tres multiples. Quant aux options, les "),e.j41(77,"code"),e.EFF(78,"Record<string, any>"),e.k0s(),e.EFF(79,", les noms de ces propri\xe9t\xe9s correspondent \xe0 la propri\xe9t\xe9 "),e.j41(80,"code"),e.EFF(81,"name"),e.k0s(),e.EFF(82," donn\xe9e aux d\xe9corateurs "),e.j41(83,"code"),e.EFF(84,"@Option()"),e.k0s(),e.EFF(85,", tandis que leur valeur correspond au retour du gestionnaire d'option. Si vous souhaitez une meilleure s\xe9curit\xe9 de type, vous pouvez \xe9galement cr\xe9er une interface pour vos options."),e.k0s(),e.j41(86,"h4",14)(87,"span"),e.EFF(88,"Ex\xe9cution de la commande"),e.k0s()(),e.j41(89,"p"),e.EFF(90,"De la m\xeame mani\xe8re que dans une application NestJS nous pouvons utiliser "),e.j41(91,"code"),e.EFF(92,"NestFactory"),e.k0s(),e.EFF(93," pour cr\xe9er un serveur pour nous, et le lancer en utilisant "),e.j41(94,"code"),e.EFF(95,"listen"),e.k0s(),e.EFF(96,", le package "),e.j41(97,"code"),e.EFF(98,"nest-commander"),e.k0s(),e.EFF(99," expose une API simple \xe0 utiliser pour lancer votre serveur. Importez la "),e.j41(100,"code"),e.EFF(101,"CommandFactory"),e.k0s(),e.EFF(102," et utilisez la m\xe9thode "),e.j41(103,"code"),e.EFF(104,"static"),e.k0s(),e.j41(105,"code"),e.EFF(106,"run"),e.k0s(),e.EFF(107," et passez le module racine de votre application. Cela ressemblerait probablement \xe0 ce qui suit :"),e.k0s(),e.j41(108,"app-copy-button")(109,"pre")(110,"code",15),e.EFF(111,"\nimport { CommandFactory } from 'nest-commander';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  await CommandFactory.run(AppModule);\n}\n\nbootstrap();\n"),e.k0s()()(),e.j41(112,"p"),e.EFF(113,"Par d\xe9faut, le logger de Nest est d\xe9sactiv\xe9 lors de l'utilisation de "),e.j41(114,"code"),e.EFF(115,"CommandFactory"),e.k0s(),e.EFF(116,". Il est cependant possible de le fournir en tant que second argument de la fonction "),e.j41(117,"code"),e.EFF(118,"run"),e.k0s(),e.EFF(119,". Vous pouvez soit fournir un logger NestJS personnalis\xe9, soit un tableau de niveaux de logs que vous souhaitez conserver - il peut \xeatre utile de fournir au moins "),e.j41(120,"code"),e.EFF(121,"['error']"),e.k0s(),e.EFF(122," ici, si vous ne voulez imprimer que les logs d'erreur de Nest."),e.k0s(),e.j41(123,"app-copy-button")(124,"pre")(125,"code",15),e.EFF(126,"\nimport { CommandFactory } from 'nest-commander';\nimport { AppModule } from './app.module';\nimport { LogService } './log.service';\n\nasync function bootstrap() {\n  await CommandFactory.run(AppModule, new LogService());\n\n  // ou, si vous ne voulez imprimer que les avertissements et les erreurs de Nest\n  await CommandFactory.run(AppModule, ['warn', 'error']);\n}\n\nbootstrap();\n"),e.k0s()()(),e.j41(127,"p"),e.EFF(128,"Et c'est tout. Sous le capot, "),e.j41(129,"code"),e.EFF(130,"CommandFactory"),e.k0s(),e.EFF(131," s'occupera d'appeler "),e.j41(132,"code"),e.EFF(133,"NestFactory"),e.k0s(),e.EFF(134," pour vous et d'appeler "),e.j41(135,"code"),e.EFF(136,"app.close()"),e.k0s(),e.EFF(137," quand c'est n\xe9cessaire, donc vous ne devriez pas avoir \xe0 vous soucier des fuites de m\xe9moire ici. Si vous avez besoin d'ajouter une gestion d'erreur, il y a toujours "),e.j41(138,"code"),e.EFF(139,"try/catch"),e.k0s(),e.EFF(140," qui enveloppe la commande "),e.j41(141,"code"),e.EFF(142,"run"),e.k0s(),e.EFF(143,", ou vous pouvez encha\xeener une m\xe9thode "),e.j41(144,"code"),e.EFF(145,".catch()"),e.k0s(),e.EFF(146," \xe0 l'appel "),e.j41(147,"code"),e.EFF(148,"bootstrap()"),e.k0s(),e.EFF(149,"."),e.k0s(),e.j41(150,"h4",16)(151,"span"),e.EFF(152,"Tests"),e.k0s()(),e.j41(153,"p"),e.EFF(154,"Alors \xe0 quoi bon \xe9crire un super script en ligne de commande si vous ne pouvez pas le tester super facilement, n'est-ce pas ? Heureusement, "),e.j41(155,"code"),e.EFF(156,"nest-commander"),e.k0s(),e.EFF(157," a quelques utilitaires que vous pouvez utiliser et qui s'int\xe8grent parfaitement \xe0 l'\xe9cosyst\xe8me NestJS, il se sentira comme chez lui pour tous les Nestlings qui sont l\xe0. Au lieu d'utiliser "),e.j41(158,"code"),e.EFF(159,"CommandFactory"),e.k0s(),e.EFF(160," pour construire la commande en mode test, vous pouvez utiliser "),e.j41(161,"code"),e.EFF(162,"CommandTestFactory"),e.k0s(),e.EFF(163," et passer vos m\xe9tadonn\xe9es, de mani\xe8re tr\xe8s similaire \xe0 la fa\xe7on dont "),e.j41(164,"code"),e.EFF(165,"Test.createTestingModule"),e.k0s(),e.EFF(166," de "),e.j41(167,"code"),e.EFF(168,"@nestjs/testing"),e.k0s(),e.EFF(169," fonctionne. En fait, il utilise ce package sous le capot. Vous pouvez toujours cha\xeener les m\xe9thodes "),e.j41(170,"code"),e.EFF(171,"overrideProvider"),e.k0s(),e.EFF(172," avant d'appeler "),e.j41(173,"code"),e.EFF(174,"compile()"),e.k0s(),e.EFF(175," afin de pouvoir changer les \xe9l\xe9ments DI directement dans le test."),e.k0s(),e.j41(176,"h4",17)(177,"span"),e.EFF(178,"Tout mettre en place"),e.k0s()(),e.j41(179,"p"),e.EFF(180,"La classe suivante \xe9quivaudrait \xe0 avoir une commande CLI qui peut prendre la sous-commande "),e.j41(181,"code"),e.EFF(182,"basic"),e.k0s(),e.EFF(183," ou \xeatre appel\xe9e directement, avec "),e.j41(184,"code"),e.EFF(185,"-n"),e.k0s(),e.EFF(186,", "),e.j41(187,"code"),e.EFF(188,"-s"),e.k0s(),e.EFF(189,", et "),e.j41(190,"code"),e.EFF(191,"-b"),e.k0s(),e.EFF(192," (ainsi que leurs verions longues) tous support\xe9s et avec des analyseurs personnalis\xe9s pour chaque option. L'option `--help' est \xe9galement support\xe9e, comme il est d'usage avec commander."),e.k0s(),e.j41(193,"app-copy-button")(194,"pre")(195,"code",15),e.EFF(196,"\nimport { Command, CommandRunner, Option } from 'nest-commander';\nimport { LogService } from './log.service';\n\ninterface BasicCommandOptions {\n  string?: string;\n  boolean?: boolean;\n  number?: number;\n}\n\n@Command({ name: 'basic', description: 'A parameter parse' })\nexport class BasicCommand extends CommandRunner {\n  constructor(private readonly logService: LogService) {\n    super()\n  }\n\n  async run(\n    passedParam: string[],\n    options?: BasicCommandOptions,\n  ): Promise<void> {\n    if (options?.boolean !== undefined && options?.boolean !== null) {\n      this.runWithBoolean(passedParam, options.boolean);\n    } else if (options?.number) {\n      this.runWithNumber(passedParam, options.number);\n    } else if (options?.string) {\n      this.runWithString(passedParam, options.string);\n    } else {\n      this.runWithNone(passedParam);\n    }\n  }\n\n  @Option({\n    flags: '-n, --number [number]',\n    description: 'A basic number parser',\n  })\n  parseNumber(val: string): number {\n    return Number(val);\n  }\n\n  @Option({\n    flags: '-s, --string [string]',\n    description: 'A string return',\n  })\n  parseString(val: string): string {\n    return val;\n  }\n\n  @Option({\n    flags: '-b, --boolean [boolean]',\n    description: 'A boolean parser',\n  })\n  parseBoolean(val: string): boolean {\n    return JSON.parse(val);\n  }\n\n  runWithString(param: string[], option: string): void {\n    this.logService.log({ param, string: option });\n  }\n\n  runWithNumber(param: string[], option: number): void {\n    this.logService.log({ param, number: option });\n  }\n\n  runWithBoolean(param: string[], option: boolean): void {\n    this.logService.log({ param, boolean: option });\n  }\n\n  runWithNone(param: string[]): void {\n    this.logService.log({ param });\n  }\n}\n"),e.k0s()()(),e.j41(197,"p"),e.EFF(198,"Assurez-vous que la classe de commande est ajout\xe9e \xe0 un module"),e.k0s(),e.j41(199,"app-copy-button")(200,"pre")(201,"code",15),e.EFF(202,"\n@Module({\n  providers: [LogService, BasicCommand],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(203,"p"),e.EFF(204,"Et maintenant, pour pouvoir ex\xe9cuter la CLI dans votre main.ts, vous pouvez faire ce qui suit"),e.k0s(),e.j41(205,"app-copy-button")(206,"pre")(207,"code",15),e.EFF(208,"\nasync function bootstrap() {\n  await CommandFactory.run(AppModule);\n}\n\nbootstrap();\n"),e.k0s()()(),e.j41(209,"p"),e.EFF(210,"Et ainsi, vous avez une application en ligne de commande."),e.k0s(),e.j41(211,"h4",18)(212,"span"),e.EFF(213,"Plus d'informations"),e.k0s()(),e.j41(214,"p"),e.EFF(215,"Visitez le site de la "),e.j41(216,"a",7),e.EFF(217,"documentation nest-commander"),e.k0s(),e.EFF(218," pour plus d'informations, d'exemples et de documentation sur l'API."),e.k0s()())},dependencies:[l.a,d.z,k.Wk],encapsulation:2,changeDetection:0})}return s})(),G=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-async-local-storage"]],features:[e.Vt3],decls:274,vars:32,consts:[["contentReference",""],["appfbf021fc87c9d6a0f5106afdf33faf70dbf0448a",""],["appd324be30185292e9f2886accdd4ba5265155d5fb",""],["appebb2c75f91385ef0aca45d7a9f5d1052c8348c22",""],["appe4f17e25b52138a8a823bd37f70fb2618d9e575c",""],["app1049041f5683ab6364413ce2d513d60f445dbdcf",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/async-local-storage.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","async-local-storage"],["rel","nofollow","target","_blank","href","https://nodejs.org/api/async_context.html#async_context_class_asynclocalstorage"],["appAnchor","","id","impl\xe9mentation-personnalis\xe9e"],[1,"info"],["href","recipes/async-local-storage#nestjs-cls"],[1,"with-heading"],[1,"filename"],[1,"language-ts"],["start","2"],[1,"language-typescript"],["start","3"],["start","4"],[1,"warning"],["rel","nofollow","target","_blank","href","https://en.wikipedia.org/wiki/God_object"],["id","nestjs-cls"],["rel","nofollow","target","_blank","href","https://github.com/Papooch/nestjs-cls"],["rel","nofollow","target","_blank","href","https://www.npmjs.com/package/nestjs-cls#proxy-providers"],["rel","nofollow","target","_blank","href","https://github.com/Papooch/nestjs-cls/issues"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","usage"],["href","recipes/async-local-storage#impl%C3%A9mentation-personnalis%C3%A9e"],["appAnchor","","id","tester"],["appAnchor","","id","en-savoir-plus"]],template:function(t,o){if(1&t&&(e.j41(0,"div",6,0)(2,"div",7)(3,"a",8),e.nrm(4,"i",9),e.k0s()(),e.j41(5,"h3",10),e.EFF(6,"Async Local Storage"),e.k0s(),e.j41(7,"p")(8,"code"),e.EFF(9,"AsyncLocalStorage"),e.k0s(),e.EFF(10," est une "),e.j41(11,"a",11),e.EFF(12,"API Node.js"),e.k0s(),e.EFF(13," (bas\xe9e sur l'API "),e.j41(14,"code"),e.EFF(15,"async_hooks"),e.k0s(),e.EFF(16,") qui fournit un moyen alternatif de propager l'\xe9tat local \xe0 travers l'application sans avoir besoin de le passer explicitement en tant que param\xe8tre de fonction. Il est similaire au stockage local des threads dans d'autres langages."),e.k0s(),e.j41(17,"p"),e.EFF(18,"L'id\xe9e principale du stockage local asynchrone est que nous pouvons "),e.j41(19,"em"),e.EFF(20,"envelopper"),e.k0s(),e.EFF(21," un appel de fonction avec l'appel "),e.j41(22,"code"),e.EFF(23,"AsyncLocalStorage#run"),e.k0s(),e.EFF(24,". Tout le code invoqu\xe9 dans l'appel envelopp\xe9 a acc\xe8s au m\xeame "),e.j41(25,"code"),e.EFF(26,"store"),e.k0s(),e.EFF(27,", qui sera unique \xe0 chaque cha\xeene d'appel."),e.k0s(),e.j41(28,"p"),e.EFF(29,"Dans le contexte de NestJS, cela signifie que si nous pouvons trouver un endroit dans le cycle de vie de la requ\xeate o\xf9 nous pouvons envelopper le reste du code de la requ\xeate, nous serons en mesure d'acc\xe9der et de modifier l'\xe9tat visible uniquement pour cette requ\xeate, ce qui peut servir d'alternative aux fournisseurs \xe0 port\xe9e de requ\xeate et \xe0 certaines de leurs limitations."),e.k0s(),e.j41(30,"p"),e.EFF(31,"Par ailleurs, nous pouvons utiliser l'ALS pour propager le contexte pour une partie seulement du syst\xe8me (par exemple l'objet "),e.j41(32,"em"),e.EFF(33,"transaction"),e.k0s(),e.EFF(34,") sans le transmettre explicitement entre les services, ce qui peut am\xe9liorer l'isolation et l'encapsulation."),e.k0s(),e.j41(35,"h4",12)(36,"span"),e.EFF(37,"Impl\xe9mentation personnalis\xe9e"),e.k0s()(),e.j41(38,"p"),e.EFF(39,"NestJS lui-m\xeame ne fournit pas d'abstraction int\xe9gr\xe9e pour "),e.j41(40,"code"),e.EFF(41,"AsyncLocalStorage"),e.k0s(),e.EFF(42,", donc nous allons voir comment nous pourrions l'impl\xe9menter nous-m\xeames pour le cas HTTP le plus simple afin d'avoir une meilleure compr\xe9hension de l'ensemble du concept :"),e.k0s(),e.j41(43,"blockquote",13)(44,"strong"),e.EFF(45,"Info"),e.k0s(),e.EFF(46," Pour un "),e.j41(47,"a",14),e.EFF(48,"package d\xe9di\xe9"),e.k0s(),e.EFF(49," pr\xeat \xe0 l'emploi , continuez \xe0 lire ci-dessous.\n"),e.k0s(),e.j41(50,"ol")(51,"li"),e.EFF(52,"Tout d'abord, cr\xe9ez une nouvelle instance de "),e.j41(53,"code"),e.EFF(54,"AsyncLocalStorage"),e.k0s(),e.EFF(55," dans un fichier source partag\xe9. Puisque nous utilisons NestJS, transformons-le \xe9galement en module avec un fournisseur personnalis\xe9."),e.k0s()(),e.j41(56,"app-copy-button",15)(57,"span",16),e.EFF(58),e.nI1(59,"extension"),e.nrm(60,"app-tabs",null,1),e.k0s(),e.j41(62,"pre")(63,"code",17),e.EFF(64,"\n@Module({\n  providers: [\n    {\n      provide: AsyncLocalStorage,\n      useValue: new AsyncLocalStorage(),\n    },\n  ],\n  exports: [AsyncLocalStorage],\n})\nexport class AlsModule {}\n"),e.k0s()()(),e.j41(65,"blockquote",13)(66,"strong"),e.EFF(67,"Astuce"),e.k0s(),e.j41(68,"code"),e.EFF(69,"AsyncLocalStorage"),e.k0s(),e.EFF(70," est import\xe9 de "),e.j41(71,"code"),e.EFF(72,"async_hooks"),e.k0s(),e.EFF(73,".\n"),e.k0s(),e.j41(74,"ol",18)(75,"li"),e.EFF(76,"Nous ne sommes concern\xe9s que par HTTP, alors utilisons un middleware pour envelopper la fonction "),e.j41(77,"code"),e.EFF(78,"next"),e.k0s(),e.EFF(79," avec "),e.j41(80,"code"),e.EFF(81,"AsyncLocalStorage#run"),e.k0s(),e.EFF(82,". Puisque le middleware est la premi\xe8re chose que la requ\xeate atteint, cela rendra le "),e.j41(83,"code"),e.EFF(84,"store"),e.k0s(),e.EFF(85," disponible dans tous les am\xe9liorateurs et le reste du syst\xe8me."),e.k0s()(),e.j41(86,"app-copy-button",15)(87,"span",16),e.EFF(88),e.nI1(89,"extension"),e.nrm(90,"app-tabs",null,2),e.k0s(),e.j41(92,"pre")(93,"code",19),e.EFF(94,"\n@Module({\n  imports: [AlsModule]\n  providers: [CatService],\n  controllers: [CatController],\n})\nexport class AppModule implements NestModule {\n  constructor(\n    // injecte l'AsyncLocalStorage dans le constructeur du module,\n    private readonly als: AsyncLocalStorage\n  ) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    // lie le middleware,\n    consumer\n      .apply((req, res, next) => {\n        // remplit le magasin avec des valeurs par d\xe9faut\n        // en fonction de la requ\xeate,\n        const store = {\n          userId: req.headers['x-user-id'],\n        };\n        // et passe la fonction \"next\" comme callback\n        // \xe0 la m\xe9thode \"als.run\" avec le magasin.\n        this.als.run(store, () => next());\n      })\n      // et l'enregistre pour toutes les routes (dans le cas de Fastify, utiliser '(.*)')\n      .forRoutes('*');\n  }\n}\n"),e.k0s()(),e.j41(95,"pre")(96,"code",19),e.EFF(97,"\n@Module({\n  imports: [AlsModule]\n  providers: [CatService],\n  controllers: [CatController],\n})\n@Dependencies(AsyncLocalStorage)\nexport class AppModule {\n  constructor(als) {\n    // injecte l'AsyncLocalStorage dans le constructeur du module,\n    this.als = als\n  }\n\n  configure(consumer) {\n    // lie le middleware,\n    consumer\n      .apply((req, res, next) => {\n        // remplit le magasin avec des valeurs par d\xe9faut\n        // en fonction de la requ\xeate,\n        const store = {\n          userId: req.headers['x-user-id'],\n        };\n        // et passe la fonction \"next\" comme callback\n        // \xe0 la m\xe9thode \"als.run\" avec le magasin.\n        this.als.run(store, () => next());\n      })\n      // et l'enregistre pour toutes les routes (dans le cas de Fastify, utiliser '(.*)')\n      .forRoutes('*');\n  }\n}\n"),e.k0s()()(),e.j41(98,"ol",20)(99,"li"),e.EFF(100,"D\xe9sormais, \xe0 n'importe quel moment du cycle de vie d'une requ\xeate, nous pouvons acc\xe9der \xe0 l'instance du magasin local."),e.k0s()(),e.j41(101,"app-copy-button",15)(102,"span",16),e.EFF(103),e.nI1(104,"extension"),e.nrm(105,"app-tabs",null,3),e.k0s(),e.j41(107,"pre")(108,"code",19),e.EFF(109,'\n@Injectable()\nexport class CatService {\n  constructor(\n    // Nous pouvons injecter l\'instance ALS fournie.\n    private readonly als: AsyncLocalStorage,\n    private readonly catRepository: CatRepository,\n  ) {}\n\n  getCatForUser() {\n    // La m\xe9thode "getStore" renvoie toujours\n    // l\'instance de magasin associ\xe9e \xe0 la requ\xeate donn\xe9e.\n    const userId = this.als.getStore()["userId"] as number;\n    return this.catRepository.getForUser(userId);\n  }\n}\n'),e.k0s()(),e.j41(110,"pre")(111,"code",19),e.EFF(112,'\n@Injectable()\n@Dependencies(AsyncLocalStorage, CatRepository)\nexport class CatService {\n  constructor(als, catRepository) {\n    // Nous pouvons injecter l\'instance ALS fournie.\n    this.als = als\n    this.catRepository = catRepository\n  }\n\n  getCatForUser() {\n    // La m\xe9thode "getStore" renvoie toujours\n    // l\'instance de magasin associ\xe9e \xe0 la requ\xeate donn\xe9e.\n    const userId = this.als.getStore()["userId"] as number;\n    return this.catRepository.getForUser(userId);\n  }\n}\n'),e.k0s()()(),e.j41(113,"ol",21)(114,"li"),e.EFF(115,"Voil\xe0, c'est fait. Nous avons maintenant un moyen de partager l'\xe9tat li\xe9 \xe0 la requ\xeate sans avoir besoin d'injecter l'objet "),e.j41(116,"code"),e.EFF(117,"REQUEST"),e.k0s(),e.EFF(118," entier."),e.k0s()(),e.j41(119,"blockquote",22)(120,"strong"),e.EFF(121,"Attention"),e.k0s(),e.EFF(122," Sachez que si cette technique est utile dans de nombreux cas, elle obscurcit intrins\xe8quement le flux de code (en cr\xe9ant un contexte implicite). Il convient donc de l'utiliser de mani\xe8re responsable et d'\xe9viter tout particuli\xe8rement de cr\xe9er des \""),e.j41(123,"a",23),e.EFF(124,"objets Dieu"),e.k0s(),e.EFF(125,'" contextuels.\n'),e.k0s(),e.j41(126,"h3",24),e.EFF(127,"NestJS CLS"),e.k0s(),e.j41(128,"p"),e.EFF(129,"Le package "),e.j41(130,"a",25),e.EFF(131,"nestjs-cls"),e.k0s(),e.EFF(132," fournit plusieurs am\xe9liorations DX par rapport \xe0 l'utilisation du simple "),e.j41(133,"code"),e.EFF(134,"AsyncLocalStorage"),e.k0s(),e.EFF(135," ("),e.j41(136,"code"),e.EFF(137,"CLS"),e.k0s(),e.EFF(138," est une abr\xe9viation du terme "),e.j41(139,"em"),e.EFF(140,"continuation-local storage"),e.k0s(),e.EFF(141,"). Il abstrait l'impl\xe9mentation dans un "),e.j41(142,"code"),e.EFF(143,"ClsModule"),e.k0s(),e.EFF(144," qui offre diff\xe9rentes mani\xe8res d'initialiser le "),e.j41(145,"code"),e.EFF(146,"store"),e.k0s(),e.EFF(147," pour diff\xe9rents transports (pas seulement HTTP), ainsi qu'un support de typage fort."),e.k0s(),e.j41(148,"p"),e.EFF(149,"Il est alors possible d'acc\xe9der au magasin \xe0 l'aide d'un "),e.j41(150,"code"),e.EFF(151,"ClsService"),e.k0s(),e.EFF(152," injectable, ou de s'abstraire enti\xe8rement de la logique commerciale en utilisant des "),e.j41(153,"a",26),e.EFF(154,"Proxy Providers"),e.k0s(),e.EFF(155,"."),e.k0s(),e.j41(156,"blockquote",13)(157,"strong"),e.EFF(158,"Info"),e.k0s(),e.j41(159,"code"),e.EFF(160,"nestjs-cls"),e.k0s(),e.EFF(161," est un package tiers et n'est pas g\xe9r\xe9 par l'\xe9quipe NestJS. Veuillez rapporter tout probl\xe8me trouv\xe9 avec la biblioth\xe8que dans le "),e.j41(162,"a",27),e.EFF(163,"d\xe9p\xf4t appropri\xe9"),e.k0s(),e.EFF(164,".\n"),e.k0s(),e.j41(165,"h4",28)(166,"span"),e.EFF(167,"Installation"),e.k0s()(),e.j41(168,"p"),e.EFF(169,"En dehors d'une d\xe9pendance sur les librairies "),e.j41(170,"code"),e.EFF(171,"@nestjs"),e.k0s(),e.EFF(172,", il n'utilise que l'API int\xe9gr\xe9e de Node.js. Installez-le comme n'importe quel autre package."),e.k0s(),e.j41(173,"pre")(174,"code",29),e.EFF(175,"\nnpm i nestjs-cls\n"),e.k0s()(),e.j41(176,"h4",30)(177,"span"),e.EFF(178,"Usage"),e.k0s()(),e.j41(179,"p"),e.EFF(180,"Une fonctionnalit\xe9 similaire \xe0 celle d\xe9crite "),e.j41(181,"a",31),e.EFF(182,"ci-dessus"),e.k0s(),e.EFF(183," peut \xeatre impl\xe9ment\xe9e en utilisant "),e.j41(184,"code"),e.EFF(185,"nestjs-cls"),e.k0s(),e.EFF(186," comme suit :"),e.k0s(),e.j41(187,"ol")(188,"li"),e.EFF(189,"Importer le "),e.j41(190,"code"),e.EFF(191,"ClsModule"),e.k0s(),e.EFF(192," dans le module racine."),e.k0s()(),e.j41(193,"app-copy-button",15)(194,"span",16),e.EFF(195),e.nI1(196,"extension"),e.nrm(197,"app-tabs",null,4),e.k0s(),e.j41(199,"pre")(200,"code",17),e.EFF(201,"\n@Module({\n  imports: [\n    // Enregistre le ClsModule,\n    ClsModule.forRoot({\n      middleware: {\n        // monte automatiquement le module\n        // ClsMiddleware pour toutes les routes\n        mount: true,\n        // et utilise la m\xe9thode setup pour\n        // fournir des valeurs par d\xe9faut\n        setup: (cls, req) => {\n          cls.set('userId', req.headers['x-user-id']);\n        },\n      },\n    }),\n  ],\n  providers: [CatService],\n  controllers: [CatController],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(202,"ol",18)(203,"li"),e.EFF(204,"On peut ensuite utiliser le "),e.j41(205,"code"),e.EFF(206,"ClsService"),e.k0s(),e.EFF(207," pour acc\xe9der aux valeurs du magasin."),e.k0s()(),e.j41(208,"app-copy-button",15)(209,"span",16),e.EFF(210),e.nI1(211,"extension"),e.nrm(212,"app-tabs",null,5),e.k0s(),e.j41(214,"pre")(215,"code",19),e.EFF(216,"\n@Injectable()\nexport class CatService {\n  constructor(\n    // Nous pouvons injecter l'instance de ClsService fournie,\n    private readonly cls: ClsService,\n    private readonly catRepository: CatRepository,\n  ) {}\n\n  getCatForUser() {\n    // et utiliser la m\xe9thode \"get\" pour r\xe9cup\xe9rer toute valeur stock\xe9e.\n    const userId = this.cls.get('userId');\n    return this.catRepository.getForUser(userId);\n  }\n}\n"),e.k0s()(),e.j41(217,"pre")(218,"code",19),e.EFF(219,"\n@Injectable()\n@Dependencies(AsyncLocalStorage, CatRepository)\nexport class CatService {\n  constructor(cls, catRepository) {\n    // Nous pouvons injecter l'instance de ClsService fournie,\n    this.cls = cls\n    this.catRepository = catRepository\n  }\n\n  getCatForUser() {\n    // et utiliser la m\xe9thode \"get\" pour r\xe9cup\xe9rer toute valeur stock\xe9e.\n    const userId = this.cls.get('userId');\n    return this.catRepository.getForUser(userId);\n  }\n}\n"),e.k0s()()(),e.j41(220,"ol",20)(221,"li"),e.EFF(222,"Pour obtenir un typage fort des valeurs du magasin g\xe9r\xe9es par le "),e.j41(223,"code"),e.EFF(224,"ClsService"),e.k0s(),e.EFF(225," (et \xe9galement obtenir des suggestions automatiques des cl\xe9s de cha\xeene), nous pouvons utiliser un param\xe8tre de type optionnel "),e.j41(226,"code"),e.EFF(227,"ClsService<MyClsStore>"),e.k0s(),e.EFF(228," lors de l'injection."),e.k0s()(),e.j41(229,"app-copy-button")(230,"pre")(231,"code",17),e.EFF(232,"\nexport interface MyClsStore extends ClsStore {\n  userId: number;\n}\n"),e.k0s()()(),e.j41(233,"blockquote",13)(234,"strong"),e.EFF(235,"Astuce"),e.k0s(),e.EFF(236," Il est \xe9galement possible de laisser le package g\xe9n\xe9rer automatiquement un identifiant de requ\xeate et d'y acc\xe9der plus tard avec "),e.j41(237,"code"),e.EFF(238,"cls.getId()"),e.k0s(),e.EFF(239,", ou d'obtenir l'objet de requ\xeate complet en utilisant "),e.j41(240,"code"),e.EFF(241,"cls.get(CLS_REQ)"),e.k0s(),e.EFF(242,".\n"),e.k0s(),e.j41(243,"h4",32)(244,"span"),e.EFF(245,"Tester"),e.k0s()(),e.j41(246,"p"),e.EFF(247,"Puisque le "),e.j41(248,"code"),e.EFF(249,"ClsService"),e.k0s(),e.EFF(250," est juste un autre fournisseur injectable, il peut \xeatre enti\xe8rement simul\xe9 dans les tests unitaires."),e.k0s(),e.j41(251,"p"),e.EFF(252,"Cependant, dans certains tests d'int\xe9gration, nous pourrions toujours vouloir utiliser l'impl\xe9mentation r\xe9elle de "),e.j41(253,"code"),e.EFF(254,"ClsService"),e.k0s(),e.EFF(255,". Dans ce cas, nous devrons envelopper le morceau de code contextuel avec un appel \xe0 "),e.j41(256,"code"),e.EFF(257,"ClsService#run"),e.k0s(),e.EFF(258," ou "),e.j41(259,"code"),e.EFF(260,"ClsService#runWith"),e.k0s(),e.EFF(261,"."),e.k0s(),e.j41(262,"app-copy-button")(263,"pre")(264,"code",17),e.EFF(265,"\ndescribe('CatService', () => {\n  let service: CatService\n  let cls: ClsService\n  const mockCatRepository = createMock<CatRepository>()\n\n  beforeEach(async () => {\n    const module = await Test.createTestingModule({\n      // Met en place la majeure partie du module de test comme nous le ferions normalement.\n      providers: [\n        CatService,\n        {\n          provide: CatRepository\n          useValue: mockCatRepository\n        }\n      ],\n      imports: [\n        // Importe la version statique de ClsModule qui fournit seulement\n        // le ClsService, mais ne configure en aucune fa\xe7on le magasin.\n        ClsModule\n      ],\n    }).compile()\n\n    service = module.get(CatService)\n\n    // R\xe9cup\xe8re \xe9galement le ClsService pour une utilisation ult\xe9rieure.\n    cls = module.get(ClsService)\n  })\n\n  describe('getCatForUser', () => {\n    it('retrieves cat based on user id', async () => {\n      const expectedUserId = 42\n      mockCatRepository.getForUser.mockImplementationOnce(\n        (id) => ({ userId: id })\n      )\n\n      // Enveloppe l'appel au test dans la m\xe9thode `runWith`.\n      // dans lequel nous pouvons passer des valeurs de magasin cr\xe9\xe9es \xe0 la main.\n      const cat = await cls.runWith(\n        { userId: expectedUserId },\n        () => service.getCatForUser()\n      )\n\n      expect(cat.userId).toEqual(expectedUserId)\n    })\n  })\n})\n"),e.k0s()()(),e.j41(266,"h4",33)(267,"span"),e.EFF(268,"En savoir plus"),e.k0s()(),e.j41(269,"p"),e.EFF(270,"Visitez la "),e.j41(271,"a",25),e.EFF(272,"Page GitHub NestJS CLS"),e.k0s(),e.EFF(273," pour obtenir la documentation compl\xe8te de l'API et d'autres exemples de code."),e.k0s()()),2&t){const r=e.sdS(61),u=e.sdS(91),i=e.sdS(106),c=e.sdS(198),a=e.sdS(213);e.R7$(58),e.SpI(" ",e.i5U(59,17,"als.module",r.isJsActive),"\n"),e.R7$(30),e.SpI(" ",e.i5U(89,20,"app.module",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(8),e.SpI(" ",e.i5U(104,23,"cat.service",i.isJsActive),"\n"),e.R7$(4),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(85),e.SpI(" ",e.i5U(196,26,"app.module",c.isJsActive),"\n"),e.R7$(15),e.SpI(" ",e.i5U(211,29,"cat.service",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive)}},dependencies:[v.O,l.a,d.z,f.M],encapsulation:2,changeDetection:0})}return s})(),B=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-suites"]],features:[e.Vt3],decls:539,vars:32,consts:[["contentReference",""],["app5a5d186e01a304d4b6c459f8f1a9e055dcde32a2",""],["app41ce69c1dd35863d0c9ecd7851071af28bdf9b90",""],["app614b2f6f56cb4c83c5015e432e2a848a29540dcf",""],["app959a444907e6888077f966607c7795340c3bd6bd",""],["appdfdf3efaea489eecbae625ce819b4575f904901a",""],["app1640697ea555d3809f94b9d8b6759c9fff183260",""],["app282275ce30097b15e6f8712a09a3846584b7f345",""],["appf66b72ad3e23c612a7d873032b892fb389205c60",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/suites.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","suites-formerly-automock"],[1,"info"],["rel","nofollow","target","_blank","href","https://github.com/suites-dev/suites"],["appAnchor","","id","introduction"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","example-and-module-setup"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],["appAnchor","","id","testing-catsapiservice-with-testingmodule"],["appAnchor","","id","sociable-testing-example"],["appAnchor","","id","integration-testing-and-database"],["appAnchor","","id","sociable-unit-tests-integration-tests-and-mocking"],["appAnchor","","id","testing-ioc-container-registration"],["appAnchor","","id","comparison-between-solitary-sociable-integration-and-e2e-testing"],["appAnchor","","id","solitary-unit-tests"],["appAnchor","","id","sociable-unit-tests"],["appAnchor","","id","integration-tests"],["appAnchor","","id","e2e-tests"],["rel","nofollow","target","_blank","href","https://docs.nestjs.com/fundamentals/testing#end-to-end-testing"]],template:function(t,o){if(1&t&&(e.j41(0,"div",9,0)(2,"div",10)(3,"a",11),e.nrm(4,"i",12),e.k0s()(),e.j41(5,"h3",13),e.EFF(6,"Suites (formerly Automock)"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Suites is an opinionated and flexible testing meta-framework designed to enhance the software testing experience for backend systems. By bringing together a variety of testing tools into a unified framework, Suites streamlines the creation of reliable tests, helping to ensure the development of high-quality software."),e.k0s(),e.j41(9,"blockquote",14)(10,"strong"),e.EFF(11,"Hint"),e.k0s(),e.j41(12,"code"),e.EFF(13,"Suites"),e.k0s(),e.EFF(14," is a third-party package and is not maintained by the NestJS core team. Please report any issues with the library to the "),e.j41(15,"a",15),e.EFF(16,"appropriate repository"),e.k0s(),e.EFF(17,".\n"),e.k0s(),e.j41(18,"h4",16)(19,"span"),e.EFF(20,"Introduction"),e.k0s()(),e.j41(21,"p"),e.EFF(22,"Inversion of Control (IoC) is a fundamental principle in the NestJS framework, enabling a modular, testable architecture. While NestJS offers built-in tools for creating testing modules, Suites provides an alternative approach that emphasizes testing isolated units or small groups of units together. Suites uses a virtual container for dependencies, where mocks are automatically generated, eliminating the need to manually replace each provider with a mock in the IoC (or DI) container. This approach can be used either in place of or alongside NestJS\u2019s "),e.j41(23,"code"),e.EFF(24,"Test.createTestingModule"),e.k0s(),e.EFF(25," method, offering more flexibility for unit testing based on your needs."),e.k0s(),e.j41(26,"h4",17)(27,"span"),e.EFF(28,"Installation"),e.k0s()(),e.j41(29,"p"),e.EFF(30,"To use Suites with NestJS, install the necessary packages:"),e.k0s(),e.j41(31,"pre")(32,"code",18),e.EFF(33,"\n$ npm i -D @suites/unit @suites/di.nestjs @suites/doubles.jest\n"),e.k0s()(),e.j41(34,"blockquote",14)(35,"strong"),e.EFF(36,"Hint"),e.k0s(),e.j41(37,"code"),e.EFF(38,"Suites"),e.k0s(),e.EFF(39," supports Vitest and Sinon as test doubles as well, "),e.j41(40,"code"),e.EFF(41,"@suites/doubles.vitest"),e.k0s(),e.EFF(42," and "),e.j41(43,"code"),e.EFF(44,"@suites/doubles.sinon"),e.k0s(),e.EFF(45," respectively.\n"),e.k0s(),e.j41(46,"h4",19)(47,"span"),e.EFF(48,"Example and module setup"),e.k0s()(),e.j41(49,"p"),e.EFF(50,"Consider a module setup for "),e.j41(51,"code"),e.EFF(52,"CatsService"),e.k0s(),e.EFF(53," that includes "),e.j41(54,"code"),e.EFF(55,"CatsApiService"),e.k0s(),e.EFF(56,", "),e.j41(57,"code"),e.EFF(58,"CatsDAL"),e.k0s(),e.EFF(59,", "),e.j41(60,"code"),e.EFF(61,"HttpClient"),e.k0s(),e.EFF(62,", and "),e.j41(63,"code"),e.EFF(64,"Logger"),e.k0s(),e.EFF(65,". This\nwill be our base for the examples in this recipe:"),e.k0s(),e.j41(66,"app-copy-button",20)(67,"span",21),e.EFF(68),e.nI1(69,"extension"),e.nrm(70,"app-tabs",null,1),e.k0s(),e.j41(72,"pre")(73,"code",22),e.EFF(74,"\nimport { HttpModule } from '@nestjs/axios';\nimport { PrismaModule } from '../prisma.module';\n\n@Module({\n  imports: [HttpModule.register({ baseUrl: 'https://api.cats.com/' }), PrismaModule],\n  providers: [CatsService, CatsApiService, CatsDAL, Logger],\n  exports: [CatsService],\n})\nexport class CatsModule {}\n"),e.k0s()()(),e.j41(75,"p"),e.EFF(76,"Both the "),e.j41(77,"code"),e.EFF(78,"HttpModule"),e.k0s(),e.EFF(79," and "),e.j41(80,"code"),e.EFF(81,"PrismaModule"),e.k0s(),e.EFF(82," are exporting providers to the host module."),e.k0s(),e.j41(83,"p"),e.EFF(84,"Let's start by testing the "),e.j41(85,"code"),e.EFF(86,"CatsHttpService"),e.k0s(),e.EFF(87," in isolation. This service is responsible for fetching cat data from an API and logging the operation."),e.k0s(),e.j41(88,"app-copy-button",20)(89,"span",21),e.EFF(90),e.nI1(91,"extension"),e.nrm(92,"app-tabs",null,2),e.k0s(),e.j41(94,"pre")(95,"code",22),e.EFF(96,"\n@Injectable()\nexport class CatsHttpService {\n  constructor(private httpClient: HttpClient, private logger: Logger) {}\n\n  async fetchCats(): Promise<Cat[]> {\n    this.logger.log('Fetching cats from the API');\n    const response = await this.httpClient.get('/cats');\n    return response.data;\n  }\n}\n"),e.k0s()()(),e.j41(97,"p"),e.EFF(98,"We want to isolate "),e.j41(99,"code"),e.EFF(100,"CatsHttpService"),e.k0s(),e.EFF(101," and mock its dependencies, "),e.j41(102,"code"),e.EFF(103,"HttpClient"),e.k0s(),e.EFF(104," and "),e.j41(105,"code"),e.EFF(106,"Logger"),e.k0s(),e.EFF(107,". Suites allows us to do this\neasily using the "),e.j41(108,"code"),e.EFF(109,".solitary()"),e.k0s(),e.EFF(110," method from "),e.j41(111,"code"),e.EFF(112,"TestBed"),e.k0s(),e.EFF(113,"."),e.k0s(),e.j41(114,"app-copy-button",20)(115,"span",21),e.EFF(116),e.nI1(117,"extension"),e.nrm(118,"app-tabs",null,3),e.k0s(),e.j41(120,"pre")(121,"code",22),e.EFF(122,"\nimport { TestBed, Mocked } from '@suites/unit';\n\ndescribe('Cats Http Service Unit Test', () => {\n  let catsHttpService: CatsHttpService;\n  let httpClient: Mocked<HttpClient>;\n  let logger: Mocked<Logger>;\n\n  beforeAll(async () => {\n    // Isolate CatsHttpService and mock HttpClient and Logger\n    const { unit, unitRef } = await TestBed.solitary(CatsHttpService).compile();\n\n    catsHttpService = unit;\n    httpClient = unitRef.get(HttpClient);\n    logger = unitRef.get(Logger);\n  });\n\n  it('should fetch cats from the API and log the operation', async () => {\n    const catsFixtures: Cat[] = [{ id: 1, name: 'Catty' }, { id: 2, name: 'Mitzy' }];\n    httpClient.get.mockResolvedValue({ data: catsFixtures });\n\n    const cats = await catsHttpService.fetchCats();\n\n    expect(logger.log).toHaveBeenCalledWith('Fetching cats from the API');\n    expect(httpClient.get).toHaveBeenCalledWith('/cats');\n    expect(cats).toEqual<Cat[]>(catsFixtures);\n  });\n});\n"),e.k0s()()(),e.j41(123,"p"),e.EFF(124,"In the example above, Suites automatically mocks the dependencies of "),e.j41(125,"code"),e.EFF(126,"CatsHttpService"),e.k0s(),e.EFF(127," using "),e.j41(128,"code"),e.EFF(129,"TestBed.solitary()"),e.k0s(),e.EFF(130,". This makes the setup easier since you don\u2019t have to manually mock each dependency."),e.k0s(),e.j41(131,"ul")(132,"li"),e.EFF(133,"Auto-Mocking of Dependencies: Suites generates mocks for all dependencies of the unit being tested."),e.k0s(),e.j41(134,"li"),e.EFF(135,"Empty Behavior of Mocks: Initially, these mocks don\u2019t have any predefined behavior. You\u2019ll need to specify their behavior as needed for your tests."),e.k0s(),e.j41(136,"li")(137,"code"),e.EFF(138,"unit"),e.k0s(),e.EFF(139," and "),e.j41(140,"code"),e.EFF(141,"unitRef"),e.k0s(),e.EFF(142," properties:"),e.j41(143,"ul")(144,"li")(145,"code"),e.EFF(146,"unit"),e.k0s(),e.EFF(147," refers to the actual instance of the class being tested, complete with its mocked dependencies."),e.k0s(),e.j41(148,"li")(149,"code"),e.EFF(150,"unitRef"),e.k0s(),e.EFF(151," is a reference that allows you to access the mocked dependencies."),e.k0s()()()(),e.j41(152,"h4",23)(153,"span"),e.EFF(154,"Testing "),e.j41(155,"code"),e.EFF(156,"CatsApiService"),e.k0s(),e.EFF(157," with "),e.j41(158,"code"),e.EFF(159,"TestingModule"),e.k0s()()(),e.j41(160,"p"),e.EFF(161,"For "),e.j41(162,"code"),e.EFF(163,"CatsApiService"),e.k0s(),e.EFF(164,", we want to ensure that the "),e.j41(165,"code"),e.EFF(166,"HttpModule"),e.k0s(),e.EFF(167," is properly imported and configured in the "),e.j41(168,"code"),e.EFF(169,"CatsModule"),e.k0s(),e.EFF(170," host module. This includes verifying that the base URL (and other configurations) for "),e.j41(171,"code"),e.EFF(172,"Axios"),e.k0s(),e.EFF(173," is set correctly."),e.k0s(),e.j41(174,"p"),e.EFF(175,"In this case, we won\u2019t use Suites; instead, we\u2019ll use Nest\u2019s "),e.j41(176,"code"),e.EFF(177,"TestingModule"),e.k0s(),e.EFF(178," to test the actual configuration of "),e.j41(179,"code"),e.EFF(180,"HttpModule"),e.k0s(),e.EFF(181,". We\u2019ll utilize "),e.j41(182,"code"),e.EFF(183,"nock"),e.k0s(),e.EFF(184," to mock HTTP requests without mocking the "),e.j41(185,"code"),e.EFF(186,"HttpClient"),e.k0s(),e.EFF(187," in this scenario."),e.k0s(),e.j41(188,"app-copy-button",20)(189,"span",21),e.EFF(190),e.nI1(191,"extension"),e.nrm(192,"app-tabs",null,4),e.k0s(),e.j41(194,"pre")(195,"code",22),e.EFF(196,"\nimport { HttpClient } from '@nestjs/axios';\n\n@Injectable()\nexport class CatsApiService {\n  constructor(private httpClient: HttpClient) {}\n\n  async getCatById(id: number): Promise<Cat> {\n    const response = await this.httpClient.get(`/cats/${id}`);\n    return response.data;\n  }\n}\n"),e.k0s()()(),e.j41(197,"p"),e.EFF(198,"We need to test "),e.j41(199,"code"),e.EFF(200,"CatsApiService"),e.k0s(),e.EFF(201," with a real, unmocked "),e.j41(202,"code"),e.EFF(203,"HttpClient"),e.k0s(),e.EFF(204," to ensure the DI and configuration of "),e.j41(205,"code"),e.EFF(206,"Axios"),e.k0s(),e.EFF(207," (http)\nare correct. This involves importing the "),e.j41(208,"code"),e.EFF(209,"CatsModule"),e.k0s(),e.EFF(210," and using "),e.j41(211,"code"),e.EFF(212,"nock"),e.k0s(),e.EFF(213," for HTTP request mocking."),e.k0s(),e.j41(214,"app-copy-button",20)(215,"span",21),e.EFF(216),e.nI1(217,"extension"),e.nrm(218,"app-tabs",null,5),e.k0s(),e.j41(220,"pre")(221,"code",22),e.EFF(222,"\nimport { Test } from '@nestjs/testing';\nimport * as nock from 'nock';\n\ndescribe('Cats Api Service Integration Test', () => {\n  let catsApiService: CatsApiService;\n\n  beforeAll(async () => {\n    const moduleRef = await Test.createTestingModule({\n      imports: [CatsModule],\n    }).compile();\n\n    catsApiService = moduleRef.get(CatsApiService);\n  });\n\n  afterEach(() => {\n    nock.cleanAll();\n  });\n\n  it('should fetch cat by id using real HttpClient', async () => {\n    const catFixture: Cat = { id: 1, name: 'Catty' };\n\n    nock('https://api.cats.com') // Making this URL identical to the one in HttpModule registration\n      .get('/cats/1')\n      .reply(200, catFixture);\n\n    const cat = await catsApiService.getCatById(1);\n    expect(cat).toEqual<Cat>(catFixture);\n  });\n});\n"),e.k0s()()(),e.j41(223,"h4",24)(224,"span"),e.EFF(225,"Sociable Testing Example"),e.k0s()(),e.j41(226,"p"),e.EFF(227,"Next, let's test "),e.j41(228,"code"),e.EFF(229,"CatsService"),e.k0s(),e.EFF(230,", which depends on "),e.j41(231,"code"),e.EFF(232,"CatsApiService"),e.k0s(),e.EFF(233," and "),e.j41(234,"code"),e.EFF(235,"CatsDAL"),e.k0s(),e.EFF(236,". We'll mock "),e.j41(237,"code"),e.EFF(238,"CatsApiService"),e.k0s(),e.EFF(239," and\nexpose "),e.j41(240,"code"),e.EFF(241,"CatsDAL"),e.k0s(),e.EFF(242,"."),e.k0s(),e.j41(243,"app-copy-button",20)(244,"span",21),e.EFF(245),e.nI1(246,"extension"),e.nrm(247,"app-tabs",null,6),e.k0s(),e.j41(249,"pre")(250,"code",22),e.EFF(251,"\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class CatsDAL {\n  constructor(private prisma: PrismaClient) {}\n\n  async saveCat(cat: Cat): Promise<Cat> {\n    return this.prisma.cat.create({data: cat});\n  }\n}\n"),e.k0s()()(),e.j41(252,"p"),e.EFF(253,"Next up, we have the "),e.j41(254,"code"),e.EFF(255,"CatsService"),e.k0s(),e.EFF(256,", which depends on "),e.j41(257,"code"),e.EFF(258,"CatsApiService"),e.k0s(),e.EFF(259," and "),e.j41(260,"code"),e.EFF(261,"CatsDAL"),e.k0s(),e.EFF(262,":"),e.k0s(),e.j41(263,"app-copy-button",20)(264,"span",21),e.EFF(265),e.nI1(266,"extension"),e.nrm(267,"app-tabs",null,7),e.k0s(),e.j41(269,"pre")(270,"code",22),e.EFF(271,"\n@Injectable()\nexport class CatsService {\n  constructor(\n    private catsApiService: CatsApiService,\n    private catsDAL: CatsDAL\n  ) {}\n\n  async getAndSaveCat(id: number): Promise<Cat> {\n    const cat = await this.catsApiService.getCatById(id);\n    return this.catsDAL.saveCat(cat);\n  }\n}\n"),e.k0s()()(),e.j41(272,"p"),e.EFF(273,"And now, let's test "),e.j41(274,"code"),e.EFF(275,"CatsService"),e.k0s(),e.EFF(276," using sociable testing with Suites:"),e.k0s(),e.j41(277,"app-copy-button",20)(278,"span",21),e.EFF(279),e.nI1(280,"extension"),e.nrm(281,"app-tabs",null,8),e.k0s(),e.j41(283,"pre")(284,"code",22),e.EFF(285,"\nimport { TestBed, Mocked } from '@suites/unit';\nimport { PrismaClient } from '@prisma/client';\n\ndescribe('Cats Service Sociable Unit Test', () => {\n  let catsService: CatsService;\n  let prisma: Mocked<PrismaClient>;\n  let catsApiService: Mocked<CatsApiService>;\n\n  beforeAll(async () => {\n    // Sociable test setup, exposing CatsDAL and mocking CatsApiService\n    const { unit, unitRef } = await TestBed.sociable(CatsService)\n      .expose(CatsDAL)\n      .mock(CatsApiService)\n      .final({ getCatById: async () => ({ id: 1, name: 'Catty' })})\n      .compile();\n\n    catsService = unit;\n    prisma = unitRef.get(PrismaClient);\n  });\n\n  it('should get cat by id and save it', async () => {\n    const catFixture: Cat = { id: 1, name: 'Catty' };\n    prisma.cat.create.mockResolvedValue(catFixture);\n\n    const savedCat = await catsService.getAndSaveCat(1);\n\n    expect(prisma.cat.create).toHaveBeenCalledWith({ data: catFixture });\n    expect(savedCat).toEqual(catFixture);\n  });\n});\n"),e.k0s()()(),e.j41(286,"p"),e.EFF(287,"In this example, we use the "),e.j41(288,"code"),e.EFF(289,".sociable()"),e.k0s(),e.EFF(290," method to set up the test environment. We utilize the "),e.j41(291,"code"),e.EFF(292,".expose()"),e.k0s(),e.EFF(293," method to allow real interactions with "),e.j41(294,"code"),e.EFF(295,"CatsDAL"),e.k0s(),e.EFF(296,", while mocking "),e.j41(297,"code"),e.EFF(298,"CatsApiService"),e.k0s(),e.EFF(299," with the "),e.j41(300,"code"),e.EFF(301,".mock()"),e.k0s(),e.EFF(302," method. The "),e.j41(303,"code"),e.EFF(304,".final()"),e.k0s(),e.EFF(305," method establishes fixed behavior for "),e.j41(306,"code"),e.EFF(307,"CatsApiService"),e.k0s(),e.EFF(308,", ensuring consistent outcomes across tests."),e.k0s(),e.j41(309,"p"),e.EFF(310,"This approach emphasizes testing "),e.j41(311,"code"),e.EFF(312,"CatsService"),e.k0s(),e.EFF(313," with genuine interactions with "),e.j41(314,"code"),e.EFF(315,"CatsDAL"),e.k0s(),e.EFF(316,", which involves handling "),e.j41(317,"code"),e.EFF(318,"Prisma"),e.k0s(),e.EFF(319,". Suites will use "),e.j41(320,"code"),e.EFF(321,"CatsDAL"),e.k0s(),e.EFF(322," as is, and only its dependencies, like "),e.j41(323,"code"),e.EFF(324,"Prisma"),e.k0s(),e.EFF(325,", will be mocked in this case."),e.k0s(),e.j41(326,"p"),e.EFF(327,"It's important to note that this approach is "),e.j41(328,"strong"),e.EFF(329,"solely for verifying behavior"),e.k0s(),e.EFF(330," and differs from loading the entire testing module. Sociable tests are valuable for confirming the behavior of units in isolation from their direct dependencies, especially when you want to focus on the behavior and interactions of units."),e.k0s(),e.j41(331,"h4",25)(332,"span"),e.EFF(333,"Integration Testing and Database"),e.k0s()(),e.j41(334,"p"),e.EFF(335,"For "),e.j41(336,"code"),e.EFF(337,"CatsDAL"),e.k0s(),e.EFF(338,", it's possible to test against a real database such as SQLite or PostgreSQL (for instance, using Docker Compose). However, for this example, we will mock "),e.j41(339,"code"),e.EFF(340,"Prisma"),e.k0s(),e.EFF(341," and focus on sociable testing. The reason for mocking "),e.j41(342,"code"),e.EFF(343,"Prisma"),e.k0s(),e.EFF(344," is to avoid I/O operations and concentrate on the behavior of "),e.j41(345,"code"),e.EFF(346,"CatsService"),e.k0s(),e.EFF(347," in isolation. That said, you can also conduct tests with real I/O operations and a live database."),e.k0s(),e.j41(348,"h4",26)(349,"span"),e.EFF(350,"Sociable Unit Tests, Integration Tests, and Mocking"),e.k0s()(),e.j41(351,"ul")(352,"li")(353,"p"),e.EFF(354,"Sociable Unit Tests: These focus on testing the interactions and behaviors between units while mocking their deeper dependencies. In this example, we mock "),e.j41(355,"code"),e.EFF(356,"Prisma"),e.k0s(),e.EFF(357," and expose "),e.j41(358,"code"),e.EFF(359,"CatsDAL"),e.k0s(),e.EFF(360,"."),e.k0s()(),e.j41(361,"li")(362,"p"),e.EFF(363,"Integration Tests: These involve real I/O operations and a fully configured dependency injection (DI) setup. Testing "),e.j41(364,"code"),e.EFF(365,"CatsApiService"),e.k0s(),e.EFF(366," with "),e.j41(367,"code"),e.EFF(368,"HttpModule"),e.k0s(),e.EFF(369," and "),e.j41(370,"code"),e.EFF(371,"nock"),e.k0s(),e.EFF(372," is considered an integration test, as it verifies the real configuration and interactions of "),e.j41(373,"code"),e.EFF(374,"HttpClient"),e.k0s(),e.EFF(375,". In this scenario, we will use Nest's "),e.j41(376,"code"),e.EFF(377,"TestingModule"),e.k0s(),e.EFF(378," to load the actual module configuration."),e.k0s()()(),e.j41(379,"p")(380,"strong"),e.EFF(381,"Exercise caution when using mocks."),e.k0s(),e.EFF(382," Be sure to test I/O operations and DI configurations (especially when HTTP or database interactions are involved). After validating these components with integration tests, you can confidently mock them for sociable unit tests to focus on behavior and interactions. Suites sociable tests are geared towards verifying the behavior of units in isolation from their direct dependencies, while integration tests ensure that the overall system configuration and I/O operations function correctly."),e.k0s(),e.j41(383,"h4",27)(384,"span"),e.EFF(385,"Testing IoC Container Registration"),e.k0s()(),e.j41(386,"p"),e.EFF(387,"It's essential to verify that your DI container is properly configured to prevent runtime errors. This includes ensuring that all providers, services, and modules are registered and injected correctly. Testing the DI container configuration helps catch misconfigurations early, preventing issues that might only arise at runtime."),e.k0s(),e.j41(388,"p"),e.EFF(389,"To confirm that the IoC container is set up correctly, let's create an integration test that loads the actual module configuration and verifies that all providers are registered and injected properly."),e.k0s(),e.j41(390,"app-copy-button")(391,"pre")(392,"code",22),e.EFF(393,"\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { CatsModule } from './cats.module';\nimport { CatsService } from './cats.service';\n\ndescribe('Cats Module Integration Test', () => {\n  let moduleRef: TestingModule;\n\n  beforeAll(async () => {\n    moduleRef = await Test.createTestingModule({\n      imports: [CatsModule],\n    }).compile();\n  });\n\n  it('should resolve exported providers from the ioc container', () => {\n    const catsService = moduleRef.get(CatsService);\n    expect(catsService).toBeDefined();\n  });\n});\n"),e.k0s()()(),e.j41(394,"h4",28)(395,"span"),e.EFF(396,"Comparison Between Solitary, Sociable, Integration, and E2E Testing"),e.k0s()(),e.j41(397,"h4",29)(398,"span"),e.EFF(399,"Solitary Unit Tests"),e.k0s()(),e.j41(400,"ul")(401,"li")(402,"strong"),e.EFF(403,"Focus"),e.k0s(),e.EFF(404,": Test single unit (class) in full isolation."),e.k0s(),e.j41(405,"li")(406,"strong"),e.EFF(407,"Use Case"),e.k0s(),e.EFF(408,": Testing "),e.j41(409,"code"),e.EFF(410,"CatsHttpService"),e.k0s(),e.EFF(411,"."),e.k0s(),e.j41(412,"li")(413,"strong"),e.EFF(414,"Tools"),e.k0s(),e.EFF(415,": Suites' "),e.j41(416,"code"),e.EFF(417,"TestBed.solitary()"),e.k0s(),e.EFF(418," method."),e.k0s(),e.j41(419,"li")(420,"strong"),e.EFF(421,"Example"),e.k0s(),e.EFF(422,": Mocking "),e.j41(423,"code"),e.EFF(424,"HttpClient"),e.k0s(),e.EFF(425," and testing "),e.j41(426,"code"),e.EFF(427,"CatsHttpService"),e.k0s(),e.EFF(428,"."),e.k0s()(),e.j41(429,"h4",30)(430,"span"),e.EFF(431,"Sociable Unit Tests"),e.k0s()(),e.j41(432,"ul")(433,"li")(434,"strong"),e.EFF(435,"Focus"),e.k0s(),e.EFF(436,": Verify interactions between units while mocking deeper dependencies."),e.k0s(),e.j41(437,"li")(438,"strong"),e.EFF(439,"Use Case"),e.k0s(),e.EFF(440,": Testing "),e.j41(441,"code"),e.EFF(442,"CatsService"),e.k0s(),e.EFF(443," with a mocked "),e.j41(444,"code"),e.EFF(445,"CatsApiService"),e.k0s(),e.EFF(446," and exposing "),e.j41(447,"code"),e.EFF(448,"CatsDAL"),e.k0s(),e.EFF(449,"."),e.k0s(),e.j41(450,"li")(451,"strong"),e.EFF(452,"Tools"),e.k0s(),e.EFF(453,": Suites' "),e.j41(454,"code"),e.EFF(455,"TestBed.sociable()"),e.k0s(),e.EFF(456," method."),e.k0s(),e.j41(457,"li")(458,"strong"),e.EFF(459,"Example"),e.k0s(),e.EFF(460,": Mocking "),e.j41(461,"code"),e.EFF(462,"Prisma"),e.k0s(),e.EFF(463," and testing "),e.j41(464,"code"),e.EFF(465,"CatsService"),e.k0s(),e.EFF(466,"."),e.k0s()(),e.j41(467,"h4",31)(468,"span"),e.EFF(469,"Integration Tests"),e.k0s()(),e.j41(470,"ul")(471,"li")(472,"strong"),e.EFF(473,"Focus"),e.k0s(),e.EFF(474,": Involve real I/O operations and fully configured modules (IoC container)."),e.k0s(),e.j41(475,"li")(476,"strong"),e.EFF(477,"Use Case"),e.k0s(),e.EFF(478,": Testing "),e.j41(479,"code"),e.EFF(480,"CatsApiService"),e.k0s(),e.EFF(481," with "),e.j41(482,"code"),e.EFF(483,"HttpModule"),e.k0s(),e.EFF(484," and "),e.j41(485,"code"),e.EFF(486,"nock"),e.k0s(),e.EFF(487,"."),e.k0s(),e.j41(488,"li")(489,"strong"),e.EFF(490,"Tools"),e.k0s(),e.EFF(491,": Nest's "),e.j41(492,"code"),e.EFF(493,"TestingModule"),e.k0s(),e.EFF(494,"."),e.k0s(),e.j41(495,"li")(496,"strong"),e.EFF(497,"Example"),e.k0s(),e.EFF(498,": Testing the real configuration and interaction of "),e.j41(499,"code"),e.EFF(500,"HttpClient"),e.k0s(),e.EFF(501,"."),e.k0s()(),e.j41(502,"h4",32)(503,"span"),e.EFF(504,"E2E Tests"),e.k0s()(),e.j41(505,"ul")(506,"li")(507,"strong"),e.EFF(508,"Focus"),e.k0s(),e.EFF(509,": Cover the interaction of classes and modules at a more aggregate level."),e.k0s(),e.j41(510,"li")(511,"strong"),e.EFF(512,"Use Case"),e.k0s(),e.EFF(513,": Testing the full behavior of the system from the perspective of the end-user."),e.k0s(),e.j41(514,"li")(515,"strong"),e.EFF(516,"Tools"),e.k0s(),e.EFF(517,": Nest's "),e.j41(518,"code"),e.EFF(519,"TestingModule"),e.k0s(),e.EFF(520,", "),e.j41(521,"code"),e.EFF(522,"supertest"),e.k0s(),e.EFF(523,"."),e.k0s(),e.j41(524,"li")(525,"strong"),e.EFF(526,"Example"),e.k0s(),e.EFF(527,": Testing the "),e.j41(528,"code"),e.EFF(529,"CatsModule"),e.k0s(),e.EFF(530," using "),e.j41(531,"code"),e.EFF(532,"supertest"),e.k0s(),e.EFF(533," to simulate HTTP requests."),e.k0s()(),e.j41(534,"p"),e.EFF(535,"Refer to the "),e.j41(536,"a",33),e.EFF(537,"NestJS official testing guide"),e.k0s(),e.EFF(538," for more\ndetails on setting up and running E2E tests."),e.k0s()()),2&t){const r=e.sdS(71),u=e.sdS(93),i=e.sdS(119),c=e.sdS(193),a=e.sdS(219),F=e.sdS(248),E=e.sdS(268),j=e.sdS(282);e.R7$(68),e.SpI(" ",e.i5U(69,8,"cats.module",r.isJsActive),"\n"),e.R7$(22),e.SpI(" ",e.i5U(91,11,"cats-http.service",u.isJsActive),"\n"),e.R7$(26),e.SpI(" ",e.i5U(117,14,"cats-http.service.spec",i.isJsActive),"\n"),e.R7$(74),e.SpI(" ",e.i5U(191,17,"cats-api.service",c.isJsActive),"\n"),e.R7$(26),e.SpI(" ",e.i5U(217,20,"cats-api.service.integration.test",a.isJsActive),"\n"),e.R7$(29),e.SpI(" ",e.i5U(246,23,"cats.dal",F.isJsActive),"\n"),e.R7$(20),e.SpI(" ",e.i5U(266,26,"cats.service",E.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(280,29,"cats.service.spec",j.isJsActive),"\n")}},dependencies:[v.O,l.a,d.z,f.M],encapsulation:2,changeDetection:0})}return s})(),V=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-swc"]],features:[e.Vt3],decls:405,vars:0,consts:[["contentReference",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/swc.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","swc"],["rel","nofollow","target","_blank","href","https://swc.rs/"],[1,"info"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","pour-commencer"],["href","/recipes/swc#monorepo"],[1,"language-json"],["appAnchor","","id","v\xe9rification-de-type"],["appAnchor","","id","plugins-cli-swc"],["appAnchor","","id","swc-configuration"],["appAnchor","","id","monorepo"],[1,"language-js"],["appAnchor","","id","monorepo-et-plugins-cli"],[1,"language-ts"],["appAnchor","","id","pi\xe8ges-courants"],[1,"language-typescript"],["routerLink","/fundamentals/circular-dependency"],["id","jest--swc"],["href","/recipes/swc#monorepo-et-plugins-cli"],["id","vitest"],["rel","nofollow","target","_blank","href","https://vitest.dev/"],["appAnchor","","id","installation-1"],["appAnchor","","id","configuration"],["appAnchor","","id","mise-\xe0-jour-des-imports-dans-les-tests-e2e"],["rel","nofollow","target","_blank","href","https://github.com/TrilonIO/nest-vitest"]],template:function(t,o){1&t&&(e.j41(0,"div",1,0)(2,"div",2)(3,"a",3),e.nrm(4,"i",4),e.k0s()(),e.j41(5,"h3",5),e.EFF(6,"SWC"),e.k0s(),e.j41(7,"p")(8,"a",6),e.EFF(9,"SWC"),e.k0s(),e.EFF(10," (Speedy Web Compiler) est une plateforme extensible bas\xe9e sur Rust qui peut \xeatre utilis\xe9e \xe0 la fois pour la compilation et le bundling.\nL'utilisation de SWC avec Nest CLI est un moyen simple et efficace d'acc\xe9l\xe9rer consid\xe9rablement votre processus de d\xe9veloppement."),e.k0s(),e.j41(11,"blockquote",7)(12,"strong"),e.EFF(13,"Astuce"),e.k0s(),e.EFF(14," SWC est environ "),e.j41(15,"strong"),e.EFF(16,"x20 fois plus rapide"),e.k0s(),e.EFF(17," que le compilateur TypeScript par d\xe9faut.\n"),e.k0s(),e.j41(18,"h4",8)(19,"span"),e.EFF(20,"Installation"),e.k0s()(),e.j41(21,"p"),e.EFF(22,"Pour commencer, installez d'abord quelques packages :"),e.k0s(),e.j41(23,"pre")(24,"code",9),e.EFF(25,"\n$ npm i --save-dev @swc/cli @swc/core\n"),e.k0s()(),e.j41(26,"h4",10)(27,"span"),e.EFF(28,"Pour commencer"),e.k0s()(),e.j41(29,"p"),e.EFF(30,"Une fois le processus d'installation termin\xe9, vous pouvez utiliser le constructeur "),e.j41(31,"code"),e.EFF(32,"swc"),e.k0s(),e.EFF(33," avec Nest CLI, comme suit :"),e.k0s(),e.j41(34,"pre")(35,"code",9),e.EFF(36,"\n$ nest start -b swc\n# OU nest start --builder swc\n"),e.k0s()(),e.j41(37,"blockquote",7)(38,"strong"),e.EFF(39,"Astuce"),e.k0s(),e.EFF(40," Si votre d\xe9p\xf4t est un monorepo, consultez "),e.j41(41,"a",11),e.EFF(42,"cette section"),e.k0s(),e.EFF(43,".\n"),e.k0s(),e.j41(44,"p"),e.EFF(45,"Au lieu de passer le drapeau "),e.j41(46,"code"),e.EFF(47,"-b"),e.k0s(),e.EFF(48,", vous pouvez \xe9galement d\xe9finir la propri\xe9t\xe9 "),e.j41(49,"code"),e.EFF(50,"compilerOptions.builder"),e.k0s(),e.EFF(51," \xe0 "),e.j41(52,"code"),e.EFF(53,'"swc"'),e.k0s(),e.EFF(54," dans votre fichier "),e.j41(55,"code"),e.EFF(56,"nest-cli.json"),e.k0s(),e.EFF(57,", comme ceci:"),e.k0s(),e.j41(58,"pre")(59,"code",12),e.EFF(60,'\n{\n  "compilerOptions": {\n    "builder": "swc"\n  }\n}\n'),e.k0s()(),e.j41(61,"p"),e.EFF(62,"Pour personnaliser le comportement du constructeur, vous pouvez lui passer un objet contenant deux attributs, "),e.j41(63,"code"),e.EFF(64,"type"),e.k0s(),e.EFF(65," ("),e.j41(66,"code"),e.EFF(67,'"swc"'),e.k0s(),e.EFF(68,") et "),e.j41(69,"code"),e.EFF(70,"options"),e.k0s(),e.EFF(71,", comme suit :"),e.k0s(),e.j41(72,"pre")(73,"code",12),e.EFF(74,'\n"compilerOptions": {\n  "builder": {\n    "type": "swc",\n    "options": {\n      "swcrcPath": "infrastructure/.swcrc",\n    }\n  }\n}\n'),e.k0s()(),e.j41(75,"p"),e.EFF(76,"Pour ex\xe9cuter l'application en mode veille, utilisez la commande suivante :"),e.k0s(),e.j41(77,"pre")(78,"code",9),e.EFF(79,"\n$ nest start -b swc -w\n# OU nest start --builder swc --watch\n"),e.k0s()(),e.j41(80,"h4",13)(81,"span"),e.EFF(82,"V\xe9rification de type"),e.k0s()(),e.j41(83,"p"),e.EFF(84,"SWC n'effectue pas de v\xe9rification de type lui-m\xeame (contrairement au compilateur TypeScript par d\xe9faut), donc pour l'activer, vous devez utiliser l'option "),e.j41(85,"code"),e.EFF(86,"--type-check"),e.k0s(),e.EFF(87," :"),e.k0s(),e.j41(88,"pre")(89,"code",9),e.EFF(90,"\n$ nest start -b swc --type-check\n"),e.k0s()(),e.j41(91,"p"),e.EFF(92,"Cette commande demandera au CLI de Nest d'ex\xe9cuter "),e.j41(93,"code"),e.EFF(94,"tsc"),e.k0s(),e.EFF(95," en mode "),e.j41(96,"code"),e.EFF(97,"noEmit"),e.k0s(),e.EFF(98," en m\xeame temps que SWC, qui effectuera la v\xe9rification de type de mani\xe8re asynchrone. Encore une fois, au lieu de passer le drapeau "),e.j41(99,"code"),e.EFF(100,"--type-check"),e.k0s(),e.EFF(101,", vous pouvez aussi simplement mettre la propri\xe9t\xe9 "),e.j41(102,"code"),e.EFF(103,"compilerOptions.typeCheck"),e.k0s(),e.EFF(104," \xe0 "),e.j41(105,"code"),e.EFF(106,"true"),e.k0s(),e.EFF(107," dans votre fichier "),e.j41(108,"code"),e.EFF(109,"nest-cli.json"),e.k0s(),e.EFF(110,", comme ceci : "),e.k0s(),e.j41(111,"pre")(112,"code",12),e.EFF(113,'\n{\n  "compilerOptions": {\n    "builder": "swc",\n    "typeCheck": true\n  }\n}\n'),e.k0s()(),e.j41(114,"h4",14)(115,"span"),e.EFF(116,"Plugins CLI (SWC)"),e.k0s()(),e.j41(117,"p"),e.EFF(118,"L'option "),e.j41(119,"code"),e.EFF(120,"--type-check"),e.k0s(),e.EFF(121," ex\xe9cutera automatiquement les plugins "),e.j41(122,"strong"),e.EFF(123,"NestJS CLI"),e.k0s(),e.EFF(124," et produira un fichier de m\xe9tadonn\xe9es s\xe9rialis\xe9 qui pourra \xeatre charg\xe9 par l'application au moment de l'ex\xe9cution."),e.k0s(),e.j41(125,"h4",15)(126,"span"),e.EFF(127,"SWC configuration"),e.k0s()(),e.j41(128,"p"),e.EFF(129,"SWC builder est pr\xe9configur\xe9 pour r\xe9pondre aux exigences des applications NestJS. Cependant, vous pouvez personnaliser la configuration en cr\xe9ant un fichier "),e.j41(130,"code"),e.EFF(131,".swcrc"),e.k0s(),e.EFF(132," dans le r\xe9pertoire racine et en modifiant les options comme vous le souhaitez."),e.k0s(),e.j41(133,"pre")(134,"code",12),e.EFF(135,'\n{\n  "$schema": "https://json.schemastore.org/swcrc",\n  "sourceMaps": true,\n  "jsc": {\n    "parser": {\n      "syntax": "typescript",\n      "decorators": true,\n      "dynamicImport": true\n    },\n    "baseUrl": "./"\n  },\n  "minify": false\n}\n'),e.k0s()(),e.j41(136,"h4",16)(137,"span"),e.EFF(138,"Monorepo"),e.k0s()(),e.j41(139,"p"),e.EFF(140,"Si votre d\xe9p\xf4t est un monorepo, alors au lieu d'utiliser le constructeur "),e.j41(141,"code"),e.EFF(142,"swc"),e.k0s(),e.EFF(143,", vous devez configurer "),e.j41(144,"code"),e.EFF(145,"webpack"),e.k0s(),e.EFF(146," pour utiliser "),e.j41(147,"code"),e.EFF(148,"swc-loader"),e.k0s(),e.EFF(149,"."),e.k0s(),e.j41(150,"p"),e.EFF(151,"Tout d'abord, installons le package n\xe9cessaire :"),e.k0s(),e.j41(152,"pre")(153,"code",9),e.EFF(154,"\n$ npm i --save-dev swc-loader\n"),e.k0s()(),e.j41(155,"p"),e.EFF(156,"Une fois l'installation termin\xe9e, cr\xe9ez un fichier "),e.j41(157,"code"),e.EFF(158,"webpack.config.js"),e.k0s(),e.EFF(159," dans le r\xe9pertoire racine de votre application avec le contenu suivant :"),e.k0s(),e.j41(160,"pre")(161,"code",17),e.EFF(162,"\nconst swcDefaultConfig = require('@nestjs/cli/lib/compiler/defaults/swc-defaults').swcDefaultsFactory().swcOptions;\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.ts$/,\n        exclude: /node_modules/,\n        use: {\n          loader: 'swc-loader',\n          options: swcDefaultConfig,\n        },\n      },\n    ],\n  },\n};\n"),e.k0s()(),e.j41(163,"h4",18)(164,"span"),e.EFF(165,"Monorepo et plugins CLI"),e.k0s()(),e.j41(166,"p"),e.EFF(167,"Maintenant, si vous utilisez des plugins CLI, "),e.j41(168,"code"),e.EFF(169,"swc-loader"),e.k0s(),e.EFF(170," ne les chargera pas automatiquement. A la place, vous devez cr\xe9er un fichier s\xe9par\xe9 qui les chargera manuellement. Pour ce faire, il faut\nd\xe9clarez un fichier "),e.j41(171,"code"),e.EFF(172,"generate-metadata.ts"),e.k0s(),e.EFF(173," pr\xe8s du fichier "),e.j41(174,"code"),e.EFF(175,"main.ts"),e.k0s(),e.EFF(176," avec le contenu suivant :"),e.k0s(),e.j41(177,"app-copy-button")(178,"pre")(179,"code",19),e.EFF(180,"\nimport { PluginMetadataGenerator } from '@nestjs/cli/lib/compiler/plugins';\nimport { ReadonlyVisitor } from '@nestjs/swagger/dist/plugin/plugin-metadata-generator';\n\nconst generator = new PluginMetadataGenerator();\ngenerator.generate({\n  visitors: [new ReadonlyVisitor({ introspectComments: true, pathToSource: __dirname })],\n  outputDir: __dirname,\n  watch: true,\n  tsconfigPath: 'apps/<name>/tsconfig.app.json',\n});\n"),e.k0s()()(),e.j41(181,"blockquote",7)(182,"strong"),e.EFF(183,"Astuce"),e.k0s(),e.EFF(184," Dans cet exemple, nous avons utilis\xe9 le plugin "),e.j41(185,"code"),e.EFF(186,"@nestjs/swagger"),e.k0s(),e.EFF(187,", mais vous pouvez utiliser n'importe quel plugin de votre choix.\n"),e.k0s(),e.j41(188,"p"),e.EFF(189,"La m\xe9thode "),e.j41(190,"code"),e.EFF(191,"generate()"),e.k0s(),e.EFF(192," accepte les options suivantes :"),e.k0s(),e.j41(193,"table"),e.nrm(194,"thead"),e.j41(195,"tbody")(196,"tr")(197,"td")(198,"code"),e.EFF(199,"watch"),e.k0s()(),e.j41(200,"td"),e.EFF(201,"S'il faut surveiller les changements dans le projet."),e.k0s()(),e.j41(202,"tr")(203,"td")(204,"code"),e.EFF(205,"tsconfigPath"),e.k0s()(),e.j41(206,"td"),e.EFF(207,"Chemin vers le fichier "),e.j41(208,"code"),e.EFF(209,"tsconfig.json"),e.k0s(),e.EFF(210,". Relatif au r\xe9pertoire de travail courant ("),e.j41(211,"code"),e.EFF(212,"process.cwd()"),e.k0s(),e.EFF(213,")."),e.k0s()(),e.j41(214,"tr")(215,"td")(216,"code"),e.EFF(217,"outputDir"),e.k0s()(),e.j41(218,"td"),e.EFF(219,"Chemin d'acc\xe8s au r\xe9pertoire dans lequel le fichier de m\xe9tadonn\xe9es sera enregistr\xe9."),e.k0s()(),e.j41(220,"tr")(221,"td")(222,"code"),e.EFF(223,"visitors"),e.k0s()(),e.j41(224,"td"),e.EFF(225,"Tableau des visiteurs qui seront utilis\xe9s pour g\xe9n\xe9rer des m\xe9tadonn\xe9es."),e.k0s()(),e.j41(226,"tr")(227,"td")(228,"code"),e.EFF(229,"filename"),e.k0s()(),e.j41(230,"td"),e.EFF(231,"Le nom du fichier de m\xe9tadonn\xe9es. La valeur par d\xe9faut est "),e.j41(232,"code"),e.EFF(233,"metadata.ts"),e.k0s(),e.EFF(234,"."),e.k0s()(),e.j41(235,"tr")(236,"td")(237,"code"),e.EFF(238,"printDiagnostics"),e.k0s()(),e.j41(239,"td"),e.EFF(240,"Indique s'il faut imprimer les diagnostics dans le terminal. La valeur par d\xe9faut est "),e.j41(241,"code"),e.EFF(242,"true"),e.k0s(),e.EFF(243,"."),e.k0s()()()(),e.j41(244,"p"),e.EFF(245,"Enfin, vous pouvez ex\xe9cuter le script "),e.j41(246,"code"),e.EFF(247,"generate-metadata"),e.k0s(),e.EFF(248," dans une fen\xeatre de terminal s\xe9par\xe9e avec la commande suivante :"),e.k0s(),e.j41(249,"pre")(250,"code",9),e.EFF(251,"\n$ npx ts-node src/generate-metadata.ts\n# OU npx ts-node apps/{YOUR_APP}/src/generate-metadata.ts\n"),e.k0s()(),e.j41(252,"h4",20)(253,"span"),e.EFF(254,"Pi\xe8ges courants"),e.k0s()(),e.j41(255,"p"),e.EFF(256,"Si vous utilisez TypeORM/MikroORM ou tout autre ORM dans votre application, vous pouvez rencontrer des probl\xe8mes d'importation circulaire. SWC ne g\xe8re pas bien les "),e.j41(257,"strong"),e.EFF(258,"importations circulaires"),e.k0s(),e.EFF(259,", vous devez donc utiliser la solution de contournement suivante :"),e.k0s(),e.j41(260,"app-copy-button")(261,"pre")(262,"code",21),e.EFF(263,'\n@Entity()\nexport class User {\n  @OneToOne(() => Profile, (profile) => profile.user)\n  profile: Relation<Profile>; // <--- remarquez le type "Relation<>" ici au lieu de "Profil".\n}\n'),e.k0s()()(),e.j41(264,"blockquote",7)(265,"strong"),e.EFF(266,"Astuce"),e.k0s(),e.EFF(267," Le type "),e.j41(268,"code"),e.EFF(269,"Relation"),e.k0s(),e.EFF(270," est export\xe9 du package "),e.j41(271,"code"),e.EFF(272,"typeorm"),e.k0s(),e.EFF(273,".\n"),e.k0s(),e.j41(274,"p"),e.EFF(275,"Cela \xe9vite que le type de la propri\xe9t\xe9 ne soit enregistr\xe9 dans le code transpos\xe9 dans les m\xe9tadonn\xe9es de la propri\xe9t\xe9, \xe9vitant ainsi les probl\xe8mes de d\xe9pendance circulaire."),e.k0s(),e.j41(276,"p"),e.EFF(277,"Si votre ORM ne propose pas de solution similaire, vous pouvez d\xe9finir vous-m\xeame le type de l'enveloppe :"),e.k0s(),e.j41(278,"app-copy-button")(279,"pre")(280,"code",21),e.EFF(281,"\n/**\n * Type wrapper utilis\xe9 pour contourner le probl\xe8me de d\xe9pendance circulaire des modules ESM \n * caus\xe9 par les m\xe9tadonn\xe9es de r\xe9flexion qui sauvegardent le type de la propri\xe9t\xe9.\n */\nexport type WrapperType<T> = T; // WrapperType === Relation\n"),e.k0s()()(),e.j41(282,"p"),e.EFF(283,"Pour toutes les "),e.j41(284,"a",22),e.EFF(285,"injections de d\xe9pendances circulaires"),e.k0s(),e.EFF(286," de votre projet, vous devrez \xe9galement utiliser le type de wrapper personnalis\xe9 d\xe9crit ci-dessus :"),e.k0s(),e.j41(287,"app-copy-button")(288,"pre")(289,"code",21),e.EFF(290,"\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(forwardRef(() => ProfileService))\n    private readonly profileService: WrapperType<ProfileService>,\n  ) {};\n}\n"),e.k0s()()(),e.j41(291,"h3",23),e.EFF(292,"Jest + SWC"),e.k0s(),e.j41(293,"p"),e.EFF(294,"Pour utiliser SWC avec Jest, vous devez installer les packages suivants :"),e.k0s(),e.j41(295,"pre")(296,"code",9),e.EFF(297,"\n$ npm i --save-dev jest @swc/core @swc/jest\n"),e.k0s()(),e.j41(298,"p"),e.EFF(299,"Une fois l'installation termin\xe9e, mettez \xe0 jour le fichier "),e.j41(300,"code"),e.EFF(301,"package.json"),e.k0s(),e.EFF(302,"/"),e.j41(303,"code"),e.EFF(304,"jest.config.js"),e.k0s(),e.EFF(305," (en fonction de votre configuration) avec le contenu suivant :"),e.k0s(),e.j41(306,"pre")(307,"code",12),e.EFF(308,'\n{\n  "jest": {\n    "transform": {\n      "^.+\\\\.(t|j)s?$": ["@swc/jest"]\n    }\n  }\n}\n'),e.k0s()(),e.j41(309,"p"),e.EFF(310,"De plus, vous devrez ajouter les propri\xe9t\xe9s "),e.j41(311,"code"),e.EFF(312,"transform"),e.k0s(),e.EFF(313," suivantes \xe0 votre fichier "),e.j41(314,"code"),e.EFF(315,".swcrc"),e.k0s(),e.EFF(316," : "),e.j41(317,"code"),e.EFF(318,"legacyDecorator"),e.k0s(),e.EFF(319,", "),e.j41(320,"code"),e.EFF(321,"decoratorMetadata"),e.k0s(),e.EFF(322," :"),e.k0s(),e.j41(323,"pre")(324,"code",12),e.EFF(325,'\n{\n  "$schema": "https://json.schemastore.org/swcrc",\n  "sourceMaps": true,\n  "jsc": {\n    "parser": {\n      "syntax": "typescript",\n      "decorators": true,\n      "dynamicImport": true\n    },\n    "transform": {\n      "legacyDecorator": true,\n      "decoratorMetadata": true\n    },\n    "baseUrl": "./"\n  },\n  "minify": false\n}\n'),e.k0s()(),e.j41(326,"p"),e.EFF(327,"Si vous utilisez des plugins NestJS CLI dans votre projet, vous devrez ex\xe9cuter "),e.j41(328,"code"),e.EFF(329,"PluginMetadataGenerator"),e.k0s(),e.EFF(330," manuellement. Naviguez vers "),e.j41(331,"a",24),e.EFF(332,"cette section"),e.k0s(),e.EFF(333," pour en savoir plus."),e.k0s(),e.j41(334,"h3",25),e.EFF(335,"Vitest"),e.k0s(),e.j41(336,"p")(337,"a",26),e.EFF(338,"Vitest"),e.k0s(),e.EFF(339," est un programme de test rapide et l\xe9ger con\xe7u pour fonctionner avec Vite. Il fournit une solution de test moderne, rapide et facile \xe0 utiliser qui peut \xeatre int\xe9gr\xe9e aux projets NestJS."),e.k0s(),e.j41(340,"h4",27)(341,"span"),e.EFF(342,"Installation"),e.k0s()(),e.j41(343,"p"),e.EFF(344,"Pour commencer, installez d'abord les packages n\xe9cessaires :"),e.k0s(),e.j41(345,"pre")(346,"code",9),e.EFF(347,"\n$ npm i --save-dev vitest unplugin-swc @swc/core @vitest/coverage-v8\n"),e.k0s()(),e.j41(348,"h4",28)(349,"span"),e.EFF(350,"Configuration"),e.k0s()(),e.j41(351,"p"),e.EFF(352,"Cr\xe9ez un fichier "),e.j41(353,"code"),e.EFF(354,"vitest.config.ts"),e.k0s(),e.EFF(355," dans le r\xe9pertoire racine de votre application avec le contenu suivant :"),e.k0s(),e.j41(356,"app-copy-button")(357,"pre")(358,"code",19),e.EFF(359,"\nimport swc from 'unplugin-swc';\nimport { defineConfig } from 'vitest/config';\n\nexport default defineConfig({\n  test: {\n    globals: true,\n    root: './',\n  },\n  plugins: [\n    // Ceci est n\xe9cessaire pour construire les fichiers de test avec SWC\n    swc.vite({\n      // D\xe9finissez explicitement le type de module pour \xe9viter d'h\xe9riter de cette valeur \xe0 partir d'un fichier de configuration `.swcrc`.\n      module: { type: 'es6' },\n    }),\n  ],\n});\n"),e.k0s()()(),e.j41(360,"p"),e.EFF(361,"Ce fichier de configuration d\xe9finit l'environnement Vitest, le r\xe9pertoire racine et le plugin SWC. Vous devez \xe9galement cr\xe9er un fichier de configuration pour les tests e2e, avec un champ "),e.j41(362,"code"),e.EFF(363,"include"),e.k0s(),e.EFF(364," suppl\xe9mentaire qui sp\xe9cifie l'expression rationnelle du chemin d'acc\xe8s au test :"),e.k0s(),e.j41(365,"app-copy-button")(366,"pre")(367,"code",19),e.EFF(368,"\nimport swc from 'unplugin-swc';\nimport { defineConfig } from 'vitest/config';\n\nexport default defineConfig({\n  test: {\n    include: ['**/*.e2e-spec.ts'],\n    globals: true,\n    root: './',\n  },\n  plugins: [swc.vite()],\n});\n"),e.k0s()()(),e.j41(369,"p"),e.EFF(370,"De plus, vous pouvez d\xe9finir les options "),e.j41(371,"code"),e.EFF(372,"alias"),e.k0s(),e.EFF(373," pour supporter les chemins TypeScript dans vos tests :"),e.k0s(),e.j41(374,"app-copy-button")(375,"pre")(376,"code",19),e.EFF(377,"\nimport swc from 'unplugin-swc';\nimport { defineConfig } from 'vitest/config';\n\nexport default defineConfig({\n  test: {\n    include: ['**/*.e2e-spec.ts'],\n    globals: true,\n    alias: {\n      '@src': './src',\n      '@test': './test',\n    },\n    root: './',\n  },\n  resolve: {\n    alias: {\n      '@src': './src',\n      '@test': './test',\n    },\n  },\n  plugins: [swc.vite()],\n});\n"),e.k0s()()(),e.j41(378,"h4",29)(379,"span"),e.EFF(380,"Mise \xe0 jour des imports dans les tests E2E"),e.k0s()(),e.j41(381,"p"),e.EFF(382,"Changez toutes les importations de tests E2E utilisant "),e.j41(383,"code"),e.EFF(384,"import * as request from 'supertest'"),e.k0s(),e.EFF(385," en "),e.j41(386,"code"),e.EFF(387,"import request from 'supertest'"),e.k0s(),e.EFF(388,". Ceci est n\xe9cessaire car Vitest, lorsqu'il est int\xe9gr\xe9 \xe0 Vite, attend un import par d\xe9faut pour supertest. L'utilisation d'un import d'espace de noms peut causer des probl\xe8mes dans cette configuration sp\xe9cifique."),e.k0s(),e.j41(389,"p"),e.EFF(390,"Enfin, mettez \xe0 jour les scripts de test dans votre fichier package.json avec ce qui suit :"),e.k0s(),e.j41(391,"pre")(392,"code",12),e.EFF(393,'\n{\n  "scripts": {\n    "test": "vitest run",\n    "test:watch": "vitest",\n    "test:cov": "vitest run --coverage",\n    "test:debug": "vitest --inspect-brk --inspect --logHeapUsage --threads=false",\n    "test:e2e": "vitest run --config ./vitest.config.e2e.ts"\n  }\n}\n'),e.k0s()(),e.j41(394,"p"),e.EFF(395,"Ces scripts configurent Vitest pour l'ex\xe9cution des tests, l'observation des modifications, la g\xe9n\xe9ration de rapports sur la couverture du code et le d\xe9bogage. Le script test:e2e est sp\xe9cifiquement destin\xe9 \xe0 l'ex\xe9cution de tests E2E avec un fichier de configuration personnalis\xe9."),e.k0s(),e.j41(396,"p"),e.EFF(397,"Avec cette configuration, vous pouvez maintenant profiter des avantages de l'utilisation de Vitest dans votre projet NestJS, y compris une ex\xe9cution plus rapide des tests et une exp\xe9rience de test plus moderne."),e.k0s(),e.j41(398,"blockquote",7)(399,"strong"),e.EFF(400,"Astuce"),e.k0s(),e.EFF(401," Vous pouvez consulter un exemple concret dans ce "),e.j41(402,"a",30),e.EFF(403,"d\xe9p\xf4t"),e.k0s(),e.EFF(404,".\n"),e.k0s()())},dependencies:[l.a,d.z,k.Wk],encapsulation:2,changeDetection:0})}return s})(),W=(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-necord"]],features:[e.Vt3],decls:302,vars:56,consts:[["contentReference",""],["appd277aa04002f3036cfc9e3f4eaa045f6072c9d4a",""],["appac4a1c8d02b1a49ad83e018516d0f6debbcadbd8",""],["appc3aad843fc6eb6879bd66f15fc26ca28b6a437dd",""],["app01f21e4ee4696fa2eb64e0857bfdd0613e81650f",""],["app5567a395680b9ffdbe94b226643f33f68f1643d1",""],["appb9d2e38759a490e618e8012121279aef5847fca1",""],["app227e81740ca11fdc1fb8bb3eb9ad25d58770c7dd",""],["appb0066dd1141de53e9b0a99ed2ce2c4fb8bdbbab2",""],["appc2b3ad871b60f79d66bedb229d2f4def1631ed23",""],["appef50e3343fab00c071d98321a224cd9e88f974af",""],["app60f9220fc88a7fca2cff09d539c4e239d4b7cd6e",""],["app372e5d7ced10b1f87da8a62d27cb5ba328b25ac5",""],["app9c44d5a18530b3ee232680c3aa2d96d5fb0c3af5",""],["app4f383c187e5b325a91c4677bdacf533e8a87ffd0",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/necord.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","necord"],["rel","nofollow","target","_blank","href","https://discord.com"],[1,"info"],["rel","nofollow","target","_blank","href","https://github.com/necordjs/necord"],["appAnchor","","id","installation"],["rel","nofollow","target","_blank","href","https://discord.js.org"],[1,"language-bash"],["appAnchor","","id","usage"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],["rel","nofollow","target","_blank","href","https://discord.com/developers/docs/topics/gateway#gateway-intents"],["id","understanding-context"],["appAnchor","","id","text-commands"],[1,"warning"],["rel","nofollow","target","_blank","href","https://support-dev.discord.com/hc/en-us/articles/4404772028055-Message-Content-Access-Deprecation-for-Verified-Bots"],["appAnchor","","id","application-commands"],["src","https://i.imgur.com/4EmG8G8.png",1,"illustrative-image"],["appAnchor","","id","slash-commands"],["id","options"],["rel","nofollow","target","_blank","href","https://necord.org/interactions/slash-commands#options"],["id","autocomplete"],["appAnchor","","id","user-context-menu"],["appAnchor","","id","message-context-menu"],["appAnchor","","id","buttons"],["rel","nofollow","target","_blank","href","https://discord.com/developers/docs/interactions/message-components#buttons"],["rel","nofollow","target","_blank","href","https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object"],["appAnchor","","id","select-menus"],["rel","nofollow","target","_blank","href","https://discord.com/developers/docs/interactions/message-components#select-menus"],["rel","nofollow","target","_blank","href","https://necord.org/interactions/message-components#select-menu"],["appAnchor","","id","modals"],["appAnchor","","id","more-information"],["rel","nofollow","target","_blank","href","https://necord.org"]],template:function(t,o){if(1&t&&(e.j41(0,"div",15,0)(2,"div",16)(3,"a",17),e.nrm(4,"i",18),e.k0s()(),e.j41(5,"h3",19),e.EFF(6,"Necord"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Necord is a powerful module that simplifies the creation of "),e.j41(9,"a",20),e.EFF(10,"Discord"),e.k0s(),e.EFF(11," bots, allowing for seamless integration with your NestJS application."),e.k0s(),e.j41(12,"blockquote",21)(13,"strong"),e.EFF(14,"Note"),e.k0s(),e.EFF(15," Necord is a third-party package and is not officially maintained by the NestJS core team. If you encounter any issues, please report them in the "),e.j41(16,"a",22),e.EFF(17,"official repository"),e.k0s(),e.EFF(18,".\n"),e.k0s(),e.j41(19,"h4",23)(20,"span"),e.EFF(21,"Installation"),e.k0s()(),e.j41(22,"p"),e.EFF(23,"To get started, you need to install Necord alongside its dependency, "),e.j41(24,"a",24)(25,"code"),e.EFF(26,"Discord.js"),e.k0s()(),e.EFF(27,"."),e.k0s(),e.j41(28,"pre")(29,"code",25),e.EFF(30,"\n$ npm install necord discord.js\n"),e.k0s()(),e.j41(31,"h4",26)(32,"span"),e.EFF(33,"Usage"),e.k0s()(),e.j41(34,"p"),e.EFF(35,"To utilize Necord in your project, import the "),e.j41(36,"code"),e.EFF(37,"NecordModule"),e.k0s(),e.EFF(38," and configure it with the necessary options."),e.k0s(),e.j41(39,"app-copy-button",27)(40,"span",28),e.EFF(41),e.nI1(42,"extension"),e.nrm(43,"app-tabs",null,1),e.k0s(),e.j41(45,"pre")(46,"code",29),e.EFF(47,"\nimport { Module } from '@nestjs/common';\nimport { NecordModule } from 'necord';\nimport { IntentsBitField } from 'discord.js';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    NecordModule.forRoot({\n      token: process.env.DISCORD_TOKEN,\n      intents: [IntentsBitField.Guilds],\n      development: [process.env.DISCORD_DEVELOPMENT_GUILD_ID],\n    }),\n  ],\n  providers: [AppService],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(48,"blockquote",21)(49,"strong"),e.EFF(50,"Hint"),e.k0s(),e.EFF(51," You can find a comprehensive list of available intents "),e.j41(52,"a",30),e.EFF(53,"here"),e.k0s(),e.EFF(54,".\n"),e.k0s(),e.j41(55,"p"),e.EFF(56,"With this setup, you can inject the "),e.j41(57,"code"),e.EFF(58,"AppService"),e.k0s(),e.EFF(59," into your providers to easily register commands, events, and more."),e.k0s(),e.j41(60,"app-copy-button",27)(61,"span",28),e.EFF(62),e.nI1(63,"extension"),e.nrm(64,"app-tabs",null,2),e.k0s(),e.j41(66,"pre")(67,"code",29),e.EFF(68,"\nimport { Injectable, Logger } from '@nestjs/common';\nimport { Context, On, Once, ContextOf } from 'necord';\nimport { Client } from 'discord.js';\n\n@Injectable()\nexport class AppService {\n  private readonly logger = new Logger(AppService.name);\n\n  @Once('ready')\n  public onReady(@Context() [client]: ContextOf<'ready'>) {\n    this.logger.log(`Bot logged in as ${client.user.username}`);\n  }\n\n  @On('warn')\n  public onWarn(@Context() [message]: ContextOf<'warn'>) {\n    this.logger.warn(message);\n  }\n}\n"),e.k0s()()(),e.j41(69,"h5",31),e.EFF(70,"Understanding context"),e.k0s(),e.j41(71,"p"),e.EFF(72,"You may have noticed the "),e.j41(73,"code"),e.EFF(74,"@Context"),e.k0s(),e.EFF(75," decorator in the examples above. This decorator injects the event context into your method, allowing you to access various event-specific data. Since there are multiple types of events, the context type is inferred using the "),e.j41(76,"code"),e.EFF(77,"ContextOf<type: string>"),e.k0s(),e.EFF(78," type. You can easily access context variables by using the "),e.j41(79,"code"),e.EFF(80,"@Context()"),e.k0s(),e.EFF(81," decorator, which fills the variable with an array of arguments relevant to the event."),e.k0s(),e.j41(82,"h4",32)(83,"span"),e.EFF(84,"Text commands"),e.k0s()(),e.j41(85,"blockquote",33)(86,"strong"),e.EFF(87,"Caution"),e.k0s(),e.EFF(88," Text commands rely on message content, which is set to be deprecated for verified bots and applications with over 100 servers. This means that if your bot is unable to access message content, text commands will not function. Read more about this change "),e.j41(89,"a",34),e.EFF(90,"here"),e.k0s(),e.EFF(91,".\n"),e.k0s(),e.j41(92,"p"),e.EFF(93,"Here's how to create a simple command handler for messages using the "),e.j41(94,"code"),e.EFF(95,"@TextCommand"),e.k0s(),e.EFF(96," decorator."),e.k0s(),e.j41(97,"app-copy-button",27)(98,"span",28),e.EFF(99),e.nI1(100,"extension"),e.nrm(101,"app-tabs",null,3),e.k0s(),e.j41(103,"pre")(104,"code",29),e.EFF(105,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, TextCommand, TextCommandContext, Arguments } from 'necord';\n\n@Injectable()\nexport class AppCommands {\n  @TextCommand({\n    name: 'ping',\n    description: 'Responds with pong!',\n  })\n  public onPing(\n    @Context() [message]: TextCommandContext,\n    @Arguments() args: string[],\n  ) {\n    return message.reply('pong!');\n  }\n}\n"),e.k0s()()(),e.j41(106,"h4",35)(107,"span"),e.EFF(108,"Application commands"),e.k0s()(),e.j41(109,"p"),e.EFF(110,"Application commands provide a native way for users to interact with your app within the Discord client. There are three types of application commands that can be accessed through different interfaces: chat input, message context menu (accessed by right-clicking a message), and user context menu (accessed by right-clicking a user)."),e.k0s(),e.j41(111,"figure"),e.nrm(112,"img",36),e.k0s(),e.j41(113,"h4",37)(114,"span"),e.EFF(115,"Slash commands"),e.k0s()(),e.j41(116,"p"),e.EFF(117,"Slash commands are an excellent way to engage with users in a structured manner. They allow you to create commands with precise arguments and options, enhancing the user experience significantly."),e.k0s(),e.j41(118,"p"),e.EFF(119,"To define a slash command using Necord, you can use the "),e.j41(120,"code"),e.EFF(121,"SlashCommand"),e.k0s(),e.EFF(122," decorator."),e.k0s(),e.j41(123,"app-copy-button",27)(124,"span",28),e.EFF(125),e.nI1(126,"extension"),e.nrm(127,"app-tabs",null,4),e.k0s(),e.j41(129,"pre")(130,"code",29),e.EFF(131,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, SlashCommand, SlashCommandContext } from 'necord';\n\n@Injectable()\nexport class AppCommands {\n  @SlashCommand({\n    name: 'ping',\n    description: 'Responds with pong!',\n  })\n  public async onPing(@Context() [interaction]: SlashCommandContext) {\n    return interaction.reply({ content: 'Pong!' });\n  }\n}\n"),e.k0s()()(),e.j41(132,"blockquote",21)(133,"strong"),e.EFF(134,"Hint"),e.k0s(),e.EFF(135," When your bot client logs in, it will automatically register all defined commands. Note that global commands are cached for up to an hour. To avoid issues with the global cache, utilize the "),e.j41(136,"code"),e.EFF(137,"development"),e.k0s(),e.EFF(138," argument in the Necord module, which restricts command visibility to a single guild.\n"),e.k0s(),e.j41(139,"h5",38),e.EFF(140,"Options"),e.k0s(),e.j41(141,"p"),e.EFF(142,"You can define parameters for your slash commands using option decorators. Let's create a "),e.j41(143,"code"),e.EFF(144,"TextDto"),e.k0s(),e.EFF(145," class for this purpose:"),e.k0s(),e.j41(146,"app-copy-button",27)(147,"span",28),e.EFF(148),e.nI1(149,"extension"),e.nrm(150,"app-tabs",null,5),e.k0s(),e.j41(152,"pre")(153,"code",29),e.EFF(154,"\nimport { StringOption } from 'necord';\n\nexport class TextDto {\n  @StringOption({\n    name: 'text',\n    description: 'Input your text here',\n    required: true,\n  })\n  text: string;\n}\n"),e.k0s()()(),e.j41(155,"p"),e.EFF(156,"You can then use this DTO in the "),e.j41(157,"code"),e.EFF(158,"AppCommands"),e.k0s(),e.EFF(159," class:"),e.k0s(),e.j41(160,"app-copy-button",27)(161,"span",28),e.EFF(162),e.nI1(163,"extension"),e.nrm(164,"app-tabs",null,6),e.k0s(),e.j41(166,"pre")(167,"code",29),e.EFF(168,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, SlashCommand, Options, SlashCommandContext } from 'necord';\nimport { TextDto } from './length.dto';\n\n@Injectable()\nexport class AppCommands {\n  @SlashCommand({\n    name: 'length',\n    description: 'Calculate the length of your text',\n  })\n  public async onLength(\n    @Context() [interaction]: SlashCommandContext,\n    @Options() { text }: TextDto,\n  ) {\n    return interaction.reply({\n      content: `The length of your text is: ${text.length}`,\n    });\n  }\n}\n"),e.k0s()()(),e.j41(169,"p"),e.EFF(170,"For a complete list of built-in option decorators, check out "),e.j41(171,"a",39),e.EFF(172,"this documentation"),e.k0s(),e.EFF(173,"."),e.k0s(),e.j41(174,"h5",40),e.EFF(175,"Autocomplete"),e.k0s(),e.j41(176,"p"),e.EFF(177,"To implement autocomplete functionality for your slash commands, you'll need to create an interceptor. This interceptor will handle requests as users type in the autocomplete field."),e.k0s(),e.j41(178,"app-copy-button",27)(179,"span",28),e.EFF(180),e.nI1(181,"extension"),e.nrm(182,"app-tabs",null,7),e.k0s(),e.j41(184,"pre")(185,"code",29),e.EFF(186,"\nimport { Injectable } from '@nestjs/common';\nimport { AutocompleteInteraction } from 'discord.js';\nimport { AutocompleteInterceptor } from 'necord';\n\n@Injectable()\nclass CatsAutocompleteInterceptor extends AutocompleteInterceptor {\n  public transformOptions(interaction: AutocompleteInteraction) {\n    const focused = interaction.options.getFocused(true);\n    let choices: string[];\n\n    if (focused.name === 'cat') {\n      choices = ['Siamese', 'Persian', 'Maine Coon'];\n    }\n\n    return interaction.respond(\n      choices\n        .filter((choice) => choice.startsWith(focused.value.toString()))\n        .map((choice) => ({ name: choice, value: choice })),\n    );\n  }\n}\n"),e.k0s()()(),e.j41(187,"p"),e.EFF(188,"You will also need to mark your options class with "),e.j41(189,"code"),e.EFF(190,"autocomplete: true"),e.k0s(),e.EFF(191,":"),e.k0s(),e.j41(192,"app-copy-button",27)(193,"span",28),e.EFF(194),e.nI1(195,"extension"),e.nrm(196,"app-tabs",null,8),e.k0s(),e.j41(198,"pre")(199,"code",29),e.EFF(200,"\nimport { StringOption } from 'necord';\n\nexport class CatDto {\n  @StringOption({\n    name: 'cat',\n    description: 'Choose a cat breed',\n    autocomplete: true,\n    required: true,\n  })\n  cat: string;\n}\n"),e.k0s()()(),e.j41(201,"p"),e.EFF(202,"Finally, apply the interceptor to your slash command:"),e.k0s(),e.j41(203,"app-copy-button",27)(204,"span",28),e.EFF(205),e.nI1(206,"extension"),e.nrm(207,"app-tabs",null,9),e.k0s(),e.j41(209,"pre")(210,"code",29),e.EFF(211,"\nimport { Injectable, UseInterceptors } from '@nestjs/common';\nimport { Context, SlashCommand, Options, SlashCommandContext } from 'necord';\nimport { CatDto } from '/cat.dto';\nimport { CatsAutocompleteInterceptor } from './cats-autocomplete.interceptor';\n\n@Injectable()\nexport class CatsCommands {\n  @UseInterceptors(CatsAutocompleteInterceptor)\n  @SlashCommand({\n    name: 'cat',\n    description: 'Retrieve information about a specific cat breed',\n  })\n  public async onSearch(\n    @Context() [interaction]: SlashCommandContext,\n    @Options() { cat }: CatDto,\n  ) {\n    return interaction.reply({\n      content: `I found information on the breed of ${cat} cat!`,\n    });\n  }\n}\n"),e.k0s()()(),e.j41(212,"h4",41)(213,"span"),e.EFF(214,"User context menu"),e.k0s()(),e.j41(215,"p"),e.EFF(216,"User commands appear on the context menu that appears when right-clicking (or tapping) on users. These commands provide quick actions that target users directly."),e.k0s(),e.j41(217,"app-copy-button",27)(218,"span",28),e.EFF(219),e.nI1(220,"extension"),e.nrm(221,"app-tabs",null,10),e.k0s(),e.j41(223,"pre")(224,"code",29),e.EFF(225,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, UserCommand, UserCommandContext, TargetUser } from 'necord';\nimport { User } from 'discord.js';\n\n@Injectable()\nexport class AppCommands {\n  @UserCommand({ name: 'Get avatar' })\n  public async getUserAvatar(\n    @Context() [interaction]: UserCommandContext,\n    @TargetUser() user: User,\n  ) {\n    return interaction.reply({\n      embeds: [\n        new MessageEmbed()\n          .setTitle(`Avatar of ${user.username}`)\n          .setImage(user.displayAvatarURL({ size: 4096, dynamic: true })),\n      ],\n    });\n  }\n}\n"),e.k0s()()(),e.j41(226,"h4",42)(227,"span"),e.EFF(228,"Message context menu"),e.k0s()(),e.j41(229,"p"),e.EFF(230,"Message commands show up in the context menu when right-clicking on messages, allowing for quick actions relevant to those messages."),e.k0s(),e.j41(231,"app-copy-button",27)(232,"span",28),e.EFF(233),e.nI1(234,"extension"),e.nrm(235,"app-tabs",null,11),e.k0s(),e.j41(237,"pre")(238,"code",29),e.EFF(239,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, MessageCommand, MessageCommandContext, TargetMessage } from 'necord';\nimport { Message } from 'discord.js';\n\n@Injectable()\nexport class AppCommands {\n  @MessageCommand({ name: 'Copy Message' })\n  public async copyMessage(\n    @Context() [interaction]: MessageCommandContext,\n    @TargetMessage() message: Message,\n  ) {\n    return interaction.reply({ content: message.content });\n  }\n}\n"),e.k0s()()(),e.j41(240,"h4",43)(241,"span"),e.EFF(242,"Buttons"),e.k0s()(),e.j41(243,"p")(244,"a",44),e.EFF(245,"Buttons"),e.k0s(),e.EFF(246," are interactive elements that can be included in messages. When clicked, they send an "),e.j41(247,"a",45),e.EFF(248,"interaction"),e.k0s(),e.EFF(249," to your application."),e.k0s(),e.j41(250,"app-copy-button",27)(251,"span",28),e.EFF(252),e.nI1(253,"extension"),e.nrm(254,"app-tabs",null,12),e.k0s(),e.j41(256,"pre")(257,"code",29),e.EFF(258,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, Button, ButtonContext } from 'necord';\n\n@Injectable()\nexport class AppComponents {\n  @Button('BUTTON')\n  public onButtonClick(@Context() [interaction]: ButtonContext) {\n    return interaction.reply({ content: 'Button clicked!' });\n  }\n}\n"),e.k0s()()(),e.j41(259,"h4",46)(260,"span"),e.EFF(261,"Select menus"),e.k0s()(),e.j41(262,"p")(263,"a",47),e.EFF(264,"Select menus"),e.k0s(),e.EFF(265," are another type of interactive component that appears on messages. They provide a dropdown-like UI for users to select options."),e.k0s(),e.j41(266,"app-copy-button",27)(267,"span",28),e.EFF(268),e.nI1(269,"extension"),e.nrm(270,"app-tabs",null,13),e.k0s(),e.j41(272,"pre")(273,"code",29),e.EFF(274,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, StringSelect, StringSelectContext, SelectedStrings } from 'necord';\n\n@Injectable()\nexport class AppComponents {\n  @StringSelect('SELECT_MENU')\n  public onSelectMenu(\n    @Context() [interaction]: StringSelectContext,\n    @SelectedStrings() values: string[],\n  ) {\n    return interaction.reply({ content: `You selected: ${values.join(', ')}` });\n  }\n}\n"),e.k0s()()(),e.j41(275,"p"),e.EFF(276,"For a full list of built-in select menu components, visit "),e.j41(277,"a",48),e.EFF(278,"this link"),e.k0s(),e.EFF(279,"."),e.k0s(),e.j41(280,"h4",49)(281,"span"),e.EFF(282,"Modals"),e.k0s()(),e.j41(283,"p"),e.EFF(284,"Modals are pop-up forms that allow users to submit formatted input. Here's how to create and handle modals using Necord:"),e.k0s(),e.j41(285,"app-copy-button",27)(286,"span",28),e.EFF(287),e.nI1(288,"extension"),e.nrm(289,"app-tabs",null,14),e.k0s(),e.j41(291,"pre")(292,"code",29),e.EFF(293,"\nimport { Injectable } from '@nestjs/common';\nimport { Context, Modal, ModalContext } from 'necord';\n\n@Injectable()\nexport class AppModals {\n  @Modal('pizza')\n  public onModal(@Context() [interaction]: ModalContext) {\n    return interaction.reply({\n      content: `Your fav pizza : ${interaction.fields.getTextInputValue('pizza')}`\n    });\n  }\n}\n"),e.k0s()()(),e.j41(294,"h4",50)(295,"span"),e.EFF(296,"More information"),e.k0s()(),e.j41(297,"p"),e.EFF(298,"Visit the "),e.j41(299,"a",51),e.EFF(300,"Necord"),e.k0s(),e.EFF(301," website for more information."),e.k0s()()),2&t){const r=e.sdS(44),u=e.sdS(65),i=e.sdS(102),c=e.sdS(128),a=e.sdS(151),F=e.sdS(165),E=e.sdS(183),j=e.sdS(197),h=e.sdS(208),y=e.sdS(222),g=e.sdS(236),A=e.sdS(255),b=e.sdS(271),S=e.sdS(290);e.R7$(41),e.SpI(" ",e.i5U(42,14,"app.module",r.isJsActive),"\n"),e.R7$(21),e.SpI(" ",e.i5U(63,17,"app.service",u.isJsActive),"\n"),e.R7$(37),e.SpI(" ",e.i5U(100,20,"app.commands",i.isJsActive),"\n"),e.R7$(26),e.SpI(" ",e.i5U(126,23,"app.commands",c.isJsActive),"\n"),e.R7$(23),e.SpI(" ",e.i5U(149,26,"text.dto",a.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(163,29,"app.commands",F.isJsActive),"\n"),e.R7$(18),e.SpI(" ",e.i5U(181,32,"cats-autocomplete.interceptor",E.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(195,35,"cat.dto",j.isJsActive),"\n"),e.R7$(11),e.SpI(" ",e.i5U(206,38,"cats.commands",h.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(220,41,"app.commands",y.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(234,44,"app.commands",g.isJsActive),"\n"),e.R7$(19),e.SpI(" ",e.i5U(253,47,"app.components",A.isJsActive),"\n"),e.R7$(16),e.SpI(" ",e.i5U(269,50,"app.components",b.isJsActive),"\n"),e.R7$(19),e.SpI(" ",e.i5U(288,53,"app.modals",S.isJsActive),"\n")}},dependencies:[v.O,l.a,d.z,f.M],encapsulation:2,changeDetection:0})}return s})();var Q=m(9909);const K=[{path:"mikroorm",component:L,data:{title:"MikroORM"}},{path:"sql-typeorm",component:O,data:{title:"SQL (TypeORM)"}},{path:"mongodb",component:z,data:{title:"MongoDB (Mongoose)"}},{path:"sql-sequelize",component:J,data:{title:"SQL (Sequelize)"}},{path:"cqrs",component:P,data:{title:"CQRS"}},{path:"swagger",redirectTo:"/openapi/introduction"},{path:"prisma",component:U,data:{title:"Prisma"}},{path:"terminus",component:N,data:{title:"Contr\xf4les de sant\xe9 (Terminus)"}},{path:"documentation",component:M,data:{title:"Documentation (Compodoc)"}},{path:"crud-utilities",redirectTo:"/recipes/crud-generator"},{path:"crud",redirectTo:"/recipes/crud-generator"},{path:"crud-generator",component:R,data:{title:"G\xe9n\xe9rateur CRUD"}},{path:"hot-reload",component:T,data:{title:"Rechargement \xe0 chaud"}},{path:"serve-static",component:H,data:{title:"Serve static"}},{path:"router-module",component:$,data:{title:"Module Router"}},{path:"nest-commander",component:_,data:{title:"Nest Commander"}},{path:"async-local-storage",component:G,data:{title:"Async Local Storage"}},{path:"repl",component:D,data:{title:"REPL"}},{path:"swc",component:V,data:{title:"SWC (fast compiler)"}},{path:"automock",redirectTo:"/recipes/suites"},{path:"suites",component:B,data:{title:"Suites (Automock)"}},{path:"necord",component:W,data:{title:"Necord"}},{path:"passport",component:(()=>{class s extends p.y{static \u0275fac=(()=>{let n;return function(o){return(n||(n=e.xGo(s)))(o||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-passport"]],features:[e.Vt3],decls:1233,vars:122,consts:[["contentReference",""],["appce95a4448605757eb09594c6c6739cd388de0ea5",""],["appacb496959715619ac6f0068102b76e037d99458c",""],["appf0062b92d8c6b131b76c00397eb3bde984098c50",""],["app2d4a9721a8e3ea8a76de6290b953c9604621e3c5",""],["appfc6d821b4a802d784497b5c3d645b7d967d6e1e1",""],["app0456e5cf90b47727e89c8f4dfbc2207981ca59c9",""],["app85a946d1092e8c4e330f1a524a3d252f65b6c1a3",""],["appdba834930a5b973de9769c04000e91adbc3f50a8",""],["app40783098301a05366576e16c8e3e9594cc6dc978",""],["appc019fc7a4972e9333f6f768a55c5e6c21f999c4f",""],["app2f8412a784a2f2ab1364ea7b07391a5c3cbe7623",""],["app476b31bd6078ab248c5126cd8c8140c46c97052d",""],["app0f258fb45730d58e007e8adcf63cd11a801e2093",""],["app5890befc40c588c8017b457ee5c9c4d827090193",""],["appb4b954ccb065f9d800eb4877fab3b52ca41dbb18",""],["app068dac9d6de4a6ead3e2801e710cd4536d9fb150",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/recipes/passport.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","passport-authentification"],["rel","nofollow","target","_blank","href","https://github.com/jaredhanson/passport"],["rel","nofollow","target","_blank","href","https://jwt.io/"],["rel","nofollow","target","_blank","href","https://github.com/expressjs/session"],["rel","nofollow","target","_blank","href","http://www.passportjs.org/"],["appAnchor","","id","exigences-en-mati\xe8re-dauthentification"],["rel","nofollow","target","_blank","href","https://tools.ietf.org/html/rfc6750"],["rel","nofollow","target","_blank","href","https://github.com/jaredhanson/passport-local"],[1,"language-bash"],[1,"warning"],["appAnchor","","id","mettre-en-\u0153uvre-les-strat\xe9gies-passeport"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"Warning"],["rel","nofollow","target","_blank","href","https://github.com/kelektiv/node.bcrypt.js#readme"],["appAnchor","","id","mise-en-oeuvre-de-passeport-localement"],[1,"info"],["rel","nofollow","target","_blank","href","http://www.passportjs.org/docs/configure/"],["href","exception-filters"],["appAnchor","","id","gardes-passport-int\xe9gr\xe9es"],["routerLink","gards"],["appAnchor","","id","route-login"],["rel","nofollow","target","_blank","href","https://curl.haxx.se/"],["appAnchor","","id","route-logout"],["appAnchor","","id","fonctionnalit\xe9-jwt"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/jwt"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/jwt/blob/master/README.md"],["rel","nofollow","target","_blank","href","https://github.com/auth0/node-jsonwebtoken#usage"],["appAnchor","","id","mise-en-\u0153uvre-du-jwt-de-passeport"],["rel","nofollow","target","_blank","href","https://github.com/mikenicholson/passport-jwt"],["rel","nofollow","target","_blank","href","https://github.com/mikenicholson/passport-jwt#configure-strategy"],["rel","nofollow","target","_blank","href","https://github.com/mikenicholson/passport-jwt#extracting-the-jwt-from-the-request"],["appAnchor","","id","mise-en-\u0153uvre-de-routes-prot\xe9g\xe9es-et-de-gardes-strat\xe9giques-jwt"],["appAnchor","","id","extension-des-gardes"],["appAnchor","","id","activer-lauthentification-globalement"],["href","/guards#liaison-des-gardes"],["href","/guards#mettre-en-place-lensemble"],["appAnchor","","id","strat\xe9gies-li\xe9es-aux-requ\xeates"],["routerLink","/fundamentals/injection-scopes"],["routerLink","/fundamentals/module-ref"],["href","/fundamentals/module-ref#obtenir-la-sous-arborescence-actuelle"],["appAnchor","","id","personnaliser-passport"],["rel","nofollow","target","_blank","href","http://www.passportjs.org/docs/oauth/"],["appAnchor","","id","strat\xe9gies-nomm\xe9es"],["appAnchor","","id","graphql"],["routerLink","/graphql/quick-start"]],template:function(t,o){if(1&t&&(e.j41(0,"div",17,0)(2,"div",18)(3,"a",19),e.nrm(4,"i",20),e.k0s()(),e.j41(5,"h3",21),e.EFF(6,"Passport (authentification)"),e.k0s(),e.j41(7,"p")(8,"a",22),e.EFF(9,"Passport"),e.k0s(),e.EFF(10," est la biblioth\xe8que d'authentification node.js la plus populaire, bien connue de la communaut\xe9 et utilis\xe9e avec succ\xe8s dans de nombreuses applications en production. Il est facile d'int\xe9grer cette biblioth\xe8que dans une application "),e.j41(11,"strong"),e.EFF(12,"Nest"),e.k0s(),e.EFF(13," en utilisant le module "),e.j41(14,"code"),e.EFF(15,"@nestjs/passport"),e.k0s(),e.EFF(16,". A un niveau \xe9lev\xe9, Passport ex\xe9cute une s\xe9rie d'\xe9tapes pour :"),e.k0s(),e.j41(17,"ul")(18,"li"),e.EFF(19,"Authentifier un utilisateur en v\xe9rifiant ses \"informations d'identification\" (nom d'utilisateur/mot de passe, jeton Web JSON ("),e.j41(20,"a",23),e.EFF(21,"JWT"),e.k0s(),e.EFF(22,") ou jeton d'identit\xe9 provenant d'un fournisseur d'identit\xe9)."),e.k0s(),e.j41(23,"li"),e.EFF(24,"G\xe9rer l'\xe9tat d'authentification (en \xe9mettant un jeton portable, tel qu'un JWT, ou en cr\xe9ant une "),e.j41(25,"a",24),e.EFF(26,"session Express"),e.k0s(),e.EFF(27,")"),e.k0s(),e.j41(28,"li"),e.EFF(29,"Attacher des informations sur l'utilisateur authentifi\xe9 \xe0 l'objet "),e.j41(30,"code"),e.EFF(31,"Request"),e.k0s(),e.EFF(32," pour une utilisation ult\xe9rieure dans les gestionnaires de routes."),e.k0s()(),e.j41(33,"p"),e.EFF(34,"Passport dispose d'un riche \xe9cosyst\xe8me de "),e.j41(35,"a",25),e.EFF(36,"strat\xe9gies"),e.k0s(),e.EFF(37," qui mettent en \u0153uvre divers m\xe9canismes d'authentification. Bien que simple dans son concept, l'ensemble des strat\xe9gies de Passport que vous pouvez choisir est large et pr\xe9sente une grande vari\xe9t\xe9. Passport abstrait ces diff\xe9rentes \xe9tapes en un mod\xe8le standard, et le module "),e.j41(38,"code"),e.EFF(39,"@nestjs/passport"),e.k0s(),e.EFF(40," enveloppe et standardise ce mod\xe8le dans des constructions Nest famili\xe8res."),e.k0s(),e.j41(41,"p"),e.EFF(42,"Dans ce chapitre, nous allons mettre en \u0153uvre une solution d'authentification de bout en bout pour un serveur d'API RESTful \xe0 l'aide de ces modules puissants et flexibles. Vous pouvez utiliser les concepts d\xe9crits ici pour mettre en \u0153uvre n'importe quelle strat\xe9gie Passport afin de personnaliser votre sch\xe9ma d'authentification. Vous pouvez suivre les \xe9tapes de ce chapitre pour construire cet exemple complet."),e.k0s(),e.j41(43,"h4",26)(44,"span"),e.EFF(45,"Exigences en mati\xe8re d'authentification"),e.k0s()(),e.j41(46,"p"),e.EFF(47,"Pr\xe9cisons nos exigences. Pour ce cas d'utilisation, les clients commenceront par s'authentifier \xe0 l'aide d'un nom d'utilisateur et d'un mot de passe. Une fois authentifi\xe9, le serveur \xe9mettra un JWT qui pourra \xeatre envoy\xe9 en tant que "),e.j41(48,"a",27),e.EFF(49,'"bearer token" dans un en-t\xeate d\'autorisation'),e.k0s(),e.EFF(50," lors des demandes ult\xe9rieures pour prouver l'authentification. Nous allons \xe9galement cr\xe9er une route prot\xe9g\xe9e qui ne sera accessible qu'aux demandes contenant un JWT valide."),e.k0s(),e.j41(51,"p"),e.EFF(52,"Nous commencerons par la premi\xe8re exigence : l'authentification d'un utilisateur. Nous l'\xe9tendrons ensuite en \xe9mettant un JWT. Enfin, nous cr\xe9erons une route prot\xe9g\xe9e qui v\xe9rifiera que la requ\xeate contient un JWT valide."),e.k0s(),e.j41(53,"p"),e.EFF(54,"Tout d'abord, nous devons installer les packages n\xe9cessaires. Passport fournit une strat\xe9gie appel\xe9e "),e.j41(55,"a",28),e.EFF(56,"passport-local"),e.k0s(),e.EFF(57," qui met en \u0153uvre un m\xe9canisme d'authentification par nom d'utilisateur/mot de passe, ce qui correspond \xe0 nos besoins pour cette partie de notre cas d'utilisation."),e.k0s(),e.j41(58,"pre")(59,"code",29),e.EFF(60,"\n$ npm install --save @nestjs/passport passport passport-local\n$ npm install --save-dev @types/passport-local\n"),e.k0s()(),e.j41(61,"blockquote",30)(62,"strong"),e.EFF(63,"Remarque"),e.k0s(),e.EFF(64," Pour "),e.j41(65,"strong"),e.EFF(66,"n'importe quelle"),e.k0s(),e.EFF(67," strat\xe9gie Passport que vous choisissez, vous aurez toujours besoin des packages "),e.j41(68,"code"),e.EFF(69,"@nestjs/passport"),e.k0s(),e.EFF(70," et "),e.j41(71,"code"),e.EFF(72,"passport"),e.k0s(),e.EFF(73,". Ensuite, vous devrez installer le package sp\xe9cifique \xe0 la strat\xe9gie (par exemple, "),e.j41(74,"code"),e.EFF(75,"passport-jwt"),e.k0s(),e.EFF(76," ou "),e.j41(77,"code"),e.EFF(78,"passport-local"),e.k0s(),e.EFF(79,") qui impl\xe9mente la strat\xe9gie d'authentification particuli\xe8re que vous construisez. De plus, vous pouvez \xe9galement installer les d\xe9finitions de type pour n'importe quelle strat\xe9gie Passport, comme montr\xe9 ci-dessus avec "),e.j41(80,"code"),e.EFF(81,"@types/passport-local"),e.k0s(),e.EFF(82,", qui fournit une assistance lors de l'\xe9criture de code TypeScript.\n"),e.k0s(),e.j41(83,"h4",31)(84,"span"),e.EFF(85,"Mettre en \u0153uvre les strat\xe9gies Passeport"),e.k0s()(),e.j41(86,"p"),e.EFF(87,"Nous sommes maintenant pr\xeats \xe0 mettre en \u0153uvre la fonction d'authentification. Nous commencerons par une vue d'ensemble du processus utilis\xe9 pour "),e.j41(88,"strong"),e.EFF(89,"toute"),e.k0s(),e.EFF(90," strat\xe9gie Passport. Il est utile de consid\xe9rer Passport comme un mini framework en soi. L'\xe9l\xe9gance du cadre r\xe9side dans le fait qu'il abstrait le processus d'authentification en quelques \xe9tapes de base que vous personnalisez en fonction de la strat\xe9gie que vous mettez en \u0153uvre. Il s'agit d'un framework parce que vous le configurez en fournissant des param\xe8tres de personnalisation (sous forme d'objets JSON) et du code personnalis\xe9 sous la forme de fonctions de rappel, que Passport appelle au moment opportun. Le module "),e.j41(91,"code"),e.EFF(92,"@nestjs/passport"),e.k0s(),e.EFF(93," enveloppe ce framework dans un package de style Nest, ce qui le rend facile \xe0 int\xe9grer dans une application Nest. Nous utiliserons "),e.j41(94,"code"),e.EFF(95,"@nestjs/passport"),e.k0s(),e.EFF(96," ci-dessous, mais voyons d'abord comment fonctionne "),e.j41(97,"strong"),e.EFF(98,"Passport seul"),e.k0s(),e.EFF(99,"."),e.k0s(),e.j41(100,"p"),e.EFF(101,"Dans le Passeport de base, vous configurez une strat\xe9gie en fournissant deux \xe9l\xe9ments :"),e.k0s(),e.j41(102,"ol")(103,"li"),e.EFF(104,"Un ensemble d'options sp\xe9cifiques \xe0 cette strat\xe9gie. Par exemple, dans une strat\xe9gie JWT, vous pouvez fournir un secret pour signer les jetons."),e.k0s(),e.j41(105,"li"),e.EFF(106,"Un \"callback de v\xe9rification\", o\xf9 vous indiquez \xe0 Passport comment interagir avec votre magasin d'utilisateurs (o\xf9 vous g\xe9rez les comptes d'utilisateurs). Vous v\xe9rifiez ici si un utilisateur existe (et/ou cr\xe9ez un nouvel utilisateur) et si ses informations d'identification sont valides. La biblioth\xe8que Passport s'attend \xe0 ce que ce callback renvoie un utilisateur complet si la validation r\xe9ussit, ou un null si elle \xe9choue (l'\xe9chec est d\xe9fini comme l'utilisateur n'est pas trouv\xe9, ou, dans le cas de passport-local, le mot de passe ne correspond pas)."),e.k0s()(),e.j41(107,"p"),e.EFF(108,"Avec "),e.j41(109,"code"),e.EFF(110,"@nestjs/passport"),e.k0s(),e.EFF(111,", vous configurez une strat\xe9gie Passport en \xe9tendant la classe "),e.j41(112,"code"),e.EFF(113,"PassportStrategy"),e.k0s(),e.EFF(114,". Vous passez les options de la strat\xe9gie (point 1 ci-dessus) en appelant la m\xe9thode "),e.j41(115,"code"),e.EFF(116,"super()"),e.k0s(),e.EFF(117," dans votre sous-classe, en passant \xe9ventuellement un objet options. Vous fournissez le callback de v\xe9rification (point 2 ci-dessus) en impl\xe9mentant une m\xe9thode "),e.j41(118,"code"),e.EFF(119,"validate()"),e.k0s(),e.EFF(120," dans votre sous-classe."),e.k0s(),e.j41(121,"p"),e.EFF(122,"Nous allons commencer par g\xe9n\xe9rer un "),e.j41(123,"code"),e.EFF(124,"AuthModule"),e.k0s(),e.EFF(125," et dans celui-ci, un "),e.j41(126,"code"),e.EFF(127,"AuthService"),e.k0s(),e.EFF(128," :"),e.k0s(),e.j41(129,"pre")(130,"code",29),e.EFF(131,"\n$ nest g module auth\n$ nest g service auth\n"),e.k0s()(),e.j41(132,"p"),e.EFF(133,"Comme nous impl\xe9mentons le "),e.j41(134,"code"),e.EFF(135,"AuthService"),e.k0s(),e.EFF(136,", nous trouverons utile d'encapsuler les op\xe9rations des utilisateurs dans un "),e.j41(137,"code"),e.EFF(138,"UsersService"),e.k0s(),e.EFF(139,", donc g\xe9n\xe9rons ce module et ce service maintenant :"),e.k0s(),e.j41(140,"pre")(141,"code",29),e.EFF(142,"\n$ nest g module users\n$ nest g service users\n"),e.k0s()(),e.j41(143,"p"),e.EFF(144,"Remplacez le contenu par d\xe9faut de ces fichiers g\xe9n\xe9r\xe9s comme indiqu\xe9 ci-dessous. Pour notre exemple d'application, le "),e.j41(145,"code"),e.EFF(146,"UsersService"),e.k0s(),e.EFF(147," maintient simplement une liste d'utilisateurs en m\xe9moire cod\xe9e en dur, et une m\xe9thode de recherche pour r\xe9cup\xe9rer un utilisateur par son nom d'utilisateur. Dans une application r\xe9elle, c'est ici que vous construiriez votre mod\xe8le d'utilisateur et votre couche de persistance, en utilisant la biblioth\xe8que de votre choix (par exemple, TypeORM, Sequelize, Mongoose, etc.)."),e.k0s(),e.j41(148,"app-copy-button",32)(149,"span",33),e.EFF(150),e.nI1(151,"extension"),e.nrm(152,"app-tabs",null,1),e.k0s(),e.j41(154,"pre")(155,"code",34),e.EFF(156,"\nimport { Injectable } from '@nestjs/common';\n\n// Il doit s'agir d'une v\xe9ritable classe/interface repr\xe9sentant une entit\xe9 utilisateur.\nexport type User = any;\n\n@Injectable()\nexport class UsersService {\n  private readonly users = [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ];\n\n  async findOne(username: string): Promise<User | undefined> {\n    return this.users.find(user => user.username === username);\n  }\n}\n"),e.k0s()(),e.j41(157,"pre")(158,"code",34),e.EFF(159,"\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService {\n  constructor() {\n    this.users = [\n      {\n        userId: 1,\n        username: 'john',\n        password: 'changeme',\n      },\n      {\n        userId: 2,\n        username: 'maria',\n        password: 'guess',\n      },\n    ];\n  }\n\n  async findOne(username) {\n    return this.users.find(user => user.username === username);\n  }\n}\n"),e.k0s()()(),e.j41(160,"p"),e.EFF(161,"Dans le "),e.j41(162,"code"),e.EFF(163,"UsersModule"),e.k0s(),e.EFF(164,", le seul changement n\xe9cessaire est d'ajouter le "),e.j41(165,"code"),e.EFF(166,"UsersService"),e.k0s(),e.EFF(167," au tableau des exportations du d\xe9corateur "),e.j41(168,"code"),e.EFF(169,"@Module"),e.k0s(),e.EFF(170," afin qu'il soit visible en dehors de ce module (nous l'utiliserons bient\xf4t dans notre "),e.j41(171,"code"),e.EFF(172,"AuthService"),e.k0s(),e.EFF(173,")."),e.k0s(),e.j41(174,"app-copy-button",32)(175,"span",33),e.EFF(176),e.nI1(177,"extension"),e.nrm(178,"app-tabs",null,2),e.k0s(),e.j41(180,"pre")(181,"code",34),e.EFF(182,"\nimport { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n"),e.k0s()(),e.j41(183,"pre")(184,"code",34),e.EFF(185,"\nimport { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n"),e.k0s()()(),e.j41(186,"p"),e.EFF(187,"Notre "),e.j41(188,"code"),e.EFF(189,"AuthService"),e.k0s(),e.EFF(190," a pour t\xe2che de r\xe9cup\xe9rer un utilisateur et de v\xe9rifier son mot de passe. Nous cr\xe9ons une m\xe9thode "),e.j41(191,"code"),e.EFF(192,"validateUser()"),e.k0s(),e.EFF(193," dans ce but. Dans le code ci-dessous, nous utilisons un op\xe9rateur d'\xe9talement ES6 pratique pour retirer la propri\xe9t\xe9 password de l'objet user avant de le renvoyer. Nous ferons appel \xe0 la m\xe9thode "),e.j41(194,"code"),e.EFF(195,"validateUser()"),e.k0s(),e.EFF(196," de notre strat\xe9gie locale Passport dans un instant."),e.k0s(),e.j41(197,"app-copy-button",32)(198,"span",33),e.EFF(199),e.nI1(200,"extension"),e.nrm(201,"app-tabs",null,3),e.k0s(),e.j41(203,"pre")(204,"code",34),e.EFF(205,"\nimport { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private usersService: UsersService) {}\n\n  async validateUser(username: string, pass: string): Promise<any> {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n}\n"),e.k0s()(),e.j41(206,"pre")(207,"code",34),e.EFF(208,"\nimport { Injectable, Dependencies } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\n@Dependencies(UsersService)\nexport class AuthService {\n  constructor(usersService) {\n    this.usersService = usersService;\n  }\n\n  async validateUser(username, pass) {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n}\n"),e.k0s()()(),e.j41(209,"blockquote",35)(210,"strong"),e.EFF(211,"Attention"),e.k0s(),e.EFF(212," Bien entendu, dans une application r\xe9elle, vous ne stockeriez pas un mot de passe en texte brut. Vous utiliseriez plut\xf4t une biblioth\xe8que comme "),e.j41(213,"a",36),e.EFF(214,"bcrypt"),e.k0s(),e.EFF(215,", avec un algorithme de hachage \xe0 sens unique sal\xe9. Avec cette approche, vous ne stockeriez que des mots de passe hach\xe9s, et compareriez ensuite le mot de passe stock\xe9 \xe0 une version hach\xe9e du mot de passe "),e.j41(216,"strong"),e.EFF(217,"entrant"),e.k0s(),e.EFF(218,", ne stockant ou n'exposant donc jamais les mots de passe des utilisateurs en texte brut. Pour que notre exemple d'application reste simple, nous violons cette r\xe8gle absolue et utilisons du texte en clair. "),e.j41(219,"strong"),e.EFF(220,"Ne faites pas cela dans votre application r\xe9elle !"),e.k0s()(),e.j41(221,"p"),e.EFF(222,"Maintenant, nous mettons \xe0 jour notre "),e.j41(223,"code"),e.EFF(224,"AuthModule"),e.k0s(),e.EFF(225," pour importer le "),e.j41(226,"code"),e.EFF(227,"UsersModule"),e.k0s(),e.EFF(228,"."),e.k0s(),e.j41(229,"app-copy-button",32)(230,"span",33),e.EFF(231),e.nI1(232,"extension"),e.nrm(233,"app-tabs",null,4),e.k0s(),e.j41(235,"pre")(236,"code",34),e.EFF(237,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n"),e.k0s()(),e.j41(238,"pre")(239,"code",34),e.EFF(240,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n"),e.k0s()()(),e.j41(241,"h4",37)(242,"span"),e.EFF(243,"Mise en oeuvre de Passeport localement"),e.k0s()(),e.j41(244,"p"),e.EFF(245,"Maintenant nous pouvons impl\xe9menter notre "),e.j41(246,"strong"),e.EFF(247,"strat\xe9gie d'authentification locale"),e.k0s(),e.EFF(248," de Passport. Cr\xe9ez un fichier appel\xe9 "),e.j41(249,"code"),e.EFF(250,"local.strategy.ts"),e.k0s(),e.EFF(251," dans le dossier "),e.j41(252,"code"),e.EFF(253,"auth"),e.k0s(),e.EFF(254,", et ajoutez le code suivant :"),e.k0s(),e.j41(255,"app-copy-button",32)(256,"span",33),e.EFF(257),e.nI1(258,"extension"),e.nrm(259,"app-tabs",null,5),e.k0s(),e.j41(261,"pre")(262,"code",34),e.EFF(263,"\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise<any> {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n"),e.k0s()(),e.j41(264,"pre")(265,"code",34),e.EFF(266,"\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException, Dependencies } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\n@Dependencies(AuthService)\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(authService) {\n    super();\n    this.authService = authService;\n  }\n\n  async validate(username, password) {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n"),e.k0s()()(),e.j41(267,"p"),e.EFF(268,"Nous avons suivi la recette d\xe9crite pr\xe9c\xe9demment pour toutes les strat\xe9gies Passport. Dans notre cas d'utilisation avec passport-local, il n'y a pas d'options de configuration, donc notre constructeur appelle simplement "),e.j41(269,"code"),e.EFF(270,"super()"),e.k0s(),e.EFF(271,", sans objet options."),e.k0s(),e.j41(272,"blockquote",38)(273,"strong"),e.EFF(274,"Astuce"),e.k0s(),e.EFF(275," Nous pouvons passer un objet d'options dans l'appel \xe0 "),e.j41(276,"code"),e.EFF(277,"super()"),e.k0s(),e.EFF(278," pour personnaliser le comportement de la strat\xe9gie de passeport. Dans cet exemple, la strat\xe9gie passport-local attend par d\xe9faut des propri\xe9t\xe9s appel\xe9es "),e.j41(279,"code"),e.EFF(280,"username"),e.k0s(),e.EFF(281," et "),e.j41(282,"code"),e.EFF(283,"password"),e.k0s(),e.EFF(284," dans le corps de la requ\xeate. Passez un objet options pour sp\xe9cifier des noms de propri\xe9t\xe9s diff\xe9rents, par exemple : "),e.j41(285,"code"),e.EFF(286),e.k0s(),e.EFF(287,". Voir la "),e.j41(288,"a",39),e.EFF(289,"documentation Passport"),e.k0s(),e.EFF(290," pour plus d'informations.\n"),e.k0s(),e.j41(291,"p"),e.EFF(292,"Nous avons \xe9galement impl\xe9ment\xe9 la m\xe9thode "),e.j41(293,"code"),e.EFF(294,"validate()"),e.k0s(),e.EFF(295,". Pour chaque strat\xe9gie, Passport appellera la fonction verify (impl\xe9ment\xe9e avec la m\xe9thode "),e.j41(296,"code"),e.EFF(297,"validate()"),e.k0s(),e.EFF(298," dans "),e.j41(299,"code"),e.EFF(300,"@nestjs/passport"),e.k0s(),e.EFF(301,") en utilisant un ensemble appropri\xe9 de param\xe8tres sp\xe9cifiques \xe0 la strat\xe9gie. Pour la strat\xe9gie locale, Passport attend une m\xe9thode "),e.j41(302,"code"),e.EFF(303,"validate()"),e.k0s(),e.EFF(304," avec la signature suivante : "),e.j41(305,"code"),e.EFF(306,"validate(username : string, password:string) : any"),e.k0s(),e.EFF(307,"."),e.k0s(),e.j41(308,"p"),e.EFF(309,"La plupart du travail de validation est fait dans notre "),e.j41(310,"code"),e.EFF(311,"AuthService"),e.k0s(),e.EFF(312," (avec l'aide de notre "),e.j41(313,"code"),e.EFF(314,"UsersService"),e.k0s(),e.EFF(315,"), donc cette m\xe9thode est assez simple. La m\xe9thode "),e.j41(316,"code"),e.EFF(317,"validate()"),e.k0s(),e.EFF(318," pour "),e.j41(319,"strong"),e.EFF(320,"n'importe quelle"),e.k0s(),e.EFF(321," strat\xe9gie Passport suivra un sch\xe9ma similaire, variant seulement dans les d\xe9tails de la fa\xe7on dont les informations d'identification sont repr\xe9sent\xe9es. Si un utilisateur est trouv\xe9 et que les informations d'identification sont valides, l'utilisateur est renvoy\xe9 afin que Passport puisse terminer ses t\xe2ches (par exemple, cr\xe9er la propri\xe9t\xe9 "),e.j41(322,"code"),e.EFF(323,"user"),e.k0s(),e.EFF(324," sur l'objet "),e.j41(325,"code"),e.EFF(326,"Request"),e.k0s(),e.EFF(327,"), et que le pipeline de traitement des requ\xeates puisse continuer. S'il n'est pas trouv\xe9, nous lan\xe7ons une exception et laissons notre "),e.j41(328,"a",40),e.EFF(329,"couche d'exceptions"),e.k0s(),e.EFF(330," s'en charger."),e.k0s(),e.j41(331,"p"),e.EFF(332,"Typiquement, la seule diff\xe9rence significative dans la m\xe9thode "),e.j41(333,"code"),e.EFF(334,"validate()"),e.k0s(),e.EFF(335," pour chaque strat\xe9gie est "),e.j41(336,"strong"),e.EFF(337,"comment"),e.k0s(),e.EFF(338," vous d\xe9terminez si un utilisateur existe et est valide. Par exemple, dans une strat\xe9gie JWT, en fonction des besoins, nous pouvons \xe9valuer si le "),e.j41(339,"code"),e.EFF(340,"userId"),e.k0s(),e.EFF(341," port\xe9 dans le token d\xe9cod\xe9 correspond \xe0 un enregistrement dans notre base de donn\xe9es d'utilisateurs, ou correspond \xe0 une liste de tokens r\xe9voqu\xe9s. Ce mod\xe8le de sous-classification et de mise en \u0153uvre d'une validation sp\xe9cifique \xe0 une strat\xe9gie est donc coh\xe9rent, \xe9l\xe9gant et extensible."),e.k0s(),e.j41(342,"p"),e.EFF(343,"Nous devons configurer notre "),e.j41(344,"code"),e.EFF(345,"AuthModule"),e.k0s(),e.EFF(346," pour utiliser les fonctionnalit\xe9s de Passport que nous venons de d\xe9finir. Mettez \xe0 jour "),e.j41(347,"code"),e.EFF(348,"auth.module.ts"),e.k0s(),e.EFF(349," pour qu'il ressemble \xe0 ceci :"),e.k0s(),e.j41(350,"app-copy-button",32)(351,"span",33),e.EFF(352),e.nI1(353,"extension"),e.nrm(354,"app-tabs",null,6),e.k0s(),e.j41(356,"pre")(357,"code",34),e.EFF(358,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [UsersModule, PassportModule],\n  providers: [AuthService, LocalStrategy],\n})\nexport class AuthModule {}\n"),e.k0s()(),e.j41(359,"pre")(360,"code",34),e.EFF(361,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [UsersModule, PassportModule],\n  providers: [AuthService, LocalStrategy],\n})\nexport class AuthModule {}\n"),e.k0s()()(),e.j41(362,"h4",41)(363,"span"),e.EFF(364,"Gardes Passport int\xe9gr\xe9es"),e.k0s()(),e.j41(365,"p"),e.EFF(366,"Le chapitre "),e.j41(367,"a",42),e.EFF(368,"Gardes"),e.k0s(),e.EFF(369," d\xe9crit la fonction premi\xe8re des gardes : d\xe9terminer si une requ\xeate sera trait\xe9e par le gestionnaire de route ou non. Cela reste vrai, et nous utiliserons bient\xf4t cette capacit\xe9 standard. Cependant, dans le contexte de l'utilisation du module "),e.j41(370,"code"),e.EFF(371,"@nestjs/passport"),e.k0s(),e.EFF(372,", nous allons \xe9galement introduire une l\xe9g\xe8re nouveaut\xe9 qui peut \xeatre d\xe9routante \xe0 premi\xe8re vue, donc discutons-en maintenant. Consid\xe9rons que votre application peut exister dans deux \xe9tats, du point de vue de l'authentification :"),e.k0s(),e.j41(373,"ol")(374,"li"),e.EFF(375,"l'utilisateur/client n'est "),e.j41(376,"strong"),e.EFF(377,"pas"),e.k0s(),e.EFF(378," connect\xe9 (n'est pas authentifi\xe9)"),e.k0s(),e.j41(379,"li"),e.EFF(380,"l'utilisateur/client "),e.j41(381,"strong"),e.EFF(382,"est"),e.k0s(),e.EFF(383," connect\xe9 (est authentifi\xe9)"),e.k0s()(),e.j41(384,"p"),e.EFF(385,"Dans le premier cas (l'utilisateur n'est pas connect\xe9), nous devons ex\xe9cuter deux fonctions distinctes :"),e.k0s(),e.j41(386,"ul")(387,"li")(388,"p"),e.EFF(389,"Restreindre les routes auxquelles un utilisateur non authentifi\xe9 peut acc\xe9der (c'est-\xe0-dire refuser l'acc\xe8s aux routes restreintes). Nous utiliserons les gardes dans leur capacit\xe9 habituelle pour g\xe9rer cette fonction, en pla\xe7ant une garde sur les routes prot\xe9g\xe9es. Comme vous pouvez l'imaginer, nous allons v\xe9rifier la pr\xe9sence d'un JWT valide dans cette garde, nous travaillerons donc sur cette garde plus tard, une fois que nous aurons r\xe9ussi \xe0 \xe9mettre des JWTs."),e.k0s()(),e.j41(390,"li")(391,"p"),e.EFF(392,"Initier "),e.j41(393,"strong"),e.EFF(394,"l'\xe9tape d'authentification"),e.k0s(),e.EFF(395," elle-m\xeame lorsqu'un utilisateur non authentifi\xe9 tente de se connecter. C'est l'\xe9tape o\xf9 nous allons "),e.j41(396,"strong"),e.EFF(397,"\xe9mettre"),e.k0s(),e.EFF(398," un JWT \xe0 un utilisateur valide. En y r\xe9fl\xe9chissant un instant, nous savons que nous aurons besoin de "),e.j41(399,"code"),e.EFF(400,"POST"),e.k0s(),e.EFF(401," nom d'utilisateur/mot de passe pour initier l'authentification, donc nous mettrons en place une route "),e.j41(402,"code"),e.EFF(403,"POST /auth/login"),e.k0s(),e.EFF(404," pour g\xe9rer cela. Cela soul\xe8ve la question suivante : comment invoquer la strat\xe9gie passeport-local dans cette route ?"),e.k0s()()(),e.j41(405,"p"),e.EFF(406,"La r\xe9ponse est simple : en utilisant un autre type de garde, l\xe9g\xe8rement diff\xe9rent. Le module "),e.j41(407,"code"),e.EFF(408,"@nestjs/passport"),e.k0s(),e.EFF(409," nous fournit une garde int\xe9gr\xe9e qui fait cela pour nous. Cette garde invoque la strat\xe9gie Passport et lance les \xe9tapes d\xe9crites ci-dessus (r\xe9cup\xe9ration des informations d'identification, ex\xe9cution de la fonction de v\xe9rification, cr\xe9ation de la propri\xe9t\xe9 "),e.j41(410,"code"),e.EFF(411,"user"),e.k0s(),e.EFF(412,", etc)."),e.k0s(),e.j41(413,"p"),e.EFF(414,"Le deuxi\xe8me cas \xe9num\xe9r\xe9 ci-dessus (utilisateur connect\xe9) s'appuie simplement sur le type de garde standard dont nous avons d\xe9j\xe0 parl\xe9 pour permettre aux utilisateurs connect\xe9s d'acc\xe9der aux itin\xe9raires prot\xe9g\xe9s."),e.k0s(),e.j41(415,"p"),e.nrm(416,"app-banner-courses-auth"),e.k0s(),e.j41(417,"h4",43)(418,"span"),e.EFF(419,"Route login"),e.k0s()(),e.j41(420,"p"),e.EFF(421,"Avec la strat\xe9gie en place, nous pouvons maintenant impl\xe9menter une route "),e.j41(422,"code"),e.EFF(423,"/auth/login"),e.k0s(),e.EFF(424," simple, et appliquer la garde int\xe9gr\xe9e pour initier le flux passeport-local."),e.k0s(),e.j41(425,"p"),e.EFF(426,"Ouvrez le fichier "),e.j41(427,"code"),e.EFF(428,"app.controller.ts"),e.k0s(),e.EFF(429," et remplacez son contenu par ce qui suit :"),e.k0s(),e.j41(430,"app-copy-button",32)(431,"span",33),e.EFF(432),e.nI1(433,"extension"),e.nrm(434,"app-tabs",null,7),e.k0s(),e.j41(436,"pre")(437,"code",34),e.EFF(438,"\nimport { Controller, Request, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller()\nexport class AppController {\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  async login(@Request() req) {\n    return req.user;\n  }\n}\n"),e.k0s()(),e.j41(439,"pre")(440,"code",34),e.EFF(441,"\nimport { Controller, Bind, Request, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller()\nexport class AppController {\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  @Bind(Request())\n  async login(req) {\n    return req.user;\n  }\n}\n"),e.k0s()()(),e.j41(442,"p"),e.EFF(443,"Avec "),e.j41(444,"code"),e.EFF(445,"@UseGuards(AuthGuard('local'))"),e.k0s(),e.EFF(446," nous utilisons une "),e.j41(447,"code"),e.EFF(448,"AuthGuard"),e.k0s(),e.EFF(449," que "),e.j41(450,"code"),e.EFF(451,"@nestjs/passport"),e.k0s(),e.EFF(452," a "),e.j41(453,"strong"),e.EFF(454,"automatiquement provisionn\xe9"),e.k0s(),e.EFF(455," pour nous quand nous avons \xe9tendu la strat\xe9gie passport-local. D\xe9composons cela. Notre strat\xe9gie locale Passport a un nom par d\xe9faut "),e.j41(456,"code"),e.EFF(457,"'local''. Nous r\xe9f\xe9ren\xe7ons ce nom dans le d\xe9corateur "),e.k0s(),e.EFF(458,"@UseGuards()"),e.j41(459,"code"),e.EFF(460,"pour l'associer au code fourni par le paquet"),e.k0s(),e.EFF(461,"passport-local"),e.j41(462,"code"),e.EFF(463,". Ceci est utilis\xe9 pour d\xe9sambigu\xefser la strat\xe9gie \xe0 invoquer dans le cas o\xf9 nous aurions plusieurs strat\xe9gies Passport dans notre application (chacune pouvant fournir un "),e.k0s(),e.EFF(464,"AuthGuard` sp\xe9cifique \xe0 la strat\xe9gie). Bien que nous n'ayons pour l'instant qu'une seule strat\xe9gie de ce type, nous en ajouterons bient\xf4t une seconde, ce qui rend ce paquet n\xe9cessaire pour la d\xe9sambigu\xefsation."),e.k0s(),e.j41(465,"p"),e.EFF(466,"Afin de tester notre route, nous allons faire en sorte que notre route "),e.j41(467,"code"),e.EFF(468,"/auth/login"),e.k0s(),e.EFF(469," renvoie simplement l'utilisateur pour l'instant. Cela nous permet \xe9galement de d\xe9montrer une autre fonctionnalit\xe9 de Passport : Passport cr\xe9e automatiquement un objet "),e.j41(470,"code"),e.EFF(471,"user"),e.k0s(),e.EFF(472,", bas\xe9 sur la valeur retourn\xe9e par la m\xe9thode "),e.j41(473,"code"),e.EFF(474,"validate()"),e.k0s(),e.EFF(475,", et l'assigne \xe0 l'objet "),e.j41(476,"code"),e.EFF(477,"Request"),e.k0s(),e.EFF(478," en tant que "),e.j41(479,"code"),e.EFF(480,"req.user"),e.k0s(),e.EFF(481,". Plus tard, nous remplacerons cela par du code pour cr\xe9er et retourner un JWT \xe0 la place."),e.k0s(),e.j41(482,"p"),e.EFF(483,"Comme il s'agit de routes API, nous allons les tester en utilisant la biblioth\xe8que "),e.j41(484,"a",44),e.EFF(485,"cURL"),e.k0s(),e.EFF(486," commun\xe9ment disponible. Vous pouvez tester avec n'importe quel objet "),e.j41(487,"code"),e.EFF(488,"user"),e.k0s(),e.EFF(489," cod\xe9 en dur dans le "),e.j41(490,"code"),e.EFF(491,"UsersService"),e.k0s(),e.EFF(492,"."),e.k0s(),e.j41(493,"pre")(494,"code",29),e.EFF(495,'\n$ # POST vers /auth/login\n$ curl -X POST http://localhost:3000/auth/login -d \'{"username": "john", "password": "changeme"}\' -H "Content-Type: application/json"\n$ # r\xe9sultat -> {"userId":1,"username":"john"}\n'),e.k0s()(),e.j41(496,"p"),e.EFF(497,"Bien que cela fonctionne, passer le nom de la strat\xe9gie directement \xe0 "),e.j41(498,"code"),e.EFF(499,"AuthGuard()"),e.k0s(),e.EFF(500,' introduit des "magic strings" dans le code. Au lieu de cela, nous recommandons de cr\xe9er votre propre classe, comme indiqu\xe9 ci-dessous :'),e.k0s(),e.j41(501,"app-copy-button",32)(502,"span",33),e.EFF(503),e.nI1(504,"extension"),e.nrm(505,"app-tabs",null,8),e.k0s(),e.j41(507,"pre")(508,"code",34),e.EFF(509,"\nimport { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n"),e.k0s()()(),e.j41(510,"p"),e.EFF(511,"Maintenant, nous pouvons mettre \xe0 jour le gestionnaire de route "),e.j41(512,"code"),e.EFF(513,"/auth/login"),e.k0s(),e.EFF(514," et utiliser "),e.j41(515,"code"),e.EFF(516,"LocalAuthGuard"),e.k0s(),e.EFF(517," \xe0 la place :"),e.k0s(),e.j41(518,"app-copy-button")(519,"pre")(520,"code",34),e.EFF(521,"\n@UseGuards(LocalAuthGuard)\n@Post('auth/login')\nasync login(@Request() req) {\n  return req.user;\n}\n"),e.k0s()()(),e.j41(522,"h4",45)(523,"span"),e.EFF(524,"Route logout"),e.k0s()(),e.j41(525,"p"),e.EFF(526,"Pour se d\xe9connecter, nous pouvons cr\xe9er une route suppl\xe9mentaire qui invoque "),e.j41(527,"code"),e.EFF(528,"res.logout()"),e.k0s(),e.EFF(529," pour effacer la session de l'utilisateur. Il s'agit d'une approche typique utilis\xe9e dans l'authentification bas\xe9e sur la session, mais elle ne s'applique pas aux JWTs."),e.k0s(),e.j41(530,"app-copy-button")(531,"pre")(532,"code",34),e.EFF(533,"\n@UseGuards(LocalAuthGuard)\n@Post('auth/logout')\nasync logout(@Request() req) {\n  return req.logout();\n}\n"),e.k0s()()(),e.j41(534,"h4",46)(535,"span"),e.EFF(536,"Fonctionnalit\xe9 JWT"),e.k0s()(),e.j41(537,"p"),e.EFF(538,"Nous sommes pr\xeats \xe0 passer \xe0 la partie JWT de notre syst\xe8me d'authentification. Passons en revue et affinons nos exigences :"),e.k0s(),e.j41(539,"ul")(540,"li"),e.EFF(541,"Permettre aux utilisateurs de s'authentifier avec leur nom d'utilisateur et leur mot de passe, en renvoyant un JWT \xe0 utiliser lors d'appels ult\xe9rieurs \xe0 des points d'extr\xe9mit\xe9 d'API prot\xe9g\xe9s. Nous sommes sur la bonne voie pour r\xe9pondre \xe0 cette exigence. Pour la compl\xe9ter, nous devons \xe9crire le code qui \xe9met un JWT."),e.k0s(),e.j41(542,"li"),e.EFF(543,"Cr\xe9er des itin\xe9raires API prot\xe9g\xe9s en fonction de la pr\xe9sence d'un JWT valide en tant que jeton porteur."),e.k0s()(),e.j41(544,"p"),e.EFF(545,"Nous aurons besoin d'installer quelques paquets suppl\xe9mentaires pour r\xe9pondre \xe0 nos besoins en mati\xe8re de JWT :"),e.k0s(),e.j41(546,"pre")(547,"code",29),e.EFF(548,"\n$ npm install --save @nestjs/jwt passport-jwt\n$ npm install --save-dev @types/passport-jwt\n"),e.k0s()(),e.j41(549,"p"),e.EFF(550,"Le package "),e.j41(551,"code"),e.EFF(552,"@nestjs/jwt"),e.k0s(),e.EFF(553," (voir plus "),e.j41(554,"a",47),e.EFF(555,"ici"),e.k0s(),e.EFF(556,") est un package utilitaire qui aide \xe0 la manipulation des JWT. Le package "),e.j41(557,"code"),e.EFF(558,"passport-jwt"),e.k0s(),e.EFF(559," est le package Passport qui impl\xe9mente la strat\xe9gie JWT et "),e.j41(560,"code"),e.EFF(561,"@types/passport-jwt"),e.k0s(),e.EFF(562," fournit les d\xe9finitions de type TypeScript."),e.k0s(),e.j41(563,"p"),e.EFF(564,"Regardons de plus pr\xe8s comment une requ\xeate "),e.j41(565,"code"),e.EFF(566,"POST /auth/login"),e.k0s(),e.EFF(567," est g\xe9r\xe9e. Nous avons d\xe9cor\xe9 la route en utilisant le "),e.j41(568,"code"),e.EFF(569,"AuthGuard"),e.k0s(),e.EFF(570," int\xe9gr\xe9 fourni par la strat\xe9gie passport-local. Cela signifie que :"),e.k0s(),e.j41(571,"ol")(572,"li"),e.EFF(573,"Le gestionnaire de route "),e.j41(574,"strong"),e.EFF(575,"ne sera invoqu\xe9 que si l'utilisateur a \xe9t\xe9 valid\xe9"),e.k0s()(),e.j41(576,"li"),e.EFF(577,"Le param\xe8tre "),e.j41(578,"code"),e.EFF(579,"req"),e.k0s(),e.EFF(580," contiendra une propri\xe9t\xe9 "),e.j41(581,"code"),e.EFF(582,"user"),e.k0s(),e.EFF(583," (remplie par Passport pendant le flux d'authentification locale)."),e.k0s()(),e.j41(584,"p"),e.EFF(585,"Avec ceci en t\xeate, nous pouvons enfin g\xe9n\xe9rer un vrai JWT, et le retourner dans cette route. Pour garder nos services proprement modulaires, nous allons nous occuper de la g\xe9n\xe9ration du JWT dans le "),e.j41(586,"code"),e.EFF(587,"authService"),e.k0s(),e.EFF(588,". Ouvrez le fichier "),e.j41(589,"code"),e.EFF(590,"auth.service.ts"),e.k0s(),e.EFF(591," dans le dossier "),e.j41(592,"code"),e.EFF(593,"auth"),e.k0s(),e.EFF(594,", et ajoutez la m\xe9thode "),e.j41(595,"code"),e.EFF(596,"login()"),e.k0s(),e.EFF(597,", et importez le "),e.j41(598,"code"),e.EFF(599,"JwtService"),e.k0s(),e.EFF(600," comme indiqu\xe9 :"),e.k0s(),e.j41(601,"app-copy-button",32)(602,"span",33),e.EFF(603),e.nI1(604,"extension"),e.nrm(605,"app-tabs",null,9),e.k0s(),e.j41(607,"pre")(608,"code",34),e.EFF(609,"\nimport { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise<any> {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    const payload = { username: user.username, sub: user.userId };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n"),e.k0s()(),e.j41(610,"pre")(611,"code",34),e.EFF(612,"\nimport { Injectable, Dependencies } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Dependencies(UsersService, JwtService)\n@Injectable()\nexport class AuthService {\n  constructor(usersService, jwtService) {\n    this.usersService = usersService;\n    this.jwtService = jwtService;\n  }\n\n  async validateUser(username, pass) {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user) {\n    const payload = { username: user.username, sub: user.userId };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n"),e.k0s()()(),e.j41(613,"p"),e.EFF(614,"Nous utilisons la biblioth\xe8que "),e.j41(615,"code"),e.EFF(616,"@nestjs/jwt"),e.k0s(),e.EFF(617,", qui fournit une fonction "),e.j41(618,"code"),e.EFF(619,"sign()"),e.k0s(),e.EFF(620," pour g\xe9n\xe9rer notre JWT \xe0 partir d'un sous-ensemble de propri\xe9t\xe9s de l'objet "),e.j41(621,"code"),e.EFF(622,"user"),e.k0s(),e.EFF(623,", que nous retournons ensuite comme un simple objet avec une seule propri\xe9t\xe9 "),e.j41(624,"code"),e.EFF(625,"access_token"),e.k0s(),e.EFF(626,". Note : nous avons choisi le nom de propri\xe9t\xe9 "),e.j41(627,"code"),e.EFF(628,"sub"),e.k0s(),e.EFF(629," pour contenir notre valeur "),e.j41(630,"code"),e.EFF(631,"userId"),e.k0s(),e.EFF(632," afin d'\xeatre coh\xe9rent avec les standards JWT. N'oubliez pas d'injecter le fournisseur JwtService dans le "),e.j41(633,"code"),e.EFF(634,"AuthService"),e.k0s(),e.EFF(635,"."),e.k0s(),e.j41(636,"p"),e.EFF(637,"Nous devons maintenant mettre \xe0 jour le "),e.j41(638,"code"),e.EFF(639,"AuthModule"),e.k0s(),e.EFF(640," pour importer les nouvelles d\xe9pendances et configurer le "),e.j41(641,"code"),e.EFF(642,"JwtModule"),e.k0s(),e.EFF(643,"."),e.k0s(),e.j41(644,"p"),e.EFF(645,"Tout d'abord, cr\xe9ez "),e.j41(646,"code"),e.EFF(647,"constants.ts"),e.k0s(),e.EFF(648," dans le dossier "),e.j41(649,"code"),e.EFF(650,"auth"),e.k0s(),e.EFF(651,", et ajoutez le code suivant :"),e.k0s(),e.j41(652,"app-copy-button",32)(653,"span",33),e.EFF(654),e.nI1(655,"extension"),e.nrm(656,"app-tabs",null,10),e.k0s(),e.j41(658,"pre")(659,"code",34),e.EFF(660,"\nexport const jwtConstants = {\n  secret: 'N UTILISEZ PAS CETTE VALEUR. CR\xc9EZ PLUT\xd4T UN SECRET COMPLEXE ET GARDEZ-LE EN S\xc9CURIT\xc9 EN DEHORS DU CODE SOURCE.',\n};\n"),e.k0s()(),e.j41(661,"pre")(662,"code",34),e.EFF(663,"\nexport const jwtConstants = {\n  secret: 'N UTILISEZ PAS CETTE VALEUR. CR\xc9EZ PLUT\xd4T UN SECRET COMPLEXE ET GARDEZ-LE EN S\xc9CURIT\xc9 EN DEHORS DU CODE SOURCE.',\n};\n"),e.k0s()()(),e.j41(664,"p"),e.EFF(665,"Nous l'utiliserons pour partager notre cl\xe9 entre les \xe9tapes de signature et de v\xe9rification du JWT."),e.k0s(),e.j41(666,"blockquote",35)(667,"strong"),e.EFF(668,"Attention"),e.k0s(),e.j41(669,"strong"),e.EFF(670,"Ne pas exposer cette cl\xe9 publiquement"),e.k0s(),e.EFF(671,". Nous l'avons fait ici pour que le code soit clair, mais dans un syst\xe8me de production "),e.j41(672,"strong"),e.EFF(673,"vous devez prot\xe9ger cette cl\xe9"),e.k0s(),e.EFF(674," \xe0 l'aide de mesures appropri\xe9es telles qu'un coffre-fort de secrets, une variable d'environnement ou un service de configuration.\n"),e.k0s(),e.j41(675,"p"),e.EFF(676,"Maintenant, ouvrez "),e.j41(677,"code"),e.EFF(678,"auth.module.ts"),e.k0s(),e.EFF(679," dans le dossier "),e.j41(680,"code"),e.EFF(681,"auth"),e.k0s(),e.EFF(682," et mettez-le \xe0 jour pour qu'il ressemble \xe0 ceci :"),e.k0s(),e.j41(683,"app-copy-button",32)(684,"span",33),e.EFF(685),e.nI1(686,"extension"),e.nrm(687,"app-tabs",null,11),e.k0s(),e.j41(689,"pre")(690,"code",34),e.EFF(691,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n"),e.k0s()(),e.j41(692,"pre")(693,"code",34),e.EFF(694,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n"),e.k0s()()(),e.j41(695,"p"),e.EFF(696,"Nous configurons le "),e.j41(697,"code"),e.EFF(698,"JwtModule"),e.k0s(),e.EFF(699," en utilisant "),e.j41(700,"code"),e.EFF(701,"register()"),e.k0s(),e.EFF(702,", en passant un objet de configuration. Voir "),e.j41(703,"a",48),e.EFF(704,"ici"),e.k0s(),e.EFF(705," pour plus de d\xe9tails sur le Nest "),e.j41(706,"code"),e.EFF(707,"JwtModule"),e.k0s(),e.EFF(708," et "),e.j41(709,"a",49),e.EFF(710,"ici"),e.k0s(),e.EFF(711," pour plus de d\xe9tails sur les options de configuration disponibles."),e.k0s(),e.j41(712,"p"),e.EFF(713,"Maintenant nous pouvons mettre \xe0 jour la route "),e.j41(714,"code"),e.EFF(715,"/auth/login"),e.k0s(),e.EFF(716," pour retourner un JWT."),e.k0s(),e.j41(717,"app-copy-button",32)(718,"span",33),e.EFF(719),e.nI1(720,"extension"),e.nrm(721,"app-tabs",null,12),e.k0s(),e.j41(723,"pre")(724,"code",34),e.EFF(725,"\nimport { Controller, Request, Post, UseGuards } from '@nestjs/common';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n}\n"),e.k0s()(),e.j41(726,"pre")(727,"code",34),e.EFF(728,"\nimport { Controller, Bind, Request, Post, UseGuards } from '@nestjs/common';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  @Bind(Request())\n  async login(req) {\n    return this.authService.login(req.user);\n  }\n}\n"),e.k0s()()(),e.j41(729,"p"),e.EFF(730,"Testons \xe0 nouveau nos routes en utilisant cURL. Vous pouvez tester avec n'importe quel objet "),e.j41(731,"code"),e.EFF(732,"user"),e.k0s(),e.EFF(733," cod\xe9 en dur dans le "),e.j41(734,"code"),e.EFF(735,"UsersService"),e.k0s(),e.EFF(736,"."),e.k0s(),e.j41(737,"pre")(738,"code",29),e.EFF(739,'\n$ # POST vers /auth/login\n$ curl -X POST http://localhost:3000/auth/login -d \'{"username": "john", "password": "changeme"}\' -H "Content-Type: application/json"\n$ # r\xe9sultat -> {"access_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}\n$ # Note : le JWT ci-dessus a \xe9t\xe9 tronqu\xe9.\n'),e.k0s()(),e.j41(740,"h4",50)(741,"span"),e.EFF(742,"Mise en \u0153uvre du JWT de Passeport"),e.k0s()(),e.j41(743,"p"),e.EFF(744,"Nous pouvons maintenant r\xe9pondre \xe0 notre derni\xe8re exigence : prot\xe9ger les points de terminaison en exigeant qu'un JWT valide soit pr\xe9sent dans la demande. Passport peut nous aider ici aussi. Il fournit la strat\xe9gie "),e.j41(745,"a",51),e.EFF(746,"passport-jwt"),e.k0s(),e.EFF(747," pour s\xe9curiser les points de terminaison RESTful avec des jetons Web JSON. Commencez par cr\xe9er un fichier appel\xe9 "),e.j41(748,"code"),e.EFF(749,"jwt.strategy.ts"),e.k0s(),e.EFF(750," dans le dossier "),e.j41(751,"code"),e.EFF(752,"auth"),e.k0s(),e.EFF(753,", et ajoutez le code suivant :"),e.k0s(),e.j41(754,"app-copy-button",32)(755,"span",33),e.EFF(756),e.nI1(757,"extension"),e.nrm(758,"app-tabs",null,13),e.k0s(),e.j41(760,"pre")(761,"code",34),e.EFF(762,"\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n"),e.k0s()(),e.j41(763,"pre")(764,"code",34),e.EFF(765,"\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n"),e.k0s()()(),e.j41(766,"p"),e.EFF(767,"Avec notre "),e.j41(768,"code"),e.EFF(769,"JwtStrategy"),e.k0s(),e.EFF(770,", nous avons suivi la m\xeame recette d\xe9crite pr\xe9c\xe9demment pour toutes les strat\xe9gies Passport. Cette strat\xe9gie n\xe9cessite une certaine initialisation, ce que nous faisons en passant un objet options dans l'appel "),e.j41(771,"code"),e.EFF(772,"super()"),e.k0s(),e.EFF(773,". Vous pouvez en savoir plus sur les options disponibles "),e.j41(774,"a",52),e.EFF(775,"ici"),e.k0s(),e.EFF(776,". Dans notre cas, ces options sont les suivantes :"),e.k0s(),e.j41(777,"ul")(778,"li")(779,"code"),e.EFF(780,"jwtFromRequest"),e.k0s(),e.EFF(781," : fournit la m\xe9thode par laquelle le JWT sera extrait de la "),e.j41(782,"code"),e.EFF(783,"Request"),e.k0s(),e.EFF(784,". Nous utiliserons l'approche standard qui consiste \xe0 fournir un jeton de porteur dans l'en-t\xeate Authorization de nos demandes d'API. D'autres options sont d\xe9crites "),e.j41(785,"a",53),e.EFF(786,"ici"),e.k0s(),e.EFF(787,"."),e.k0s(),e.j41(788,"li")(789,"code"),e.EFF(790,"ignoreExpiration"),e.k0s(),e.EFF(791," : juste pour \xeatre explicite, nous choisissons le param\xe8tre par d\xe9faut "),e.j41(792,"code"),e.EFF(793,"false"),e.k0s(),e.EFF(794,", qui d\xe9l\xe8gue la responsabilit\xe9 de s'assurer qu'un JWT n'a pas expir\xe9 au module Passport. Cela signifie que si notre route est fournie avec un JWT expir\xe9, la requ\xeate sera refus\xe9e et une r\xe9ponse "),e.j41(795,"code"),e.EFF(796,"401 Unauthorized"),e.k0s(),e.EFF(797," sera envoy\xe9e. Passport s'en occupe automatiquement pour nous."),e.k0s(),e.j41(798,"li")(799,"code"),e.EFF(800,"secretOrKey"),e.k0s(),e.EFF(801," : nous utilisons l'option rapide de fournir un secret sym\xe9trique pour signer le jeton. D'autres options, comme une cl\xe9 publique cod\xe9e en PEM, peuvent \xeatre plus appropri\xe9es pour les applications de production (voir "),e.j41(802,"a",52),e.EFF(803,"ici"),e.k0s(),e.EFF(804," pour plus d'informations). Dans tous les cas, comme nous l'avons d\xe9j\xe0 dit, "),e.j41(805,"strong"),e.EFF(806,"ne pas exposer ce secret publiquement"),e.k0s(),e.EFF(807,"."),e.k0s()(),e.j41(808,"p"),e.EFF(809,"La m\xe9thode "),e.j41(810,"code"),e.EFF(811,"validate()"),e.k0s(),e.EFF(812," m\xe9rite qu'on s'y attarde. Pour la jwt-strategy, Passport v\xe9rifie d'abord la signature du JWT et d\xe9code le JSON. Il invoque ensuite notre m\xe9thode "),e.j41(813,"code"),e.EFF(814,"validate()"),e.k0s(),e.EFF(815," en passant le JSON d\xe9cod\xe9 comme unique param\xe8tre. En se basant sur le fonctionnement de la signature JWT, "),e.j41(816,"strong"),e.EFF(817,"nous avons la garantie de recevoir un jeton valide"),e.k0s(),e.EFF(818," que nous avons pr\xe9alablement sign\xe9 et d\xe9livr\xe9 \xe0 un utilisateur valide."),e.k0s(),e.j41(819,"p"),e.EFF(820,"En cons\xe9quence, notre r\xe9ponse au callback "),e.j41(821,"code"),e.EFF(822,"validate()"),e.k0s(),e.EFF(823," est triviale : nous renvoyons simplement un objet contenant les propri\xe9t\xe9s "),e.j41(824,"code"),e.EFF(825,"userId"),e.k0s(),e.EFF(826," et "),e.j41(827,"code"),e.EFF(828,"username"),e.k0s(),e.EFF(829,". Rappelons que Passport va construire un objet "),e.j41(830,"code"),e.EFF(831,"user"),e.k0s(),e.EFF(832," bas\xe9 sur la valeur de retour de notre m\xe9thode "),e.j41(833,"code"),e.EFF(834,"validate()"),e.k0s(),e.EFF(835,", et l'attacher en tant que propri\xe9t\xe9 de l'objet "),e.j41(836,"code"),e.EFF(837,"Request"),e.k0s(),e.EFF(838,"."),e.k0s(),e.j41(839,"p"),e.EFF(840,"De plus, vous pouvez renvoyer un tableau, o\xf9 la premi\xe8re valeur est utilis\xe9e pour cr\xe9er un objet "),e.j41(841,"code"),e.EFF(842,"user"),e.k0s(),e.EFF(843," et la deuxi\xe8me valeur est utilis\xe9e pour cr\xe9er un objet "),e.j41(844,"code"),e.EFF(845,"authInfo"),e.k0s(),e.EFF(846,"."),e.k0s(),e.j41(847,"p"),e.EFF(848,"Il convient \xe9galement de souligner que cette approche nous laisse de la place (des \" hooks\" en quelque sorte) pour injecter d'autres logiques d'entreprise dans le processus. Par exemple, nous pourrions faire une recherche dans la base de donn\xe9es dans notre m\xe9thode "),e.j41(849,"code"),e.EFF(850,"validate()"),e.k0s(),e.EFF(851," pour extraire plus d'informations sur l'utilisateur, r\xe9sultant en un objet "),e.j41(852,"code"),e.EFF(853,"user"),e.k0s(),e.EFF(854," plus enrichi disponible dans notre "),e.j41(855,"code"),e.EFF(856,"Request"),e.k0s(),e.EFF(857,". C'est aussi l'endroit o\xf9 nous pouvons d\xe9cider d'effectuer une validation plus pouss\xe9e du token, comme rechercher l'"),e.j41(858,"code"),e.EFF(859,"userId"),e.k0s(),e.EFF(860," dans une liste de tokens r\xe9voqu\xe9s, ce qui nous permet d'effectuer la r\xe9vocation du token. Le mod\xe8le que nous avons impl\xe9ment\xe9 ici dans notre code d'exemple est un mod\xe8le rapide, \"JWT sans \xe9tat\", o\xf9 chaque appel \xe0 l'API est imm\xe9diatement autoris\xe9 en fonction de la pr\xe9sence d'un JWT valide, et o\xf9 un petit nombre d'informations sur le demandeur (son "),e.j41(861,"code"),e.EFF(862,"userId"),e.k0s(),e.EFF(863," et son "),e.j41(864,"code"),e.EFF(865,"username"),e.k0s(),e.EFF(866,") est disponible dans notre pipeline de requ\xeate."),e.k0s(),e.j41(867,"p"),e.EFF(868,"Ajouter la nouvelle "),e.j41(869,"code"),e.EFF(870,"JwtStrategy"),e.k0s(),e.EFF(871," comme fournisseur dans le "),e.j41(872,"code"),e.EFF(873,"AuthModule"),e.k0s(),e.EFF(874," :"),e.k0s(),e.j41(875,"app-copy-button",32)(876,"span",33),e.EFF(877),e.nI1(878,"extension"),e.nrm(879,"app-tabs",null,14),e.k0s(),e.j41(881,"pre")(882,"code",34),e.EFF(883,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n"),e.k0s()(),e.j41(884,"pre")(885,"code",34),e.EFF(886,"\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n"),e.k0s()()(),e.j41(887,"p"),e.EFF(888,"En important le m\xeame secret que celui utilis\xe9 lors de la signature du JWT, nous nous assurons que la phase de "),e.j41(889,"strong"),e.EFF(890,"v\xe9rification"),e.k0s(),e.EFF(891," effectu\xe9e par Passport, et la phase de "),e.j41(892,"strong"),e.EFF(893,"signature"),e.k0s(),e.EFF(894," effectu\xe9e dans notre AuthService, utilisent un secret commun."),e.k0s(),e.j41(895,"p"),e.EFF(896,"Enfin, nous d\xe9finissons la classe "),e.j41(897,"code"),e.EFF(898,"JwtAuthGuard"),e.k0s(),e.EFF(899," qui \xe9tend la classe int\xe9gr\xe9e "),e.j41(900,"code"),e.EFF(901,"AuthGuard"),e.k0s(),e.EFF(902," :"),e.k0s(),e.j41(903,"app-copy-button",32)(904,"span",33),e.EFF(905),e.nI1(906,"extension"),e.nrm(907,"app-tabs",null,15),e.k0s(),e.j41(909,"pre")(910,"code",34),e.EFF(911,"\nimport { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n"),e.k0s()()(),e.j41(912,"h4",54)(913,"span"),e.EFF(914,"Mise en \u0153uvre de routes prot\xe9g\xe9es et de gardes strat\xe9giques JWT"),e.k0s()(),e.j41(915,"p"),e.EFF(916,"Nous pouvons maintenant mettre en \u0153uvre notre route prot\xe9g\xe9e et sa garde associ\xe9e."),e.k0s(),e.j41(917,"p"),e.EFF(918,"Ouvrez le fichier "),e.j41(919,"code"),e.EFF(920,"app.controller.ts"),e.k0s(),e.EFF(921," et mettez-le \xe0 jour comme indiqu\xe9 ci-dessous :"),e.k0s(),e.j41(922,"app-copy-button",32)(923,"span",33),e.EFF(924),e.nI1(925,"extension"),e.nrm(926,"app-tabs",null,16),e.k0s(),e.j41(928,"pre")(929,"code",34),e.EFF(930,"\nimport { Controller, Get, Request, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n"),e.k0s()(),e.j41(931,"pre")(932,"code",34),e.EFF(933,"\nimport { Controller, Dependencies, Bind, Get, Request, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { AuthService } from './auth/auth.service';\n\n@Dependencies(AuthService)\n@Controller()\nexport class AppController {\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  @Bind(Request())\n  async login(req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  @Bind(Request())\n  getProfile(req) {\n    return req.user;\n  }\n}\n"),e.k0s()()(),e.j41(934,"p"),e.EFF(935,"Encore une fois, nous appliquons le "),e.j41(936,"code"),e.EFF(937,"AuthGuard"),e.k0s(),e.EFF(938," que le module "),e.j41(939,"code"),e.EFF(940,"@nestjs/passport"),e.k0s(),e.EFF(941," a automatiquement provisionn\xe9 pour nous lorsque nous avons configur\xe9 le module passport-jwt. Cette garde est r\xe9f\xe9renc\xe9e par son nom par d\xe9faut, "),e.j41(942,"code"),e.EFF(943,"jwt"),e.k0s(),e.EFF(944,". Quand notre route "),e.j41(945,"code"),e.EFF(946,"GET /profile"),e.k0s(),e.EFF(947," est frapp\xe9e, le Guard va automatiquement invoquer notre strat\xe9gie personnalis\xe9e configur\xe9e par passport-jwt, valider le JWT, et assigner la propri\xe9t\xe9 "),e.j41(948,"code"),e.EFF(949,"user"),e.k0s(),e.EFF(950," \xe0 l'objet "),e.j41(951,"code"),e.EFF(952,"Request"),e.k0s(),e.EFF(953,"."),e.k0s(),e.j41(954,"p"),e.EFF(955,"Assurez-vous que l'application fonctionne et testez les routes en utilisant "),e.j41(956,"code"),e.EFF(957,"cURL"),e.k0s(),e.EFF(958,"."),e.k0s(),e.j41(959,"pre")(960,"code",29),e.EFF(961,'\n$ # GET /profile\n$ curl http://localhost:3000/profile\n$ # r\xe9sultat -> {"statusCode":401,"message":"Unauthorized"}\n\n$ # POST /auth/login\n$ curl -X POST http://localhost:3000/auth/login -d \'{"username": "john", "password": "changeme"}\' -H "Content-Type: application/json"\n$ # r\xe9sultat -> {"access_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2Vybm... }\n\n$ # GET /profile en utilisant le jeton d\'acc\xe8s (access_token) renvoy\xe9 \xe0 l\'\xe9tape pr\xe9c\xe9dente comme code porteur\n$ curl http://localhost:3000/profile -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2Vybm..."\n$ # r\xe9sultat -> {"userId":1,"username":"john"}\n'),e.k0s()(),e.j41(962,"p"),e.EFF(963,"Notez que dans le "),e.j41(964,"code"),e.EFF(965,"AuthModule"),e.k0s(),e.EFF(966,", nous avons configur\xe9 le JWT pour avoir une expiration de "),e.j41(967,"code"),e.EFF(968,"60 seconds"),e.k0s(),e.EFF(969,". C'est probablement une expiration trop courte, et traiter les d\xe9tails de l'expiration et du rafra\xeechissement des jetons d\xe9passe le cadre de cet article. Cependant, nous avons choisi cela pour d\xe9montrer une qualit\xe9 importante des JWTs et de la strat\xe9gie passport-jwt. Si vous attendez 60 secondes apr\xe8s l'authentification avant de tenter une requ\xeate "),e.j41(970,"code"),e.EFF(971,"GET /profile"),e.k0s(),e.EFF(972,", vous recevrez une r\xe9ponse "),e.j41(973,"code"),e.EFF(974,"401 Unauthorized"),e.k0s(),e.EFF(975,". Cela est d\xfb au fait que Passport v\xe9rifie automatiquement le d\xe9lai d'expiration du JWT, ce qui vous \xe9vite de le faire dans votre application."),e.k0s(),e.j41(976,"p"),e.EFF(977,"Nous avons maintenant termin\xe9 la mise en \u0153uvre de l'authentification JWT. Les clients JavaScript (tels que Angular/React/Vue) et les autres applications JavaScript peuvent d\xe9sormais s'authentifier et communiquer en toute s\xe9curit\xe9 avec notre serveur API."),e.k0s(),e.j41(978,"h4",55)(979,"span"),e.EFF(980,"Extension des gardes"),e.k0s()(),e.j41(981,"p"),e.EFF(982,"Dans la plupart des cas, l'utilisation d'une classe "),e.j41(983,"code"),e.EFF(984,"AuthGuard"),e.k0s(),e.EFF(985," fournie est suffisante. Cependant, il peut y avoir des cas d'utilisation o\xf9 vous voudriez simplement \xe9tendre la gestion des erreurs par d\xe9faut ou la logique d'authentification. Pour cela, vous pouvez \xe9tendre la classe int\xe9gr\xe9e et surcharger les m\xe9thodes dans une sous-classe."),e.k0s(),e.j41(986,"app-copy-button")(987,"pre")(988,"code",34),e.EFF(989,"\nimport {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // Ajoutez ici votre logique d'authentification personnalis\xe9e\n    // par exemple, appellez super.logIn(request) pour \xe9tablir une session.\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    // Vous pouvez lancer une exception sur la base des arguments \"info\" ou \"err\".\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n"),e.k0s()()(),e.j41(990,"p"),e.EFF(991,"En plus d'\xe9tendre la gestion des erreurs et la logique d'authentification par d\xe9faut, nous pouvons permettre \xe0 l'authentification de passer par une cha\xeene de strat\xe9gies. La premi\xe8re strat\xe9gie qui r\xe9ussit, la premi\xe8re redirection ou la premi\xe8re erreur interrompt la cha\xeene. Les \xe9checs d'authentification passeront par chaque strat\xe9gie en s\xe9rie, pour finalement \xe9chouer si toutes les strat\xe9gies \xe9chouent."),e.k0s(),e.j41(992,"app-copy-button")(993,"pre")(994,"code",34),e.EFF(995,"\nexport class JwtAuthGuard extends AuthGuard(['strategy_jwt_1', 'strategy_jwt_2', '...']) { ... }\n"),e.k0s()()(),e.j41(996,"h4",56)(997,"span"),e.EFF(998,"Activer l'authentification globalement"),e.k0s()(),e.j41(999,"p"),e.EFF(1e3,"Si la grande majorit\xe9 de vos points d'acc\xe8s doivent \xeatre prot\xe9g\xe9s par d\xe9faut, vous pouvez enregistrer la garde d'authentification comme une "),e.j41(1001,"a",57),e.EFF(1002,"garde globale"),e.k0s(),e.EFF(1003," et au lieu d'utiliser le d\xe9corateur "),e.j41(1004,"code"),e.EFF(1005,"@UseGuards()"),e.k0s(),e.EFF(1006," au-dessus de chaque contr\xf4leur, vous pouvez simplement indiquer quelles routes doivent \xeatre publiques."),e.k0s(),e.j41(1007,"p"),e.EFF(1008,"Tout d'abord, enregistrez le "),e.j41(1009,"code"),e.EFF(1010,"JwtAuthGuard"),e.k0s(),e.EFF(1011," en tant que garde globale en utilisant la construction suivante (dans n'importe quel module) :"),e.k0s(),e.j41(1012,"app-copy-button")(1013,"pre")(1014,"code",34),e.EFF(1015,"\nproviders: [\n  {\n    provide: APP_GUARD,\n    useClass: JwtAuthGuard,\n  },\n],\n"),e.k0s()()(),e.j41(1016,"p"),e.EFF(1017,"Avec ceci en place, Nest va automatiquement lier "),e.j41(1018,"code"),e.EFF(1019,"JwtAuthGuard"),e.k0s(),e.EFF(1020," \xe0 tous les endpoints."),e.k0s(),e.j41(1021,"p"),e.EFF(1022,"Maintenant, nous devons fournir un m\xe9canisme pour d\xe9clarer les routes comme publiques. Pour cela, nous pouvons cr\xe9er un d\xe9corateur personnalis\xe9 en utilisant la fonction d'usine du d\xe9corateur "),e.j41(1023,"code"),e.EFF(1024,"SetMetadata"),e.k0s(),e.EFF(1025,"."),e.k0s(),e.j41(1026,"app-copy-button")(1027,"pre")(1028,"code",34),e.EFF(1029,"\nimport { SetMetadata } from '@nestjs/common';\n\nexport const IS_PUBLIC_KEY = 'isPublic';\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\n"),e.k0s()()(),e.j41(1030,"p"),e.EFF(1031,"Dans le fichier ci-dessus, nous avons export\xe9 deux constantes. L'une est notre cl\xe9 de m\xe9tadonn\xe9es nomm\xe9e "),e.j41(1032,"code"),e.EFF(1033,"IS_PUBLIC_KEY"),e.k0s(),e.EFF(1034,", et l'autre est notre nouveau d\xe9corateur que nous allons appeler "),e.j41(1035,"code"),e.EFF(1036,"Public"),e.k0s(),e.EFF(1037," (vous pouvez alternativement le nommer "),e.j41(1038,"code"),e.EFF(1039,"SkipAuth"),e.k0s(),e.EFF(1040," ou "),e.j41(1041,"code"),e.EFF(1042,"AllowAnon"),e.k0s(),e.EFF(1043,", selon ce qui convient \xe0 votre projet)."),e.k0s(),e.j41(1044,"p"),e.EFF(1045,"Maintenant que nous avons un d\xe9corateur personnalis\xe9 "),e.j41(1046,"code"),e.EFF(1047,"@Public()"),e.k0s(),e.EFF(1048,", nous pouvons l'utiliser pour d\xe9corer n'importe quelle m\xe9thode, comme suit :"),e.k0s(),e.j41(1049,"app-copy-button")(1050,"pre")(1051,"code",34),e.EFF(1052,"\n@Public()\n@Get()\nfindAll() {\n  return [];\n}\n"),e.k0s()()(),e.j41(1053,"p"),e.EFF(1054,"Enfin, nous avons besoin que le "),e.j41(1055,"code"),e.EFF(1056,"JwtAuthGuard"),e.k0s(),e.EFF(1057," retourne "),e.j41(1058,"code"),e.EFF(1059,"true"),e.k0s(),e.EFF(1060," lorsque la m\xe9tadonn\xe9e "),e.j41(1061,"code"),e.EFF(1062,'"isPublic"'),e.k0s(),e.EFF(1063," est trouv\xe9e. Pour cela, nous allons utiliser la classe "),e.j41(1064,"code"),e.EFF(1065,"Reflector"),e.k0s(),e.EFF(1066," (en savoir plus "),e.j41(1067,"a",58),e.EFF(1068,"ici"),e.k0s(),e.EFF(1069,")."),e.k0s(),e.j41(1070,"app-copy-button")(1071,"pre")(1072,"code",34),e.EFF(1073,"\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride<boolean>(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n"),e.k0s()()(),e.j41(1074,"h4",59)(1075,"span"),e.EFF(1076,"Strat\xe9gies li\xe9es aux requ\xeates"),e.k0s()(),e.j41(1077,"p"),e.EFF(1078,"L'API du passeport est bas\xe9e sur l'enregistrement de strat\xe9gies dans l'instance globale de la biblioth\xe8que. Par cons\xe9quent, les strat\xe9gies ne sont pas con\xe7ues pour avoir des options d\xe9pendantes de la requ\xeate ou pour \xeatre dynamiquement instanci\xe9es par requ\xeate (en savoir plus sur les fournisseurs "),e.j41(1079,"a",60),e.EFF(1080,"request-scoped"),e.k0s(),e.EFF(1081,"). Lorsque vous configurez votre strat\xe9gie pour qu'elle soit adapt\xe9e aux requ\xeates, Nest ne l'instanciera jamais car elle n'est pas li\xe9e \xe0 une route sp\xe9cifique. Il n'existe aucun moyen physique de d\xe9terminer quelles strat\xe9gies \xe0 port\xe9e de requ\xeate doivent \xeatre ex\xe9cut\xe9es par requ\xeate."),e.k0s(),e.j41(1082,"p"),e.EFF(1083,"Cependant, il existe des moyens de r\xe9soudre dynamiquement les fournisseurs \xe0 port\xe9e de requ\xeate au sein de la strat\xe9gie. Pour cela, nous utilisons la fonctionnalit\xe9 "),e.j41(1084,"a",61),e.EFF(1085,"r\xe9f\xe9rence de module"),e.k0s(),e.EFF(1086,"."),e.k0s(),e.j41(1087,"p"),e.EFF(1088,"Tout d'abord, ouvrez le fichier "),e.j41(1089,"code"),e.EFF(1090,"local.strategy.ts"),e.k0s(),e.EFF(1091," et injectez le "),e.j41(1092,"code"),e.EFF(1093,"ModuleRef"),e.k0s(),e.EFF(1094," de la mani\xe8re habituelle :"),e.k0s(),e.j41(1095,"app-copy-button")(1096,"pre")(1097,"code",34),e.EFF(1098,"\nconstructor(private moduleRef: ModuleRef) {\n  super({\n    passReqToCallback: true,\n  });\n}\n"),e.k0s()()(),e.j41(1099,"blockquote",38)(1100,"strong"),e.EFF(1101,"Astuce"),e.k0s(),e.EFF(1102," La classe "),e.j41(1103,"code"),e.EFF(1104,"ModuleRef"),e.k0s(),e.EFF(1105," est import\xe9e du paquet "),e.j41(1106,"code"),e.EFF(1107,"@nestjs/core"),e.k0s(),e.EFF(1108,".\n"),e.k0s(),e.j41(1109,"p"),e.EFF(1110,"Assurez-vous de mettre la propri\xe9t\xe9 de configuration "),e.j41(1111,"code"),e.EFF(1112,"passReqToCallback"),e.k0s(),e.EFF(1113," \xe0 "),e.j41(1114,"code"),e.EFF(1115,"true"),e.k0s(),e.EFF(1116,", comme indiqu\xe9 ci-dessus."),e.k0s(),e.j41(1117,"p"),e.EFF(1118,"Dans l'\xe9tape suivante, l'instance de requ\xeate sera utilis\xe9e pour obtenir l'identifiant du contexte actuel, au lieu d'en g\xe9n\xe9rer un nouveau (pour en savoir plus sur le contexte de requ\xeate "),e.j41(1119,"a",62),e.EFF(1120,"ici"),e.k0s(),e.EFF(1121,")."),e.k0s(),e.j41(1122,"p"),e.EFF(1123,"Maintenant, dans la m\xe9thode "),e.j41(1124,"code"),e.EFF(1125,"validate()"),e.k0s(),e.EFF(1126," de la classe "),e.j41(1127,"code"),e.EFF(1128,"LocalStrategy"),e.k0s(),e.EFF(1129,", utilisez la m\xe9thode "),e.j41(1130,"code"),e.EFF(1131,"getByRequest()"),e.k0s(),e.EFF(1132," de la classe "),e.j41(1133,"code"),e.EFF(1134,"ContextIdFactory"),e.k0s(),e.EFF(1135," pour cr\xe9er un identifiant de contexte bas\xe9 sur l'objet de requ\xeate, et passez-le \xe0 l'appel "),e.j41(1136,"code"),e.EFF(1137,"resolve()"),e.k0s(),e.EFF(1138," :"),e.k0s(),e.j41(1139,"app-copy-button")(1140,"pre")(1141,"code",34),e.EFF(1142,'\nasync validate(\n  request: Request,\n  username: string,\n  password: string,\n) {\n  const contextId = ContextIdFactory.getByRequest(request);\n  // "AuthService" est un fournisseur \xe0 port\xe9e de requ\xeate\n  const authService = await this.moduleRef.resolve(AuthService, contextId);\n  ...\n}\n'),e.k0s()()(),e.j41(1143,"p"),e.EFF(1144,"Dans l'exemple ci-dessus, la m\xe9thode "),e.j41(1145,"code"),e.EFF(1146,"resolve()"),e.k0s(),e.EFF(1147," renvoie de mani\xe8re asynchrone l'instance du fournisseur "),e.j41(1148,"code"),e.EFF(1149,"AuthService"),e.k0s(),e.EFF(1150," (nous avons suppos\xe9 que "),e.j41(1151,"code"),e.EFF(1152,"AuthService"),e.k0s(),e.EFF(1153," est marqu\xe9 comme un fournisseur \xe0 port\xe9e de requ\xeate)."),e.k0s(),e.j41(1154,"h4",63)(1155,"span"),e.EFF(1156,"Personnaliser Passport"),e.k0s()(),e.j41(1157,"p"),e.EFF(1158,"Toutes les options de personnalisation standard de Passport peuvent \xeatre pass\xe9es de la m\xeame mani\xe8re, en utilisant la m\xe9thode "),e.j41(1159,"code"),e.EFF(1160,"register()"),e.k0s(),e.EFF(1161,". Les options disponibles d\xe9pendent de la strat\xe9gie mise en \u0153uvre. Par exemple, les options disponibles d\xe9pendent de la strat\xe9gie mise en \u0153uvre :"),e.k0s(),e.j41(1162,"app-copy-button")(1163,"pre")(1164,"code",34),e.EFF(1165,"\nPassportModule.register({ session: true });\n"),e.k0s()()(),e.j41(1166,"p"),e.EFF(1167,"Vous pouvez \xe9galement passer aux strat\xe9gies un objet d'options dans leurs constructeurs pour les configurer.\nPour la strat\xe9gie locale, vous pouvez passer par exemple :"),e.k0s(),e.j41(1168,"app-copy-button")(1169,"pre")(1170,"code",34),e.EFF(1171,"\nconstructor(private authService: AuthService) {\n  super({\n    usernameField: 'email',\n    passwordField: 'password',\n  });\n}\n"),e.k0s()()(),e.j41(1172,"p"),e.EFF(1173,"Consultez le "),e.j41(1174,"a",64),e.EFF(1175,"site web Passeport officiel"),e.k0s(),e.EFF(1176," pour conna\xeetre les noms de propri\xe9t\xe9."),e.k0s(),e.j41(1177,"h4",65)(1178,"span"),e.EFF(1179,"Strat\xe9gies nomm\xe9es"),e.k0s()(),e.j41(1180,"p"),e.EFF(1181,"Lors de l'impl\xe9mentation d'une strat\xe9gie, vous pouvez lui donner un nom en passant un second argument \xe0 la fonction "),e.j41(1182,"code"),e.EFF(1183,"PassportStrategy"),e.k0s(),e.EFF(1184,". Si vous ne le faites pas, chaque strat\xe9gie aura un nom par d\xe9faut (par exemple, 'jwt' pour jwt-strategy) :"),e.k0s(),e.j41(1185,"app-copy-button")(1186,"pre")(1187,"code",34),e.EFF(1188,"\nexport class JwtStrategy extends PassportStrategy(Strategy, 'myjwt')\n"),e.k0s()()(),e.j41(1189,"p"),e.EFF(1190,"Ensuite, vous y faites r\xe9f\xe9rence via un d\xe9corateur comme "),e.j41(1191,"code"),e.EFF(1192,"@UseGuards(AuthGuard('myjwt'))"),e.k0s(),e.EFF(1193,"."),e.k0s(),e.j41(1194,"h4",66)(1195,"span"),e.EFF(1196,"GraphQL"),e.k0s()(),e.j41(1197,"p"),e.EFF(1198,"Pour utiliser un AuthGuard avec "),e.j41(1199,"a",67),e.EFF(1200,"GraphQL"),e.k0s(),e.EFF(1201,", il faut \xe9tendre la classe "),e.j41(1202,"code"),e.EFF(1203,"AuthGuard"),e.k0s(),e.EFF(1204," int\xe9gr\xe9e et surcharger la m\xe9thode "),e.j41(1205,"code"),e.EFF(1206,"getRequest()"),e.k0s(),e.EFF(1207,"."),e.k0s(),e.j41(1208,"app-copy-button")(1209,"pre")(1210,"code",34),e.EFF(1211,"\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n"),e.k0s()()(),e.j41(1212,"p"),e.EFF(1213,"Pour obtenir l'utilisateur authentifi\xe9 actuel dans votre r\xe9solveur graphql, vous pouvez d\xe9finir un d\xe9corateur "),e.j41(1214,"code"),e.EFF(1215,"@CurrentUser()"),e.k0s(),e.EFF(1216," :"),e.k0s(),e.j41(1217,"app-copy-button")(1218,"pre")(1219,"code",34),e.EFF(1220,"\nimport { createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\nexport const CurrentUser = createParamDecorator(\n  (data: unknown, context: ExecutionContext) => {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req.user;\n  },\n);\n"),e.k0s()()(),e.j41(1221,"p"),e.EFF(1222,"Pour utiliser le d\xe9corateur ci-dessus dans votre r\xe9solveur, assurez-vous de l'inclure en tant que param\xe8tre de votre requ\xeate ou mutation :"),e.k0s(),e.j41(1223,"app-copy-button")(1224,"pre")(1225,"code",34),e.EFF(1226,"\n@Query(() => User)\n@UseGuards(GqlAuthGuard)\nwhoAmI(@CurrentUser() user: User) {\n  return this.usersService.findById(user.id);\n}\n"),e.k0s()()(),e.j41(1227,"p"),e.EFF(1228,"Pour la strat\xe9gie passport-local, vous devrez \xe9galement ajouter les arguments du contexte GraphQL au corps de la requ\xeate afin que Passport puisse y acc\xe9der pour la validation. Sinon, vous obtiendrez une erreur \xab Unauthorized \xbb."),e.k0s(),e.j41(1229,"app-copy-button")(1230,"pre")(1231,"code",34),e.EFF(1232,"\n@Injectable()\nexport class GqlLocalAuthGuard extends AuthGuard('local') {\n  getRequest(context: ExecutionContext) {\n    const gqlExecutionContext = GqlExecutionContext.create(context);\n    const gqlContext = gqlExecutionContext.getContext();\n    const gqlArgs = gqlExecutionContext.getArgs();\n\n    gqlContext.req.body = { ...gqlContext.req.body, ...gqlArgs };\n    return gqlContext.req;\n  }\n}\n"),e.k0s()()()()),2&t){const r=e.sdS(153),u=e.sdS(179),i=e.sdS(202),c=e.sdS(234),a=e.sdS(260),F=e.sdS(355),E=e.sdS(435),j=e.sdS(506),h=e.sdS(606),y=e.sdS(657),g=e.sdS(688),A=e.sdS(722),b=e.sdS(759),S=e.sdS(880),C=e.sdS(908),x=e.sdS(927);e.R7$(150),e.SpI(" ",e.i5U(151,74,"users/users.service",r.isJsActive),"\n"),e.R7$(4),e.AVh("hide",r.isJsActive),e.R7$(3),e.AVh("hide",!r.isJsActive),e.R7$(19),e.SpI(" ",e.i5U(177,77,"users/users.module",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(16),e.SpI(" ",e.i5U(200,80,"auth/auth.service",i.isJsActive),"\n"),e.R7$(4),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(25),e.SpI(" ",e.i5U(232,83,"auth/auth.module",c.isJsActive),"\n"),e.R7$(4),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(19),e.SpI(" ",e.i5U(258,86,"auth/local.strategy",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(22),e.Lme("super(","{"," usernameField : 'email' ","}",")"),e.R7$(66),e.SpI(" ",e.i5U(353,89,"auth/auth.module",F.isJsActive),"\n"),e.R7$(4),e.AVh("hide",F.isJsActive),e.R7$(3),e.AVh("hide",!F.isJsActive),e.R7$(73),e.SpI(" ",e.i5U(433,92,"app.controller",E.isJsActive),"\n"),e.R7$(4),e.AVh("hide",E.isJsActive),e.R7$(3),e.AVh("hide",!E.isJsActive),e.R7$(64),e.SpI(" ",e.i5U(504,95,"auth/local-auth.guard",j.isJsActive),"\n"),e.R7$(100),e.SpI(" ",e.i5U(604,98,"auth/auth.service",h.isJsActive),"\n"),e.R7$(4),e.AVh("hide",h.isJsActive),e.R7$(3),e.AVh("hide",!h.isJsActive),e.R7$(44),e.SpI(" ",e.i5U(655,101,"auth/constants",y.isJsActive),"\n"),e.R7$(4),e.AVh("hide",y.isJsActive),e.R7$(3),e.AVh("hide",!y.isJsActive),e.R7$(24),e.SpI(" ",e.i5U(686,104,"auth/auth.module",g.isJsActive),"\n"),e.R7$(4),e.AVh("hide",g.isJsActive),e.R7$(3),e.AVh("hide",!g.isJsActive),e.R7$(27),e.SpI(" ",e.i5U(720,107,"app.controller",A.isJsActive),"\n"),e.R7$(4),e.AVh("hide",A.isJsActive),e.R7$(3),e.AVh("hide",!A.isJsActive),e.R7$(30),e.SpI(" ",e.i5U(757,110,"auth/jwt.strategy",b.isJsActive),"\n"),e.R7$(4),e.AVh("hide",b.isJsActive),e.R7$(3),e.AVh("hide",!b.isJsActive),e.R7$(114),e.SpI(" ",e.i5U(878,113,"auth/auth.module",S.isJsActive),"\n"),e.R7$(4),e.AVh("hide",S.isJsActive),e.R7$(3),e.AVh("hide",!S.isJsActive),e.R7$(21),e.SpI(" ",e.i5U(906,116,"auth/jwt-auth.guard",C.isJsActive),"\n"),e.R7$(19),e.SpI(" ",e.i5U(925,119,"app.controller",x.isJsActive),"\n"),e.R7$(4),e.AVh("hide",x.isJsActive),e.R7$(3),e.AVh("hide",!x.isJsActive)}},dependencies:[v.O,l.a,Q.q,d.z,k.Wk,f.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"passport"}}];let Y=(()=>{class s{static \u0275fac=function(t){return new(t||s)};static \u0275mod=e.$C({type:s});static \u0275inj=e.G2t({imports:[I.MD,w.G,k.iI.forChild(K)]})}return s})()}}]);