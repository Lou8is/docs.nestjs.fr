"use strict";(self.webpackChunkdocs_nestjs_com=self.webpackChunkdocs_nestjs_com||[]).push([[557],{4557:(T,h,p)=>{p.r(h),p.d(h,{MicroservicesModule:()=>M});var q=p(177),f=p(685),y=p(445),d=p(8050),e=p(4438),F=p(5119),m=p(4819),x=p(8149),C=p(7077),l=p(2469),k=p(5663);const P=[{path:"basics",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-basics"]],features:[e.Vt3],decls:776,vars:46,consts:[["contentReference",""],["appda0b8de71cb7f55efd06c304f2cb3b2204c2bbcc",""],["appe3bf31e9438659a79cca6ee5f8a1918006a6863a",""],["appd10b52023ad30a65a1ec44f21920d0d6d7e55dda",""],["app56a7ae7abd4ea80179d364828a70166dd6168049",""],["appfd397dd96bf6e26834b62f36ed659bd7521d8774",""],["app8899f0b0fd36f4d799e409c8c24dfd87db2003f3",""],["app38a9ecfbfcef35fc8b51aebcd1cf7a395b29d58f",""],["appec5bfb79b5281cb880243690450c8ee947bd6257",""],["appbe543a89371a44aa84414308fd6dd755fcaaed95",""],["app8a918ef0c6f85bc43e8243e6ddc5134d7bb83648",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/basics.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","vue-densemble"],["src","/assets/Microservices_1.png",1,"illustrative-image"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","pour-commencer"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["href","https://github.com/nestjs/nest/blob/master/packages/microservices/interfaces/serializer.interface.ts","target","_blank"],["href","https://github.com/nestjs/nest/blob/master/packages/microservices/interfaces/deserializer.interface.ts","target","_blank"],["appAnchor","","id","mod\xe8les"],["appAnchor","","id","requ\xeate-r\xe9ponse"],["rel","nofollow","target","_blank","href","https://docs.confluent.io/3.0.0/streams/"],["rel","nofollow","target","_blank","href","https://github.com/nats-io/node-nats-streaming"],["href","/microservices/basics#messagerie-%C3%A9v%C3%A9nementielle"],["rel","nofollow","target","_blank","href","https://nats.io/"],["routerLink","/controllers"],["appAnchor","","id","r\xe9ponses-asynchrones"],["appAnchor","","id","messagerie-\xe9v\xe9nementielle"],["appAnchor","","id","d\xe9corateurs"],["appAnchor","","id","client"],["href","/fundamentals/custom-providers#jetons-de-fournisseur-non-bas%C3%A9s-sur-une-classe"],["routerLink","/fundamentals/custom-providers"],["appAnchor","","id","envoi-de-messages"],["appAnchor","","id","publication-d\xe9v\xe9nements"],["appAnchor","","id","port\xe9es"],["routerLink","/fundamentals/injection-scopes"],["appAnchor","","id","gestion-des-d\xe9passements-de-d\xe9lai"],["rel","nofollow","target","_blank","href","https://rxjs.dev"],["rel","nofollow","target","_blank","href","https://github.com/ReactiveX/rxjs"],["appAnchor","","id","prise-en-charge-tls"],["rel","nofollow","target","_blank","href","https://nodejs.org/api/tls.html"]],template:function(t,r){if(1&t&&(e.j41(0,"div",11,0)(2,"div",12)(3,"a",13),e.nrm(4,"i",14),e.k0s()(),e.j41(5,"h3",15),e.EFF(6,"Vue d'ensemble"),e.k0s(),e.j41(7,"p"),e.EFF(8,"En plus des architectures d'application traditionnelles (parfois appel\xe9es monolithiques), Nest supporte nativement le style architectural de d\xe9veloppement en microservices. La plupart des concepts abord\xe9s ailleurs dans cette documentation, tels que l'injection de d\xe9pendances, les d\xe9corateurs, les filtres d'exception, les tuyaux, les gardes et les intercepteurs, s'appliquent \xe9galement aux microservices. Dans la mesure du possible, Nest fait abstraction des d\xe9tails de mise en \u0153uvre afin que les m\xeames composants puissent \xeatre ex\xe9cut\xe9s sur des plates-formes HTTP, des WebSockets et des microservices. Cette section couvre les aspects de Nest qui sont sp\xe9cifiques aux microservices."),e.k0s(),e.j41(9,"p"),e.EFF(10,"Dans Nest, un microservice est fondamentalement une application qui utilise une couche de "),e.j41(11,"strong"),e.EFF(12,"transport"),e.k0s(),e.EFF(13," diff\xe9rente de HTTP."),e.k0s(),e.j41(14,"figure"),e.nrm(15,"img",16),e.k0s(),e.j41(16,"p"),e.EFF(17,"Nest supporte plusieurs impl\xe9mentations int\xe9gr\xe9es de la couche de transport, appel\xe9es "),e.j41(18,"strong"),e.EFF(19,"transporteurs"),e.k0s(),e.EFF(20,", qui sont responsables de la transmission de messages entre diff\xe9rentes instances de microservices. La plupart des transporteurs supportent nativement les styles de messages "),e.j41(21,"strong"),e.EFF(22,"requ\xeate-r\xe9ponse"),e.k0s(),e.EFF(23," et "),e.j41(24,"strong"),e.EFF(25,"\xe9v\xe9nement"),e.k0s(),e.EFF(26,". Nest abstrait les d\xe9tails d'impl\xe9mentation de chaque transporteur derri\xe8re une interface canonique pour les messages de type requ\xeate-r\xe9ponse et bas\xe9s sur les \xe9v\xe9nements. Il est ainsi facile de passer d'une couche de transport \xe0 une autre - par exemple pour exploiter les caract\xe9ristiques de fiabilit\xe9 ou de performance sp\xe9cifiques d'une couche de transport particuli\xe8re - sans affecter le code de votre application."),e.k0s(),e.j41(27,"h4",17)(28,"span"),e.EFF(29,"Installation"),e.k0s()(),e.j41(30,"p"),e.EFF(31,"Pour commencer \xe0 construire des microservices, il faut d'abord installer le package requis :"),e.k0s(),e.j41(32,"pre")(33,"code",18),e.EFF(34,"\n$ npm i --save @nestjs/microservices\n"),e.k0s()(),e.j41(35,"h4",19)(36,"span"),e.EFF(37,"Pour commencer"),e.k0s()(),e.j41(38,"p"),e.EFF(39,"Pour instancier un microservice, utilisez la m\xe9thode "),e.j41(40,"code"),e.EFF(41,"createMicroservice()"),e.k0s(),e.EFF(42," de la classe "),e.j41(43,"code"),e.EFF(44,"NestFactory"),e.k0s(),e.EFF(45," :"),e.k0s(),e.j41(46,"app-copy-button",20)(47,"span",21),e.EFF(48),e.nI1(49,"extension"),e.nrm(50,"app-tabs",null,1),e.k0s(),e.j41(52,"pre")(53,"code",22),e.EFF(54,"\nimport { NestFactory } from '@nestjs/core';\nimport { Transport, MicroserviceOptions } from '@nestjs/microservices';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice<MicroserviceOptions>(\n    AppModule,\n    {\n      transport: Transport.TCP,\n    },\n  );\n  await app.listen();\n}\nbootstrap();\n"),e.k0s()(),e.j41(55,"pre")(56,"code",22),e.EFF(57,"\nimport { NestFactory } from '@nestjs/core';\nimport { Transport } from '@nestjs/microservices';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice(AppModule, {\n    transport: Transport.TCP,\n  });\n  await app.listen();\n}\nbootstrap();\n"),e.k0s()()(),e.j41(58,"blockquote",23)(59,"strong"),e.EFF(60,"Astuce"),e.k0s(),e.EFF(61," Les microservices utilisent par d\xe9faut la couche de transport "),e.j41(62,"strong"),e.EFF(63,"TCP"),e.k0s(),e.EFF(64,".\n"),e.k0s(),e.j41(65,"p"),e.EFF(66,"Le second argument de la m\xe9thode "),e.j41(67,"code"),e.EFF(68,"createMicroservice()"),e.k0s(),e.EFF(69," est un objet "),e.j41(70,"code"),e.EFF(71,"options"),e.k0s(),e.EFF(72,". Cet objet peut \xeatre compos\xe9 de deux membres :"),e.k0s(),e.j41(73,"table")(74,"tr")(75,"td")(76,"code"),e.EFF(77,"transport"),e.k0s()(),e.j41(78,"td"),e.EFF(79,"Sp\xe9cifie le transporteur (par exemple, "),e.j41(80,"code"),e.EFF(81,"Transport.NATS"),e.k0s(),e.EFF(82,")"),e.k0s()(),e.j41(83,"tr")(84,"td")(85,"code"),e.EFF(86,"options"),e.k0s()(),e.j41(87,"td"),e.EFF(88,"Un objet d'options sp\xe9cifiques au transporteur qui d\xe9termine le comportement du transporteur"),e.k0s()()(),e.j41(89,"p"),e.EFF(90," L'objet "),e.j41(91,"code"),e.EFF(92,"options"),e.k0s(),e.EFF(93," est sp\xe9cifique au transporteur choisi. Le transporteur "),e.j41(94,"strong"),e.EFF(95,"TCP"),e.k0s(),e.EFF(96," expose les propri\xe9t\xe9s d\xe9crites ci-dessous. Pour les autres transporteurs (par exemple Redis, MQTT, etc.), voir le chapitre correspondant pour une description des options disponibles.\n"),e.k0s(),e.j41(97,"table")(98,"tr")(99,"td")(100,"code"),e.EFF(101,"host"),e.k0s()(),e.j41(102,"td"),e.EFF(103,"Nom d'h\xf4te de la connexion"),e.k0s()(),e.j41(104,"tr")(105,"td")(106,"code"),e.EFF(107,"port"),e.k0s()(),e.j41(108,"td"),e.EFF(109,"Port de connexion"),e.k0s()(),e.j41(110,"tr")(111,"td")(112,"code"),e.EFF(113,"retryAttempts"),e.k0s()(),e.j41(114,"td"),e.EFF(115,"Nombre de tentatives pour r\xe9essayer le message (par d\xe9faut : "),e.j41(116,"code"),e.EFF(117,"0"),e.k0s(),e.EFF(118,")"),e.k0s()(),e.j41(119,"tr")(120,"td")(121,"code"),e.EFF(122,"retryDelay"),e.k0s()(),e.j41(123,"td"),e.EFF(124,"D\xe9lai entre les tentatives de r\xe9essai des messages (ms) (par d\xe9faut : "),e.j41(125,"code"),e.EFF(126,"0"),e.k0s(),e.EFF(127,")"),e.k0s()(),e.j41(128,"tr")(129,"td")(130,"code"),e.EFF(131,"serializer"),e.k0s()(),e.j41(132,"td")(133,"a",24),e.EFF(134,"S\xe9rialiseur"),e.k0s(),e.EFF(135," personnalis\xe9s pour les messages sortants"),e.k0s()(),e.j41(136,"tr")(137,"td")(138,"code"),e.EFF(139,"deserializer"),e.k0s()(),e.j41(140,"td")(141,"a",25),e.EFF(142,"D\xe9s\xe9rialiseur"),e.k0s(),e.EFF(143," personnalis\xe9 pour les messages entrants"),e.k0s()(),e.j41(144,"tr")(145,"td")(146,"code"),e.EFF(147,"socketClass"),e.k0s()(),e.j41(148,"td"),e.EFF(149,"Une Socket personnalis\xe9e qui \xe9tend "),e.j41(150,"code"),e.EFF(151,"TcpSocket"),e.k0s(),e.EFF(152," (par d\xe9faut : "),e.j41(153,"code"),e.EFF(154,"JsonSocket"),e.k0s(),e.EFF(155,")"),e.k0s()(),e.j41(156,"tr")(157,"td")(158,"code"),e.EFF(159,"tlsOptions"),e.k0s()(),e.j41(160,"td"),e.EFF(161,"Options pour configurer le protocole tls"),e.k0s()()(),e.j41(162,"h4",26)(163,"span"),e.EFF(164,"Mod\xe8les"),e.k0s()(),e.j41(165,"p"),e.EFF(166,"Les microservices reconnaissent les messages et les \xe9v\xe9nements par des "),e.j41(167,"strong"),e.EFF(168,"mod\xe8les"),e.k0s(),e.EFF(169,". Un mod\xe8le est une valeur simple, par exemple un objet litt\xe9ral ou une cha\xeene de caract\xe8res. Les mod\xe8les sont automatiquement s\xe9rialis\xe9s et envoy\xe9s sur le r\xe9seau avec les donn\xe9es d'un message. De cette mani\xe8re, les exp\xe9diteurs et les consommateurs de messages peuvent coordonner les demandes qui sont trait\xe9es par les diff\xe9rents gestionnaires."),e.k0s(),e.j41(170,"h4",27)(171,"span"),e.EFF(172,"Requ\xeate-r\xe9ponse"),e.k0s()(),e.j41(173,"p"),e.EFF(174,"Le style de message requ\xeate-r\xe9ponse est utile lorsque vous devez "),e.j41(175,"strong"),e.EFF(176,"\xe9changer"),e.k0s(),e.EFF(177," des messages entre diff\xe9rents services externes. Avec ce paradigme, vous pouvez \xeatre certain que le service a effectivement re\xe7u le message (sans avoir besoin d'impl\xe9menter manuellement un protocole d'accus\xe9 de r\xe9ception de message). Cependant, le paradigme demande-r\xe9ponse n'est pas toujours le meilleur choix. Par exemple, les transporteurs de flux qui utilisent une persistance bas\xe9e sur les journaux, tels que "),e.j41(178,"a",28),e.EFF(179,"Kafka"),e.k0s(),e.EFF(180," ou "),e.j41(181,"a",29),e.EFF(182,"NATS streaming"),e.k0s(),e.EFF(183,", sont optimis\xe9s pour r\xe9soudre une gamme diff\xe9rente de probl\xe8mes, plus align\xe9s sur un paradigme de messagerie \xe9v\xe9nementielle (voir "),e.j41(184,"a",30),e.EFF(185,"messagerie \xe9v\xe9nementielle"),e.k0s(),e.EFF(186," ci-dessous pour plus de d\xe9tails)."),e.k0s(),e.j41(187,"p"),e.EFF(188,"Pour activer le type de message requ\xeate-r\xe9ponse, Nest cr\xe9e deux canaux logiques - l'un est responsable du transfert des donn\xe9es tandis que l'autre attend les r\xe9ponses entrantes. Pour certains transports sous-jacents, tels que "),e.j41(189,"a",31),e.EFF(190,"NATS"),e.k0s(),e.EFF(191,", cette prise en charge \xe0 double canal est fournie d'embl\xe9e. Pour d'autres, Nest compense en cr\xe9ant manuellement des canaux distincts. Si vous n'avez pas besoin d'un message de type demande-r\xe9ponse, vous devriez envisager d'utiliser la m\xe9thode bas\xe9e sur les \xe9v\xe9nements."),e.k0s(),e.j41(192,"p"),e.EFF(193,"Pour cr\xe9er un gestionnaire de message bas\xe9 sur le paradigme requ\xeate-r\xe9ponse, utilisez le d\xe9corateur "),e.j41(194,"code"),e.EFF(195,"@MessagePattern()"),e.k0s(),e.EFF(196,", qui est import\xe9 du package "),e.j41(197,"code"),e.EFF(198,"@nestjs/microservices"),e.k0s(),e.EFF(199,". Ce d\xe9corateur ne devrait \xeatre utilis\xe9 que dans les classes "),e.j41(200,"a",32),e.EFF(201,"controller"),e.k0s(),e.EFF(202," puisqu'elles sont les points d'entr\xe9e de votre application. Les utiliser \xe0 l'int\xe9rieur des providers n'aura aucun effet car ils sont simplement ignor\xe9s par le runtime de Nest."),e.k0s(),e.j41(203,"app-copy-button",20)(204,"span",21),e.EFF(205),e.nI1(206,"extension"),e.nrm(207,"app-tabs",null,2),e.k0s(),e.j41(209,"pre")(210,"code",22),e.EFF(211,"\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\n\n@Controller()\nexport class MathController {\n  @MessagePattern({ cmd: 'sum' })\n  accumulate(data: number[]): number {\n    return (data || []).reduce((a, b) => a + b);\n  }\n}\n"),e.k0s()(),e.j41(212,"pre")(213,"code",22),e.EFF(214,"\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\n\n@Controller()\nexport class MathController {\n  @MessagePattern({ cmd: 'sum' })\n  accumulate(data) {\n    return (data || []).reduce((a, b) => a + b);\n  }\n}\n"),e.k0s()()(),e.j41(215,"p"),e.EFF(216,"Dans le code ci-dessus, le "),e.j41(217,"strong"),e.EFF(218,"gestionnaire de messages"),e.k0s(),e.j41(219,"code"),e.EFF(220,"accumulate()"),e.k0s(),e.EFF(221," \xe9coute les messages qui correspondent au mod\xe8le de message "),e.j41(222,"code"),e.EFF(223),e.k0s(),e.EFF(224,". Le gestionnaire de message prend un seul argument, les "),e.j41(225,"code"),e.EFF(226,"donn\xe9es"),e.k0s(),e.EFF(227," transmises par le client. Dans ce cas, les donn\xe9es sont un tableau de nombres qui doivent \xeatre accumul\xe9s."),e.k0s(),e.j41(228,"h4",33)(229,"span"),e.EFF(230,"R\xe9ponses asynchrones"),e.k0s()(),e.j41(231,"p"),e.EFF(232,"Les gestionnaires de messages peuvent r\xe9pondre de mani\xe8re synchrone ou "),e.j41(233,"strong"),e.EFF(234,"asynchrone"),e.k0s(),e.EFF(235,". Les m\xe9thodes "),e.j41(236,"code"),e.EFF(237,"async"),e.k0s(),e.EFF(238," sont donc support\xe9es."),e.k0s(),e.j41(239,"app-copy-button",20)(240,"span",21),e.nrm(241,"app-tabs",null,3),e.k0s(),e.j41(243,"pre")(244,"code",22),e.EFF(245,"\n@MessagePattern({ cmd: 'sum' })\nasync accumulate(data: number[]): Promise<number> {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()(),e.j41(246,"pre")(247,"code",22),e.EFF(248,"\n@MessagePattern({ cmd: 'sum' })\nasync accumulate(data) {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()()(),e.j41(249,"p"),e.EFF(250,"Un gestionnaire de message peut \xe9galement renvoyer un "),e.j41(251,"code"),e.EFF(252,"Observable"),e.k0s(),e.EFF(253,", auquel cas les valeurs de r\xe9sultat seront \xe9mises jusqu'\xe0 ce que le flux soit termin\xe9."),e.k0s(),e.j41(254,"app-copy-button",20)(255,"span",21),e.nrm(256,"app-tabs",null,4),e.k0s(),e.j41(258,"pre")(259,"code",22),e.EFF(260,"\n@MessagePattern({ cmd: 'sum' })\naccumulate(data: number[]): Observable<number> {\n  return from([1, 2, 3]);\n}\n"),e.k0s()(),e.j41(261,"pre")(262,"code",22),e.EFF(263,"\n@MessagePattern({ cmd: 'sum' })\naccumulate(data: number[]): Observable<number> {\n  return from([1, 2, 3]);\n}\n"),e.k0s()()(),e.j41(264,"p"),e.EFF(265,"Dans l'exemple ci-dessus, le gestionnaire de message r\xe9pondra "),e.j41(266,"strong"),e.EFF(267,"3 fois"),e.k0s(),e.EFF(268," (avec chaque \xe9l\xe9ment du tableau)."),e.k0s(),e.j41(269,"h4",34)(270,"span"),e.EFF(271,"Messagerie \xe9v\xe9nementielle"),e.k0s()(),e.j41(272,"p"),e.EFF(273,"Si la m\xe9thode requ\xeate-r\xe9ponse est id\xe9ale pour l'\xe9change de messages entre services, elle est moins adapt\xe9e lorsque votre style de message est bas\xe9 sur les \xe9v\xe9nements - lorsque vous souhaitez simplement publier des "),e.j41(274,"strong"),e.EFF(275,"\xe9v\xe9nements"),e.k0s(),e.EFF(276," sans attendre de r\xe9ponse. Dans ce cas, vous n'avez pas besoin de la surcharge requise par la m\xe9thode requ\xeate-r\xe9ponse pour maintenir deux canaux."),e.k0s(),e.j41(277,"p"),e.EFF(278,"Supposons que vous souhaitiez simplement informer un autre service qu'une certaine condition s'est produite dans cette partie du syst\xe8me. C'est le cas d'utilisation id\xe9al pour le style de message bas\xe9 sur les \xe9v\xe9nements."),e.k0s(),e.j41(279,"p"),e.EFF(280,"Pour cr\xe9er un gestionnaire d'\xe9v\xe9nement, nous utilisons le d\xe9corateur "),e.j41(281,"code"),e.EFF(282,"@EventPattern()"),e.k0s(),e.EFF(283,", qui est import\xe9 du package "),e.j41(284,"code"),e.EFF(285,"@nestjs/microservices"),e.k0s(),e.EFF(286,"."),e.k0s(),e.j41(287,"app-copy-button",20)(288,"span",21),e.nrm(289,"app-tabs",null,5),e.k0s(),e.j41(291,"pre")(292,"code",22),e.EFF(293,"\n@EventPattern('user_created')\nasync handleUserCreated(data: Record<string, unknown>) {\n  // logique m\xe9tier\n}\n"),e.k0s()(),e.j41(294,"pre")(295,"code",22),e.EFF(296,"\n@EventPattern('user_created')\nasync handleUserCreated(data) {\n  // logique m\xe9tier\n}\n"),e.k0s()()(),e.j41(297,"blockquote",23)(298,"strong"),e.EFF(299,"Astuce"),e.k0s(),e.EFF(300," Vous pouvez enregistrer plusieurs gestionnaires d'\xe9v\xe9nements pour un "),e.j41(301,"strong"),e.EFF(302,"seul"),e.k0s(),e.EFF(303," mod\xe8le d'\xe9v\xe9nement et tous seront automatiquement d\xe9clench\xe9s en parall\xe8le.\n"),e.k0s(),e.j41(304,"p"),e.EFF(305,"Le "),e.j41(306,"strong"),e.EFF(307,"manipulateur d'\xe9v\xe9nements"),e.k0s(),e.j41(308,"code"),e.EFF(309,"handleUserCreated()"),e.k0s(),e.EFF(310," \xe9coute l'\xe9v\xe9nement "),e.j41(311,"code"),e.EFF(312,"'user_created'"),e.k0s(),e.EFF(313,". Le gestionnaire d'\xe9v\xe9nement prend un seul argument, les "),e.j41(314,"code"),e.EFF(315,"donn\xe9es"),e.k0s(),e.EFF(316," transmises par le client (dans ce cas, une charge utile d'\xe9v\xe9nement qui a \xe9t\xe9 envoy\xe9e sur le r\xe9seau)."),e.k0s(),e.j41(317,"p"),e.nrm(318,"app-banner-enterprise"),e.k0s(),e.j41(319,"h4",35)(320,"span"),e.EFF(321,"D\xe9corateurs"),e.k0s()(),e.j41(322,"p"),e.EFF(323,'Dans des sc\xe9narios plus sophistiqu\xe9s, vous pouvez vouloir acc\xe9der \xe0 davantage d\'informations sur la demande entrante. Par exemple, dans le cas de NATS avec des abonnements de type "wildcard", vous pouvez vouloir obtenir le sujet original auquel le producteur a envoy\xe9 le message. De m\xeame, dans Kafka, vous pouvez vouloir acc\xe9der aux en-t\xeates du message. Pour ce faire, vous pouvez utiliser des d\xe9corateurs int\xe9gr\xe9s comme suit :'),e.k0s(),e.j41(324,"app-copy-button",20)(325,"span",21),e.nrm(326,"app-tabs",null,6),e.k0s(),e.j41(328,"pre")(329,"code",22),e.EFF(330,"\n@MessagePattern('time.us.*')\ngetDate(@Payload() data: number[], @Ctx() context: NatsContext) {\n  console.log(`Subject: ${context.getSubject()}`); // par exemple \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n"),e.k0s()(),e.j41(331,"pre")(332,"code",22),e.EFF(333,"\n@Bind(Payload(), Ctx())\n@MessagePattern('time.us.*')\ngetDate(data, context) {\n  console.log(`Subject: ${context.getSubject()}`); // par exemple \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n"),e.k0s()()(),e.j41(334,"blockquote",23)(335,"strong"),e.EFF(336,"Astuce"),e.k0s(),e.j41(337,"code"),e.EFF(338,"@Payload()"),e.k0s(),e.EFF(339,", "),e.j41(340,"code"),e.EFF(341,"@Ctx()"),e.k0s(),e.EFF(342," et "),e.j41(343,"code"),e.EFF(344,"NatsContext"),e.k0s(),e.EFF(345," sont import\xe9s de "),e.j41(346,"code"),e.EFF(347,"@nestjs/microservices"),e.k0s(),e.EFF(348,".\n"),e.k0s(),e.j41(349,"blockquote",23)(350,"strong"),e.EFF(351,"Astuce"),e.k0s(),e.EFF(352," Vous pouvez \xe9galement passer une cl\xe9 de propri\xe9t\xe9 au d\xe9corateur "),e.j41(353,"code"),e.EFF(354,"@Payload()"),e.k0s(),e.EFF(355," pour extraire une propri\xe9t\xe9 sp\xe9cifique de l'objet payload entrant, par exemple, "),e.j41(356,"code"),e.EFF(357,"@Payload('id')"),e.k0s(),e.EFF(358,".\n"),e.k0s(),e.j41(359,"h4",36)(360,"span"),e.EFF(361,"Client"),e.k0s()(),e.j41(362,"p"),e.EFF(363,"Une application Nest cliente peut \xe9changer des messages ou publier des \xe9v\xe9nements vers un microservice Nest en utilisant la classe "),e.j41(364,"code"),e.EFF(365,"ClientProxy"),e.k0s(),e.EFF(366,". Cette classe d\xe9finit plusieurs m\xe9thodes, telles que "),e.j41(367,"code"),e.EFF(368,"send()"),e.k0s(),e.EFF(369," (pour la messagerie requ\xeate-r\xe9ponse) et "),e.j41(370,"code"),e.EFF(371,"emit()"),e.k0s(),e.EFF(372," (pour la messagerie \xe9v\xe9nementielle) qui vous permettent de communiquer avec un microservice distant. Obtenez une instance de cette classe de l'une des mani\xe8res suivantes."),e.k0s(),e.j41(373,"p"),e.EFF(374,"Une technique consiste \xe0 importer le module "),e.j41(375,"code"),e.EFF(376,"ClientsModule"),e.k0s(),e.EFF(377,", qui expose la m\xe9thode statique "),e.j41(378,"code"),e.EFF(379,"register()"),e.k0s(),e.EFF(380,". Cette m\xe9thode prend un argument qui est un tableau d'objets repr\xe9sentant des transporteurs de microservices. Chacun de ces objets a une propri\xe9t\xe9 "),e.j41(381,"code"),e.EFF(382,"name"),e.k0s(),e.EFF(383,", une propri\xe9t\xe9 optionnelle "),e.j41(384,"code"),e.EFF(385,"transport"),e.k0s(),e.EFF(386," (par d\xe9faut "),e.j41(387,"code"),e.EFF(388,"Transport.TCP"),e.k0s(),e.EFF(389,"), et une propri\xe9t\xe9 optionnelle "),e.j41(390,"code"),e.EFF(391,"options"),e.k0s(),e.EFF(392," sp\xe9cifique au transporteur."),e.k0s(),e.j41(393,"p"),e.EFF(394,"La propri\xe9t\xe9 "),e.j41(395,"code"),e.EFF(396,"name"),e.k0s(),e.EFF(397," sert de "),e.j41(398,"strong"),e.EFF(399,"jeton d'injection"),e.k0s(),e.EFF(400," qui peut \xeatre utilis\xe9 pour injecter une instance de "),e.j41(401,"code"),e.EFF(402,"ClientProxy"),e.k0s(),e.EFF(403," l\xe0 o\xf9 c'est n\xe9cessaire. La valeur de la propri\xe9t\xe9 "),e.j41(404,"code"),e.EFF(405,"name"),e.k0s(),e.EFF(406,", en tant que jeton d'injection, peut \xeatre une cha\xeene arbitraire ou un symbole JavaScript, comme d\xe9crit "),e.j41(407,"a",37),e.EFF(408,"ici"),e.k0s(),e.EFF(409,"."),e.k0s(),e.j41(410,"p"),e.EFF(411,"La propri\xe9t\xe9 "),e.j41(412,"code"),e.EFF(413,"options"),e.k0s(),e.EFF(414," est un objet qui contient les m\xeames propri\xe9t\xe9s que nous avons vu dans la m\xe9thode "),e.j41(415,"code"),e.EFF(416,"createMicroservice()"),e.k0s(),e.EFF(417," plus t\xf4t."),e.k0s(),e.j41(418,"app-copy-button")(419,"pre")(420,"code",22),e.EFF(421,"\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'MATH_SERVICE', transport: Transport.TCP },\n    ]),\n  ],\n})\n"),e.k0s()()(),e.j41(422,"p"),e.EFF(423,"Vous pouvez \xe9galement utiliser la m\xe9thode "),e.j41(424,"code"),e.EFF(425,"registerAsync()"),e.k0s(),e.EFF(426," si vous avez besoin de passer une configuration ou d'effectuer d'autres processus asynchrones."),e.k0s(),e.j41(427,"app-copy-button")(428,"pre")(429,"code",22),e.EFF(430,"\n@Module({\n  imports: [\n    ClientsModule.registerAsync([\n      {\n        imports: [ConfigModule],\n        name: 'MATH_SERVICE',\n        useFactory: async (configService: ConfigService) => ({\n          transport: Transport.TCP,\n          options: {\n            url: configService.get('URL'),\n          },\n        }),\n        inject: [ConfigService],\n      },\n    ]),\n  ],\n})\n"),e.k0s()()(),e.j41(431,"p"),e.EFF(432,"Une fois le module import\xe9, vous pouvez injecter une instance du "),e.j41(433,"code"),e.EFF(434,"ClientProxy"),e.k0s(),e.EFF(435," configur\xe9 avec les options sp\xe9cifi\xe9es pour le transporteur "),e.j41(436,"code"),e.EFF(437,"'MATH_SERVICE'"),e.k0s(),e.EFF(438," en utilisant le d\xe9corateur "),e.j41(439,"code"),e.EFF(440,"@Inject()"),e.k0s(),e.EFF(441,"."),e.k0s(),e.j41(442,"app-copy-button")(443,"pre")(444,"code",22),e.EFF(445,"\nconstructor(\n  @Inject('MATH_SERVICE') private client: ClientProxy,\n) {}\n"),e.k0s()()(),e.j41(446,"blockquote",23)(447,"strong"),e.EFF(448,"Astuce"),e.k0s(),e.EFF(449," Les classes "),e.j41(450,"code"),e.EFF(451,"ClientsModule"),e.k0s(),e.EFF(452," et "),e.j41(453,"code"),e.EFF(454,"ClientProxy"),e.k0s(),e.EFF(455," sont import\xe9es du package "),e.j41(456,"code"),e.EFF(457,"@nestjs/microservices"),e.k0s(),e.EFF(458,".\n"),e.k0s(),e.j41(459,"p"),e.EFF(460,"Parfois, nous pouvons avoir besoin de r\xe9cup\xe9rer la configuration du transporteur depuis un autre service (disons un "),e.j41(461,"code"),e.EFF(462,"ConfigService"),e.k0s(),e.EFF(463,"), plut\xf4t que de la coder en dur dans notre application cliente. Pour ce faire, nous pouvons enregistrer un "),e.j41(464,"a",38),e.EFF(465,"fournisseur personnalis\xe9"),e.k0s(),e.EFF(466," en utilisant la classe "),e.j41(467,"code"),e.EFF(468,"ClientProxyFactory"),e.k0s(),e.EFF(469,". Cette classe poss\xe8de une m\xe9thode statique "),e.j41(470,"code"),e.EFF(471,"create()"),e.k0s(),e.EFF(472,", qui accepte un objet d'options de transporteur, et retourne une instance personnalis\xe9e de "),e.j41(473,"code"),e.EFF(474,"ClientProxy"),e.k0s(),e.EFF(475,"."),e.k0s(),e.j41(476,"app-copy-button")(477,"pre")(478,"code",22),e.EFF(479,"\n@Module({\n  providers: [\n    {\n      provide: 'MATH_SERVICE',\n      useFactory: (configService: ConfigService) => {\n        const mathSvcOptions = configService.getMathSvcOptions();\n        return ClientProxyFactory.create(mathSvcOptions);\n      },\n      inject: [ConfigService],\n    }\n  ]\n  ...\n})\n"),e.k0s()()(),e.j41(480,"blockquote",23)(481,"strong"),e.EFF(482,"Astuce"),e.k0s(),e.EFF(483," Le "),e.j41(484,"code"),e.EFF(485,"ClientProxyFactory"),e.k0s(),e.EFF(486," est import\xe9 du package "),e.j41(487,"code"),e.EFF(488,"@nestjs/microservices"),e.k0s(),e.EFF(489,".\n"),e.k0s(),e.j41(490,"p"),e.EFF(491,"Une autre option consiste \xe0 utiliser le d\xe9corateur de propri\xe9t\xe9s "),e.j41(492,"code"),e.EFF(493,"@Client()"),e.k0s(),e.EFF(494,"."),e.k0s(),e.j41(495,"app-copy-button")(496,"pre")(497,"code",22),e.EFF(498,"\n@Client({ transport: Transport.TCP })\nclient: ClientProxy;\n"),e.k0s()()(),e.j41(499,"blockquote",23)(500,"strong"),e.EFF(501,"Astuce"),e.k0s(),e.EFF(502," Le d\xe9corateur "),e.j41(503,"code"),e.EFF(504,"@Client()"),e.k0s(),e.EFF(505," est import\xe9 du package "),e.j41(506,"code"),e.EFF(507,"@nestjs/microservices"),e.k0s(),e.EFF(508,".\n"),e.k0s(),e.j41(509,"p"),e.EFF(510,"L'utilisation du d\xe9corateur "),e.j41(511,"code"),e.EFF(512,"@Client()"),e.k0s(),e.EFF(513," n'est pas la technique pr\xe9f\xe9r\xe9e, car il est plus difficile de tester et de partager une instance de client."),e.k0s(),e.j41(514,"p"),e.EFF(515,"Le "),e.j41(516,"code"),e.EFF(517,"ClientProxy"),e.k0s(),e.EFF(518," est "),e.j41(519,"strong"),e.EFF(520,"lazy"),e.k0s(),e.EFF(521,". Il n'initie pas de connexion imm\xe9diatement. Au lieu de cela, elle sera \xe9tablie avant le premier appel au microservice, puis r\xe9utilis\xe9e pour chaque appel suivant. Cependant, si vous voulez retarder le processus de d\xe9marrage de l'application jusqu'\xe0 ce qu'une connexion soit \xe9tablie, vous pouvez initier manuellement une connexion en utilisant la m\xe9thode "),e.j41(522,"code"),e.EFF(523,"connect()"),e.k0s(),e.EFF(524," de l'objet "),e.j41(525,"code"),e.EFF(526,"ClientProxy"),e.k0s(),e.EFF(527," \xe0 l'int\xe9rieur du hook du cycle de vie "),e.j41(528,"code"),e.EFF(529,"OnApplicationBootstrap"),e.k0s(),e.EFF(530,"."),e.k0s(),e.j41(531,"app-copy-button",20)(532,"span",21),e.nrm(533,"app-tabs",null,7),e.k0s(),e.j41(535,"pre")(536,"code",22),e.EFF(537,"\nasync onApplicationBootstrap() {\n  await this.client.connect();\n}\n"),e.k0s()()(),e.j41(538,"p"),e.EFF(539,"Si la connexion ne peut pas \xeatre cr\xe9\xe9e, la m\xe9thode "),e.j41(540,"code"),e.EFF(541,"connect()"),e.k0s(),e.EFF(542," sera rejet\xe9e avec l'objet d'erreur correspondant."),e.k0s(),e.j41(543,"h4",39)(544,"span"),e.EFF(545,"Envoi de messages"),e.k0s()(),e.j41(546,"p"),e.EFF(547,"Le "),e.j41(548,"code"),e.EFF(549,"ClientProxy"),e.k0s(),e.EFF(550," expose une m\xe9thode "),e.j41(551,"code"),e.EFF(552,"send()"),e.k0s(),e.EFF(553,". Cette m\xe9thode est destin\xe9e \xe0 appeler le microservice et retourne un "),e.j41(554,"code"),e.EFF(555,"Observable"),e.k0s(),e.EFF(556," avec sa r\xe9ponse. Ainsi, nous pouvons facilement nous abonner aux valeurs \xe9mises."),e.k0s(),e.j41(557,"app-copy-button",20)(558,"span",21),e.nrm(559,"app-tabs",null,8),e.k0s(),e.j41(561,"pre")(562,"code",22),e.EFF(563,"\naccumulate(): Observable<number> {\n  const pattern = { cmd: 'sum' };\n  const payload = [1, 2, 3];\n  return this.client.send<number>(pattern, payload);\n}\n"),e.k0s()(),e.j41(564,"pre")(565,"code",22),e.EFF(566,"\naccumulate() {\n  const pattern = { cmd: 'sum' };\n  const payload = [1, 2, 3];\n  return this.client.send(pattern, payload);\n}\n"),e.k0s()()(),e.j41(567,"p"),e.EFF(568,"La m\xe9thode "),e.j41(569,"code"),e.EFF(570,"send()"),e.k0s(),e.EFF(571," prend deux arguments, "),e.j41(572,"code"),e.EFF(573,"pattern"),e.k0s(),e.EFF(574," et "),e.j41(575,"code"),e.EFF(576,"payload"),e.k0s(),e.EFF(577,". Le "),e.j41(578,"code"),e.EFF(579,"pattern"),e.k0s(),e.EFF(580," doit correspondre \xe0 un mod\xe8le d\xe9fini dans un d\xe9corateur "),e.j41(581,"code"),e.EFF(582,"@MessagePattern()"),e.k0s(),e.EFF(583,". Le "),e.j41(584,"code"),e.EFF(585,"payload"),e.k0s(),e.EFF(586," est un message que nous voulons transmettre au microservice distant. Cette m\xe9thode retourne un "),e.j41(587,"strong"),e.EFF(588,"cold "),e.j41(589,"code"),e.EFF(590,"Observable"),e.k0s()(),e.EFF(591,", ce qui signifie que vous devez explicitement vous y abonner avant que le message ne soit envoy\xe9."),e.k0s(),e.j41(592,"h4",40)(593,"span"),e.EFF(594,"Publication d'\xe9v\xe9nements"),e.k0s()(),e.j41(595,"p"),e.EFF(596,"Pour envoyer un \xe9v\xe9nement, utilisez la m\xe9thode "),e.j41(597,"code"),e.EFF(598,"emit()"),e.k0s(),e.EFF(599," de l'objet "),e.j41(600,"code"),e.EFF(601,"ClientProxy"),e.k0s(),e.EFF(602,". Cette m\xe9thode publie un \xe9v\xe9nement au courtier de messages."),e.k0s(),e.j41(603,"app-copy-button",20)(604,"span",21),e.nrm(605,"app-tabs",null,9),e.k0s(),e.j41(607,"pre")(608,"code",22),e.EFF(609,"\nasync publish() {\n  this.client.emit<number>('user_created', new UserCreatedEvent());\n}\n"),e.k0s()(),e.j41(610,"pre")(611,"code",22),e.EFF(612,"\nasync publish() {\n  this.client.emit('user_created', new UserCreatedEvent());\n}\n"),e.k0s()()(),e.j41(613,"p"),e.EFF(614,"La m\xe9thode "),e.j41(615,"code"),e.EFF(616,"emit()"),e.k0s(),e.EFF(617," prend deux arguments, "),e.j41(618,"code"),e.EFF(619,"pattern"),e.k0s(),e.EFF(620," et "),e.j41(621,"code"),e.EFF(622,"payload"),e.k0s(),e.EFF(623,". Le "),e.j41(624,"code"),e.EFF(625,"pattern"),e.k0s(),e.EFF(626," doit correspondre \xe0 un mod\xe8le d\xe9fini dans un d\xe9corateur "),e.j41(627,"code"),e.EFF(628,"@EventPattern()"),e.k0s(),e.EFF(629,". Le "),e.j41(630,"code"),e.EFF(631,"payload"),e.k0s(),e.EFF(632," est une charge utile d'\xe9v\xe9nement que nous voulons transmettre au microservice distant. Cette m\xe9thode retourne un "),e.j41(633,"strong"),e.EFF(634,"hot "),e.j41(635,"code"),e.EFF(636,"Observable"),e.k0s()(),e.EFF(637," (contrairement au "),e.j41(638,"code"),e.EFF(639,"Observable"),e.k0s(),e.EFF(640," froid retourn\xe9 par "),e.j41(641,"code"),e.EFF(642,"send()"),e.k0s(),e.EFF(643,"), ce qui signifie que, que vous vous abonniez explicitement ou non \xe0 l'observable, le proxy va imm\xe9diatement essayer de d\xe9livrer l'\xe9v\xe9nement."),e.k0s(),e.j41(644,"p"),e.nrm(645,"app-banner-devtools"),e.k0s(),e.j41(646,"h4",41)(647,"span"),e.EFF(648,"Port\xe9es"),e.k0s()(),e.j41(649,"p"),e.EFF(650,"Pour les personnes issues de diff\xe9rents langages de programmation, il peut \xeatre surprenant d'apprendre que dans Nest, presque tout est partag\xe9 entre les requ\xeates entrantes. Nous avons un pool de connexion \xe0 la base de donn\xe9es, des services singleton avec un \xe9tat global, etc. N'oubliez pas que Node.js ne suit pas le mod\xe8le sans \xe9tat multithread\xe9 demande/r\xe9ponse dans lequel chaque demande est trait\xe9e par un thread s\xe9par\xe9. Par cons\xe9quent, l'utilisation d'instances singleton est totalement "),e.j41(651,"strong"),e.EFF(652,"s\xe9curis\xe9e"),e.k0s(),e.EFF(653," pour nos applications."),e.k0s(),e.j41(654,"p"),e.EFF(655,"Cependant, il existe des cas o\xf9 la dur\xe9e de vie du gestionnaire bas\xe9e sur les requ\xeates peut \xeatre le comportement souhait\xe9, par exemple la mise en cache par requ\xeate dans les applications GraphQL, le suivi des requ\xeates ou la multi-location. Apprenez \xe0 contr\xf4ler les port\xe9es "),e.j41(656,"a",42),e.EFF(657,"ici"),e.k0s(),e.EFF(658,"."),e.k0s(),e.j41(659,"p"),e.EFF(660,"Les handlers et les providers \xe0 port\xe9e de requ\xeate peuvent injecter "),e.j41(661,"code"),e.EFF(662,"RequestContext"),e.k0s(),e.EFF(663," en utilisant le d\xe9corateur "),e.j41(664,"code"),e.EFF(665,"@Inject()"),e.k0s(),e.EFF(666," en combinaison avec le jeton "),e.j41(667,"code"),e.EFF(668,"CONTEXT"),e.k0s(),e.EFF(669," :"),e.k0s(),e.j41(670,"app-copy-button")(671,"pre")(672,"code",22),e.EFF(673,"\nimport { Injectable, Scope, Inject } from '@nestjs/common';\nimport { CONTEXT, RequestContext } from '@nestjs/microservices';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CatsService {\n  constructor(@Inject(CONTEXT) private ctx: RequestContext) {}\n}\n"),e.k0s()()(),e.j41(674,"p"),e.EFF(675,"Cela permet d'acc\xe9der \xe0 l'objet "),e.j41(676,"code"),e.EFF(677,"RequestContext"),e.k0s(),e.EFF(678,", qui poss\xe8de deux propri\xe9t\xe9s :"),e.k0s(),e.j41(679,"app-copy-button")(680,"pre")(681,"code",22),e.EFF(682,"\nexport interface RequestContext<T = any> {\n  pattern: string | Record<string, any>;\n  data: T;\n}\n"),e.k0s()()(),e.j41(683,"p"),e.EFF(684,"La propri\xe9t\xe9 "),e.j41(685,"code"),e.EFF(686,"data"),e.k0s(),e.EFF(687," est la charge utile du message envoy\xe9 par le producteur du message. La propri\xe9t\xe9 "),e.j41(688,"code"),e.EFF(689,"pattern"),e.k0s(),e.EFF(690," est le mod\xe8le utilis\xe9 pour identifier le gestionnaire appropri\xe9 pour traiter le message entrant."),e.k0s(),e.j41(691,"h4",43)(692,"span"),e.EFF(693,"Gestion des d\xe9passements de d\xe9lai"),e.k0s()(),e.j41(694,"p"),e.EFF(695,"Dans les syst\xe8mes distribu\xe9s, il arrive que des microservices soient en panne ou indisponibles. Pour \xe9viter une attente infinie, vous pouvez utiliser des d\xe9lais d'attente. Un timeout est un mod\xe8le incroyablement utile lors de la communication avec d'autres services. Pour appliquer des timeouts \xe0 vos appels de microservices, vous pouvez utiliser l'op\xe9rateur "),e.j41(696,"a",44),e.EFF(697,"RxJS"),e.k0s(),e.j41(698,"code"),e.EFF(699,"timeout"),e.k0s(),e.EFF(700,". Si le microservice ne r\xe9pond pas \xe0 la requ\xeate dans un certain d\xe9lai, une exception est lev\xe9e, qui peut \xeatre attrap\xe9e et g\xe9r\xe9e de mani\xe8re appropri\xe9e."),e.k0s(),e.j41(701,"p"),e.EFF(702,"Pour r\xe9soudre ce probl\xe8me, vous devez utiliser le package "),e.j41(703,"a",45)(704,"code"),e.EFF(705,"rxjs"),e.k0s()(),e.EFF(706,". Il suffit d'utiliser l'op\xe9rateur "),e.j41(707,"code"),e.EFF(708,"timeout"),e.k0s(),e.EFF(709," dans le pipe :"),e.k0s(),e.j41(710,"app-copy-button",20)(711,"span",21),e.nrm(712,"app-tabs",null,10),e.k0s(),e.j41(714,"pre")(715,"code",22),e.EFF(716,"\nthis.client\n      .send<TResult, TInput>(pattern, data)\n      .pipe(timeout(5000));\n"),e.k0s()(),e.j41(717,"pre")(718,"code",22),e.EFF(719,"\nthis.client\n      .send(pattern, data)\n      .pipe(timeout(5000));\n"),e.k0s()()(),e.j41(720,"blockquote",23)(721,"strong"),e.EFF(722,"Astuce"),e.k0s(),e.EFF(723," L'op\xe9rateur "),e.j41(724,"code"),e.EFF(725,"timeout"),e.k0s(),e.EFF(726," est import\xe9 du package "),e.j41(727,"code"),e.EFF(728,"rxjs/operators"),e.k0s(),e.EFF(729,".\n"),e.k0s(),e.j41(730,"p"),e.EFF(731,"Apr\xe8s 5 secondes, si le microservice ne r\xe9pond pas, il lance une erreur."),e.k0s(),e.j41(732,"h4",46)(733,"span"),e.EFF(734,"Prise en charge TLS"),e.k0s()(),e.j41(735,"p"),e.EFF(736,"Lorsque l'on communique en dehors d'un r\xe9seau priv\xe9, il est important de chiffrer le trafic pour garantir la s\xe9curit\xe9. Dans NestJS, cela peut \xeatre r\xe9alis\xe9 avec TLS sur TCP en utilisant le module "),e.j41(737,"a",47),e.EFF(738,"TLS"),e.k0s(),e.EFF(739," int\xe9gr\xe9 de Node. Nest fournit un support int\xe9gr\xe9 pour TLS dans son transport TCP, ce qui nous permet de chiffrer la communication entre les microservices ou les clients."),e.k0s(),e.j41(740,"p"),e.EFF(741,"Pour activer TLS pour un serveur TCP, vous aurez besoin d'une cl\xe9 priv\xe9e et d'un certificat au format PEM. Ceux-ci sont ajout\xe9s aux options du serveur en d\xe9finissant "),e.j41(742,"code"),e.EFF(743,"tlsOptions"),e.k0s(),e.EFF(744," et en sp\xe9cifiant les fichiers de cl\xe9 et de certificat, comme indiqu\xe9 ci-dessous :"),e.k0s(),e.j41(745,"app-copy-button")(746,"pre")(747,"code",22),e.EFF(748,"\nimport * as fs from 'fs';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nasync function bootstrap() {\n  const key = fs.readFileSync('<pathToKeyFile>', 'utf8').toString();\n  const cert = fs.readFileSync('<pathToCertFile>', 'utf8').toString();\n\n  const app = await NestFactory.createMicroservice<MicroserviceOptions>(\n    AppModule,\n    {\n      transport: Transport.TCP,\n      options: {\n        tlsOptions: {\n          key,\n          cert,\n        },\n      },\n    },\n  );\n\n  await app.listen();\n}\nbootstrap();\n"),e.k0s()()(),e.j41(749,"p"),e.EFF(750,"Pour qu'un client puisse communiquer de mani\xe8re s\xe9curis\xe9e via TLS, nous d\xe9finissons \xe9galement l'objet "),e.j41(751,"code"),e.EFF(752,"tlsOptions"),e.k0s(),e.EFF(753,", mais cette fois avec le certificat CA. Il s'agit du certificat de l'autorit\xe9 qui a sign\xe9 le certificat du serveur. Cela garantit que le client fait confiance au certificat du serveur et peut \xe9tablir une connexion s\xe9curis\xe9e."),e.k0s(),e.j41(754,"app-copy-button")(755,"pre")(756,"code",22),e.EFF(757,"\nimport { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'MATH_SERVICE',\n        transport: Transport.TCP,\n        options: {\n          tlsOptions: {\n            ca: [fs.readFileSync('<pathToCaFile>', 'utf-8').toString()],\n          },\n        },\n      },\n    ]),\n  ],\n})\nexport class AppModule {}\n"),e.k0s()()(),e.j41(758,"p"),e.EFF(759,"Vous pouvez aussi passer un tableau de CAs si votre configuration implique plusieurs autorit\xe9s de confiance."),e.k0s(),e.j41(760,"p"),e.EFF(761,"Une fois que tout est configur\xe9, vous pouvez injecter le "),e.j41(762,"code"),e.EFF(763,"ClientProxy"),e.k0s(),e.EFF(764," comme d'habitude en utilisant le d\xe9corateur "),e.j41(765,"code"),e.EFF(766,"@Inject()"),e.k0s(),e.EFF(767," pour utiliser le client dans vos services. Cela assure une communication chiffr\xe9e \xe0 travers vos microservices NestJS, le module "),e.j41(768,"code"),e.EFF(769,"TLS"),e.k0s(),e.EFF(770," de Node g\xe9rant les d\xe9tails du chiffrement."),e.k0s(),e.j41(771,"p"),e.EFF(772,"Pour plus d'informations, reportez-vous \xe0 la "),e.j41(773,"a",47),e.EFF(774,"documentation TLS"),e.k0s(),e.EFF(775," de Node."),e.k0s()()),2&t){const o=e.sdS(51),a=e.sdS(208),u=e.sdS(242),c=e.sdS(257),i=e.sdS(290),E=e.sdS(327),j=e.sdS(560),v=e.sdS(606),g=e.sdS(713);e.R7$(48),e.SpI(" ",e.i5U(49,40,"main",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(150),e.SpI(" ",e.i5U(206,43,"math.controller",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(11),e.Lme("","{"," cmd : 'sum' ","}",""),e.R7$(20),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(12),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(30),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(34),e.AVh("hide",E.isJsActive),e.R7$(3),e.AVh("hide",!E.isJsActive),e.R7$(230),e.AVh("hide",j.isJsActive),e.R7$(3),e.AVh("hide",!j.isJsActive),e.R7$(43),e.AVh("hide",v.isJsActive),e.R7$(3),e.AVh("hide",!v.isJsActive),e.R7$(104),e.AVh("hide",g.isJsActive),e.R7$(3),e.AVh("hide",!g.isJsActive)}},dependencies:[F.O,m.a,x.d,C._,l.z,f.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Microservices"}},{path:"redis",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-redis"]],features:[e.Vt3],decls:201,vars:12,consts:[["contentReference",""],["app5da07a5da285aa43b50f09d6f5b4fcf8f96a9273",""],["app3b835156ddf0f7bb2018e8d9931874f076cd0366",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/redis.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","redis"],["rel","nofollow","target","_blank","href","https://redis.io/"],["rel","nofollow","target","_blank","href","https://redis.io/topics/pubsub"],["src","/assets/Redis_1.png",1,"illustrative-image"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","vue-densemble"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","options"],["rel","nofollow","target","_blank","href","https://redis.github.io/ioredis/index.html#RedisOptions"],["appAnchor","","id","client"],["href","/microservices/basics#client"],["appAnchor","","id","contexte"]],template:function(t,r){if(1&t&&(e.j41(0,"div",3,0)(2,"div",4)(3,"a",5),e.nrm(4,"i",6),e.k0s()(),e.j41(5,"h3",7),e.EFF(6,"Redis"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Le transporteur "),e.j41(9,"a",8),e.EFF(10,"Redis"),e.k0s(),e.EFF(11," met en \u0153uvre le paradigme de messagerie publication/abonnement et exploite la fonctionnalit\xe9 "),e.j41(12,"a",9),e.EFF(13,"Pub/Sub"),e.k0s(),e.EFF(14," de Redis. Les messages publi\xe9s sont class\xe9s dans des canaux, sans savoir quels abonn\xe9s (s'il y en a) recevront finalement le message. Chaque microservice peut s'abonner \xe0 un nombre quelconque de canaux. En outre, il est possible de s'abonner \xe0 plus d'un canal \xe0 la fois. Les messages \xe9chang\xe9s par l'interm\xe9diaire des canaux sont "),e.j41(15,"strong"),e.EFF(16,"fire-and-forget"),e.k0s(),e.EFF(17,", ce qui signifie que si un message est publi\xe9 et qu'il n'y a pas d'abonn\xe9s int\xe9ress\xe9s, le message est supprim\xe9 et ne peut pas \xeatre r\xe9cup\xe9r\xe9. Vous n'avez donc aucune garantie que les messages ou les \xe9v\xe9nements seront trait\xe9s par au moins un service. Un m\xeame message peut \xeatre souscrit (et re\xe7u) par plusieurs abonn\xe9s."),e.k0s(),e.j41(18,"figure"),e.nrm(19,"img",10),e.k0s(),e.j41(20,"h4",11)(21,"span"),e.EFF(22,"Installation"),e.k0s()(),e.j41(23,"p"),e.EFF(24,"Pour commencer \xe0 construire des microservices bas\xe9s sur Redis, installez d'abord le package requis :"),e.k0s(),e.j41(25,"pre")(26,"code",12),e.EFF(27,"\n$ npm i --save ioredis\n"),e.k0s()(),e.j41(28,"h4",13)(29,"span"),e.EFF(30,"Vue d'ensemble"),e.k0s()(),e.j41(31,"p"),e.EFF(32,"Pour utiliser le transporteur Redis, passez l'objet d'options suivant \xe0 la m\xe9thode "),e.j41(33,"code"),e.EFF(34,"createMicroservice()"),e.k0s(),e.EFF(35," :"),e.k0s(),e.j41(36,"app-copy-button",14)(37,"span",15),e.EFF(38),e.nI1(39,"extension"),e.nrm(40,"app-tabs",null,1),e.k0s(),e.j41(42,"pre")(43,"code",16),e.EFF(44,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.REDIS,\n  options: {\n    host: 'localhost',\n    port: 6379,\n  },\n});\n"),e.k0s()(),e.j41(45,"pre")(46,"code",16),e.EFF(47,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.REDIS,\n  options: {\n    host: 'localhost',\n    port: 6379,\n  },\n});\n"),e.k0s()()(),e.j41(48,"blockquote",17)(49,"strong"),e.EFF(50,"Astuce"),e.k0s(),e.EFF(51," L'enum "),e.j41(52,"code"),e.EFF(53,"Transport"),e.k0s(),e.EFF(54," est import\xe9 du package "),e.j41(55,"code"),e.EFF(56,"@nestjs/microservices"),e.k0s(),e.EFF(57,".\n"),e.k0s(),e.j41(58,"h4",18)(59,"span"),e.EFF(60,"Options"),e.k0s()(),e.j41(61,"p"),e.EFF(62,"La propri\xe9t\xe9 "),e.j41(63,"code"),e.EFF(64,"options"),e.k0s(),e.EFF(65," est sp\xe9cifique au transporteur choisi. Le transporteur "),e.j41(66,"strong"),e.EFF(67,"Redis"),e.k0s(),e.EFF(68," expose les propri\xe9t\xe9s d\xe9crites ci-dessous."),e.k0s(),e.j41(69,"table")(70,"tr")(71,"td")(72,"code"),e.EFF(73,"host"),e.k0s()(),e.j41(74,"td"),e.EFF(75,"URL de connexion"),e.k0s()(),e.j41(76,"tr")(77,"td")(78,"code"),e.EFF(79,"port"),e.k0s()(),e.j41(80,"td"),e.EFF(81,"Port de connexion"),e.k0s()(),e.j41(82,"tr")(83,"td")(84,"code"),e.EFF(85,"retryAttempts"),e.k0s()(),e.j41(86,"td"),e.EFF(87,"Nombre de tentatives d'envoi du message (par d\xe9faut : "),e.j41(88,"code"),e.EFF(89,"0"),e.k0s(),e.EFF(90,")"),e.k0s()(),e.j41(91,"tr")(92,"td")(93,"code"),e.EFF(94,"retryDelay"),e.k0s()(),e.j41(95,"td"),e.EFF(96,"D\xe9lai entre les tentatives de renvoi des messages (ms) (par d\xe9faut : "),e.j41(97,"code"),e.EFF(98,"0"),e.k0s(),e.EFF(99,")"),e.k0s()(),e.j41(100,"tr")(101,"td")(102,"code"),e.EFF(103,"wildcards"),e.k0s()(),e.j41(104,"td"),e.EFF(105,"Active les abonnements Redis wildcard, en demandant au transporteur d'utiliser "),e.j41(106,"code"),e.EFF(107,"psubscribe"),e.k0s(),e.EFF(108,"/"),e.j41(109,"code"),e.EFF(110,"pmessage"),e.k0s(),e.EFF(111," sous le capot. (par d\xe9faut : "),e.j41(112,"code"),e.EFF(113,"false"),e.k0s(),e.EFF(114,")"),e.k0s()()(),e.j41(115,"p"),e.EFF(116,"Toutes les propri\xe9t\xe9s support\xe9es par le client officiel "),e.j41(117,"a",19),e.EFF(118,"ioredis"),e.k0s(),e.EFF(119," sont \xe9galement support\xe9es par ce transporteur."),e.k0s(),e.j41(120,"h4",20)(121,"span"),e.EFF(122,"Client"),e.k0s()(),e.j41(123,"p"),e.EFF(124,"Comme d'autres transporteurs de microservices, vous avez "),e.j41(125,"a",21),e.EFF(126,"plusieurs options"),e.k0s(),e.EFF(127," pour cr\xe9er une instance Redis "),e.j41(128,"code"),e.EFF(129,"ClientProxy"),e.k0s(),e.EFF(130,"."),e.k0s(),e.j41(131,"p"),e.EFF(132,"Une m\xe9thode pour cr\xe9er une instance est d'utiliser le "),e.j41(133,"code"),e.EFF(134,"ClientsModule"),e.k0s(),e.EFF(135,". Pour cr\xe9er une instance de client avec le "),e.j41(136,"code"),e.EFF(137,"ClientsModule"),e.k0s(),e.EFF(138,", importez-le et utilisez la m\xe9thode "),e.j41(139,"code"),e.EFF(140,"register()"),e.k0s(),e.EFF(141," pour passer un objet options avec les m\xeames propri\xe9t\xe9s que celles montr\xe9es ci-dessus dans la m\xe9thode "),e.j41(142,"code"),e.EFF(143,"createMicroservice()"),e.k0s(),e.EFF(144,", ainsi qu'une propri\xe9t\xe9 "),e.j41(145,"code"),e.EFF(146,"name"),e.k0s(),e.EFF(147," \xe0 utiliser comme jeton d'injection. Apprenez en plus sur "),e.j41(148,"code"),e.EFF(149,"ClientsModule"),e.k0s(),e.j41(150,"a",21),e.EFF(151,"ici"),e.k0s(),e.EFF(152,"."),e.k0s(),e.j41(153,"app-copy-button")(154,"pre")(155,"code",16),e.EFF(156,"\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'MATH_SERVICE',\n        transport: Transport.REDIS,\n        options: {\n          host: 'localhost',\n          port: 6379,\n        }\n      },\n    ]),\n  ]\n  ...\n})\n"),e.k0s()()(),e.j41(157,"p"),e.EFF(158,"D'autres options pour cr\xe9er un client (soit "),e.j41(159,"code"),e.EFF(160,"ClientProxyFactory"),e.k0s(),e.EFF(161," ou "),e.j41(162,"code"),e.EFF(163,"@Client()"),e.k0s(),e.EFF(164,") peuvent \xe9galement \xeatre utilis\xe9es. Vous pouvez en prendre connaissance "),e.j41(165,"a",21),e.EFF(166,"ici"),e.k0s(),e.EFF(167,"."),e.k0s(),e.j41(168,"h4",22)(169,"span"),e.EFF(170,"Contexte"),e.k0s()(),e.j41(171,"p"),e.EFF(172,"Dans des sc\xe9narios plus sophistiqu\xe9s, vous pouvez vouloir acc\xe9der \xe0 plus d'informations sur la requ\xeate entrante. Lorsque vous utilisez le transporteur Redis, vous pouvez acc\xe9der \xe0 l'objet "),e.j41(173,"code"),e.EFF(174,"RedisContext"),e.k0s(),e.EFF(175,"."),e.k0s(),e.j41(176,"app-copy-button",14)(177,"span",15),e.nrm(178,"app-tabs",null,2),e.k0s(),e.j41(180,"pre")(181,"code",16),e.EFF(182,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: RedisContext) {\n  console.log(`Channel: ${context.getChannel()}`);\n}\n"),e.k0s()(),e.j41(183,"pre")(184,"code",16),e.EFF(185,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  console.log(`Channel: ${context.getChannel()}`);\n}\n"),e.k0s()()(),e.j41(186,"blockquote",17)(187,"strong"),e.EFF(188,"Astuce"),e.k0s(),e.j41(189,"code"),e.EFF(190,"@Payload()"),e.k0s(),e.EFF(191,", "),e.j41(192,"code"),e.EFF(193,"@Ctx()"),e.k0s(),e.EFF(194," et "),e.j41(195,"code"),e.EFF(196,"RedisContext"),e.k0s(),e.EFF(197," sont import\xe9s du package "),e.j41(198,"code"),e.EFF(199,"@nestjs/microservices"),e.k0s(),e.EFF(200,".\n"),e.k0s()()),2&t){const o=e.sdS(41),a=e.sdS(179);e.R7$(38),e.SpI(" ",e.i5U(39,9,"main",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(135),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive)}},dependencies:[F.O,m.a,l.z,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Redis - Microservices"}},{path:"mqtt",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-mqtt"]],features:[e.Vt3],decls:281,vars:32,consts:[["contentReference",""],["app017e0c10f3ede1282fd9e5f0aa098d78f2cfee4c",""],["app690ba31cf2c89bdd88f3cb75d16d56320603fcfd",""],["app2d5b18a0b06c4bc79f4266fb9ab8750596f02171",""],["appc0aa9bc6edb054f30410d89b2de8420457c7fa09",""],["appcaf1992664e9910391b805da6c1c016db604961e",""],["app84bd9e22c73feddf9e8337ac2aaf9083491addcb",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/mqtt.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","mqtt"],["rel","nofollow","target","_blank","href","https://mqtt.org/"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","vue-densemble"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","options"],["rel","nofollow","target","_blank","href","https://github.com/mqttjs/MQTT.js/#mqttclientstreambuilder-options"],["appAnchor","","id","client"],["href","/microservices/basics#client"],["appAnchor","","id","contexte"],["rel","nofollow","target","_blank","href","https://github.com/mqttjs/mqtt-packet"],["appAnchor","","id","caract\xe8res-g\xe9n\xe9riques"],["appAnchor","","id","qualit\xe9-de-service-qos"],["routerLink","/microservices/custom-transport"],["appAnchor","","id","constructeurs-denregistrements"]],template:function(t,r){if(1&t&&(e.j41(0,"div",7,0)(2,"div",8)(3,"a",9),e.nrm(4,"i",10),e.k0s()(),e.j41(5,"h3",11),e.EFF(6,"MQTT"),e.k0s(),e.j41(7,"p")(8,"a",12),e.EFF(9,"MQTT"),e.k0s(),e.EFF(10," (Message Queuing Telemetry Transport) est un protocole de messagerie l\xe9ger et open source, optimis\xe9 pour une faible latence. Ce protocole offre un moyen \xe9volutif et \xe9conomique de connecter des appareils en utilisant un mod\xe8le "),e.j41(11,"strong"),e.EFF(12,"publish/subscribe"),e.k0s(),e.EFF(13,". Un syst\xe8me de communication bas\xe9 sur MQTT se compose d'un serveur de publication, d'un courtier (broker) et d'un ou plusieurs clients. Il est con\xe7u pour les appareils limit\xe9s et les r\xe9seaux \xe0 faible largeur de bande, \xe0 forte latence ou peu fiables."),e.k0s(),e.j41(14,"h4",13)(15,"span"),e.EFF(16,"Installation"),e.k0s()(),e.j41(17,"p"),e.EFF(18,"Pour commencer \xe0 construire des microservices bas\xe9s sur MQTT, il faut d'abord installer le package requis :"),e.k0s(),e.j41(19,"pre")(20,"code",14),e.EFF(21,"\n$ npm i --save mqtt\n"),e.k0s()(),e.j41(22,"h4",15)(23,"span"),e.EFF(24,"Vue d'ensemble"),e.k0s()(),e.j41(25,"p"),e.EFF(26,"Pour utiliser le transporteur MQTT, passez l'objet d'options suivant \xe0 la m\xe9thode "),e.j41(27,"code"),e.EFF(28,"createMicroservice()"),e.k0s(),e.EFF(29," :"),e.k0s(),e.j41(30,"app-copy-button",16)(31,"span",17),e.EFF(32),e.nI1(33,"extension"),e.nrm(34,"app-tabs",null,1),e.k0s(),e.j41(36,"pre")(37,"code",18),e.EFF(38,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.MQTT,\n  options: {\n    url: 'mqtt://localhost:1883',\n  },\n});\n"),e.k0s()(),e.j41(39,"pre")(40,"code",18),e.EFF(41,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.MQTT,\n  options: {\n    url: 'mqtt://localhost:1883',\n  },\n});\n"),e.k0s()()(),e.j41(42,"blockquote",19)(43,"strong"),e.EFF(44,"Astuce"),e.k0s(),e.EFF(45," L'enum "),e.j41(46,"code"),e.EFF(47,"Transport"),e.k0s(),e.EFF(48," est import\xe9 du package "),e.j41(49,"code"),e.EFF(50,"@nestjs/microservices"),e.k0s(),e.EFF(51,".\n"),e.k0s(),e.j41(52,"h4",20)(53,"span"),e.EFF(54,"Options"),e.k0s()(),e.j41(55,"p"),e.EFF(56,"L'objet "),e.j41(57,"code"),e.EFF(58,"options"),e.k0s(),e.EFF(59," est sp\xe9cifique au transporteur choisi. Le transporteur "),e.j41(60,"strong"),e.EFF(61,"MQTT"),e.k0s(),e.EFF(62," expose les propri\xe9t\xe9s d\xe9crites "),e.j41(63,"a",21),e.EFF(64,"ici"),e.k0s(),e.EFF(65,"."),e.k0s(),e.j41(66,"h4",22)(67,"span"),e.EFF(68,"Client"),e.k0s()(),e.j41(69,"p"),e.EFF(70,"Comme d'autres transporteurs de microservices, vous avez "),e.j41(71,"a",23),e.EFF(72,"plusieurs options"),e.k0s(),e.EFF(73," pour cr\xe9er une instance MQTT "),e.j41(74,"code"),e.EFF(75,"ClientProxy"),e.k0s(),e.EFF(76,"."),e.k0s(),e.j41(77,"p"),e.EFF(78,"Une m\xe9thode pour cr\xe9er une instance est d'utiliser le "),e.j41(79,"code"),e.EFF(80,"ClientsModule"),e.k0s(),e.EFF(81,". Pour cr\xe9er une instance de client avec le "),e.j41(82,"code"),e.EFF(83,"ClientsModule"),e.k0s(),e.EFF(84,", importez-le et utilisez la m\xe9thode "),e.j41(85,"code"),e.EFF(86,"register()"),e.k0s(),e.EFF(87," pour passer un objet options avec les m\xeames propri\xe9t\xe9s que celles montr\xe9es ci-dessus dans la m\xe9thode "),e.j41(88,"code"),e.EFF(89,"createMicroservice()"),e.k0s(),e.EFF(90,", ainsi qu'une propri\xe9t\xe9 "),e.j41(91,"code"),e.EFF(92,"name"),e.k0s(),e.EFF(93," \xe0 utiliser comme jeton d'injection. Pour en savoir plus sur "),e.j41(94,"code"),e.EFF(95,"ClientsModule"),e.k0s(),e.j41(96,"a",23),e.EFF(97,"ici"),e.k0s(),e.EFF(98,"."),e.k0s(),e.j41(99,"app-copy-button")(100,"pre")(101,"code",18),e.EFF(102,"\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'MATH_SERVICE',\n        transport: Transport.MQTT,\n        options: {\n          url: 'mqtt://localhost:1883',\n        }\n      },\n    ]),\n  ]\n  ...\n})\n"),e.k0s()()(),e.j41(103,"p"),e.EFF(104,"Other options to create a client (either "),e.j41(105,"code"),e.EFF(106,"ClientProxyFactory"),e.k0s(),e.EFF(107," or "),e.j41(108,"code"),e.EFF(109,"@Client()"),e.k0s(),e.EFF(110,") can be used as well. You can read about them "),e.j41(111,"a",23),e.EFF(112,"here"),e.k0s(),e.EFF(113,"."),e.k0s(),e.j41(114,"h4",24)(115,"span"),e.EFF(116,"Contexte"),e.k0s()(),e.j41(117,"p"),e.EFF(118,"Dans des sc\xe9narios plus sophistiqu\xe9s, vous pouvez vouloir acc\xe9der \xe0 plus d'informations sur la requ\xeate entrante. Lorsque vous utilisez le transporteur MQTT, vous pouvez acc\xe9der \xe0 l'objet "),e.j41(119,"code"),e.EFF(120,"MqttContext"),e.k0s(),e.EFF(121,"."),e.k0s(),e.j41(122,"app-copy-button",16)(123,"span",17),e.nrm(124,"app-tabs",null,2),e.k0s(),e.j41(126,"pre")(127,"code",18),e.EFF(128,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: MqttContext) {\n  console.log(`Topic: ${context.getTopic()}`);\n}\n"),e.k0s()(),e.j41(129,"pre")(130,"code",18),e.EFF(131,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  console.log(`Topic: ${context.getTopic()}`);\n}\n"),e.k0s()()(),e.j41(132,"blockquote",19)(133,"strong"),e.EFF(134,"Astuce"),e.k0s(),e.j41(135,"code"),e.EFF(136,"@Payload()"),e.k0s(),e.EFF(137,", "),e.j41(138,"code"),e.EFF(139,"@Ctx()"),e.k0s(),e.EFF(140," et "),e.j41(141,"code"),e.EFF(142,"MqttContext"),e.k0s(),e.EFF(143," sont import\xe9s du package "),e.j41(144,"code"),e.EFF(145,"@nestjs/microservices"),e.k0s(),e.EFF(146,".\n"),e.k0s(),e.j41(147,"p"),e.EFF(148,"Pour acc\xe9der au "),e.j41(149,"a",25),e.EFF(150,"paquet"),e.k0s(),e.EFF(151," mqtt original , utilisez la m\xe9thode "),e.j41(152,"code"),e.EFF(153,"getPacket()"),e.k0s(),e.EFF(154," de l'objet "),e.j41(155,"code"),e.EFF(156,"MqttContext"),e.k0s(),e.EFF(157,", comme suit :"),e.k0s(),e.j41(158,"app-copy-button",16)(159,"span",17),e.nrm(160,"app-tabs",null,3),e.k0s(),e.j41(162,"pre")(163,"code",18),e.EFF(164,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: MqttContext) {\n  console.log(context.getPacket());\n}\n"),e.k0s()(),e.j41(165,"pre")(166,"code",18),e.EFF(167,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  console.log(context.getPacket());\n}\n"),e.k0s()()(),e.j41(168,"h4",26)(169,"span"),e.EFF(170,"Caract\xe8res g\xe9n\xe9riques"),e.k0s()(),e.j41(171,"p"),e.EFF(172,"Un abonnement peut porter sur un sujet explicite ou inclure des caract\xe8res g\xe9n\xe9riques. Deux caract\xe8res g\xe9n\xe9riques sont disponibles, "),e.j41(173,"code"),e.EFF(174,"+"),e.k0s(),e.EFF(175," et "),e.j41(176,"code"),e.EFF(177,"#"),e.k0s(),e.EFF(178,". "),e.j41(179,"code"),e.EFF(180,"+"),e.k0s(),e.EFF(181," est un caract\xe8re g\xe9n\xe9rique \xe0 un seul niveau, tandis que "),e.j41(182,"code"),e.EFF(183,"#"),e.k0s(),e.EFF(184," est un caract\xe8re g\xe9n\xe9rique \xe0 plusieurs niveaux qui couvre plusieurs niveaux de sujets."),e.k0s(),e.j41(185,"app-copy-button",16)(186,"span",17),e.nrm(187,"app-tabs",null,4),e.k0s(),e.j41(189,"pre")(190,"code",18),e.EFF(191,"\n@MessagePattern('sensors/+/temperature/+')\ngetTemperature(@Ctx() context: MqttContext) {\n  console.log(`Topic: ${context.getTopic()}`);\n}\n"),e.k0s()(),e.j41(192,"pre")(193,"code",18),e.EFF(194,"\n@Bind(Ctx())\n@MessagePattern('sensors/+/temperature/+')\ngetTemperature(context) {\n  console.log(`Topic: ${context.getTopic()}`);\n}\n"),e.k0s()()(),e.j41(195,"h4",27)(196,"span"),e.EFF(197,"Qualit\xe9 de Service (QoS)"),e.k0s()(),e.j41(198,"p"),e.EFF(199,"Tout abonnement cr\xe9\xe9 avec les d\xe9corateurs "),e.j41(200,"code"),e.EFF(201,"@MessagePattern"),e.k0s(),e.EFF(202," ou "),e.j41(203,"code"),e.EFF(204,"@EventPattern"),e.k0s(),e.EFF(205," s'abonnera avec la QoS 0. Si une QoS plus \xe9lev\xe9e est requise, elle peut \xeatre d\xe9finie globalement en utilisant le bloc "),e.j41(206,"code"),e.EFF(207,"subscribeOptions"),e.k0s(),e.EFF(208," lors de l'\xe9tablissement de la connexion comme suit :"),e.k0s(),e.j41(209,"app-copy-button",16)(210,"span",17),e.EFF(211),e.nI1(212,"extension"),e.nrm(213,"app-tabs",null,5),e.k0s(),e.j41(215,"pre")(216,"code",18),e.EFF(217,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.MQTT,\n  options: {\n    url: 'mqtt://localhost:1883',\n    subscribeOptions: {\n      qos: 2\n    },\n  },\n});\n"),e.k0s()(),e.j41(218,"pre")(219,"code",18),e.EFF(220,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.MQTT,\n  options: {\n    url: 'mqtt://localhost:1883',\n    subscribeOptions: {\n      qos: 2\n    },\n  },\n});\n"),e.k0s()()(),e.j41(221,"p"),e.EFF(222,"Si une qualit\xe9 de service sp\xe9cifique \xe0 un th\xe8me est n\xe9cessaire, il convient d'envisager la cr\xe9ation d'un "),e.j41(223,"a",28),e.EFF(224,"transporteur personnalis\xe9"),e.k0s(),e.EFF(225,"."),e.k0s(),e.j41(226,"h4",29)(227,"span"),e.EFF(228,"Constructeurs d'enregistrements"),e.k0s()(),e.j41(229,"p"),e.EFF(230,"Pour configurer les options du message (ajuster le niveau de QoS, d\xe9finir les drapeaux Retain ou DUP, ou ajouter des propri\xe9t\xe9s suppl\xe9mentaires \xe0 la charge utile), vous pouvez utiliser la classe "),e.j41(231,"code"),e.EFF(232,"MqttRecordBuilder"),e.k0s(),e.EFF(233,". Par exemple, pour r\xe9gler "),e.j41(234,"code"),e.EFF(235,"QoS"),e.k0s(),e.EFF(236," sur "),e.j41(237,"code"),e.EFF(238,"2"),e.k0s(),e.EFF(239,", utilisez la m\xe9thode "),e.j41(240,"code"),e.EFF(241,"setQoS"),e.k0s(),e.EFF(242,", comme suit :"),e.k0s(),e.j41(243,"app-copy-button")(244,"pre")(245,"code",18),e.EFF(246,"\nconst userProperties = { 'x-version': '1.0.0' };\nconst record = new MqttRecordBuilder(':cat:')\n  .setProperties({ userProperties })\n  .setQoS(1)\n  .build();\nclient.send('replace-emoji', record).subscribe(...);\n"),e.k0s()()(),e.j41(247,"blockquote",19)(248,"strong"),e.EFF(249,"Astuce"),e.k0s(),e.EFF(250," La classe "),e.j41(251,"code"),e.EFF(252,"MqttRecordBuilder"),e.k0s(),e.EFF(253," est export\xe9e du package "),e.j41(254,"code"),e.EFF(255,"@nestjs/microservices"),e.k0s(),e.EFF(256,".\n"),e.k0s(),e.j41(257,"p"),e.EFF(258,"Vous pouvez \xe9galement lire ces options c\xf4t\xe9 serveur, en acc\xe9dant au "),e.j41(259,"code"),e.EFF(260,"MqttContext"),e.k0s(),e.EFF(261,"."),e.k0s(),e.j41(262,"app-copy-button",16)(263,"span",17),e.nrm(264,"app-tabs",null,6),e.k0s(),e.j41(266,"pre")(267,"code",18),e.EFF(268,"\n@MessagePattern('replace-emoji')\nreplaceEmoji(@Payload() data: string, @Ctx() context: MqttContext): string {\n  const { properties: { userProperties } } = context.getPacket();\n  return userProperties['x-version'] === '1.0.0' ? '\u{1f431}' : '\u{1f408}';\n}\n"),e.k0s()(),e.j41(269,"pre")(270,"code",18),e.EFF(271,"\n@Bind(Payload(), Ctx())\n@MessagePattern('replace-emoji')\nreplaceEmoji(data, context) {\n  const { properties: { userProperties } } = context.getPacket();\n  return userProperties['x-version'] === '1.0.0' ? '\u{1f431}' : '\u{1f408}';\n}\n"),e.k0s()()(),e.j41(272,"p"),e.EFF(273,"Dans certains cas, vous pouvez vouloir configurer les propri\xe9t\xe9s de l'utilisateur pour plusieurs requ\xeates, vous pouvez passer ces options \xe0 la "),e.j41(274,"code"),e.EFF(275,"ClientProxyFactory"),e.k0s(),e.EFF(276,"."),e.k0s(),e.j41(277,"app-copy-button")(278,"pre")(279,"code",18),e.EFF(280,"\nimport { Module } from '@nestjs/common';\nimport { ClientProxyFactory, Transport } from '@nestjs/microservices';\n\n@Module({\n  providers: [\n    {\n      provide: 'API_v1',\n      useFactory: () =>\n        ClientProxyFactory.create({\n          transport: Transport.MQTT,\n          options: {\n            url: 'mqtt://localhost:1833',\n            userProperties: { 'x-version': '1.0.0' },\n          },\n        }),\n    },\n  ],\n})\nexport class ApiModule {}\n"),e.k0s()()()()),2&t){const o=e.sdS(35),a=e.sdS(125),u=e.sdS(161),c=e.sdS(188),i=e.sdS(214),E=e.sdS(265);e.R7$(32),e.SpI(" ",e.i5U(33,26,"main",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(87),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(33),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(24),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(19),e.SpI(" ",e.i5U(212,29,"main",i.isJsActive),"\n"),e.R7$(4),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(48),e.AVh("hide",E.isJsActive),e.R7$(3),e.AVh("hide",!E.isJsActive)}},dependencies:[F.O,m.a,l.z,f.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"MQTT - Microservices"}},{path:"nats",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-nats"]],features:[e.Vt3],decls:277,vars:24,consts:[["contentReference",""],["appff3957ef29052d41b7d2300f8f3809c326d64611",""],["app2e9f212987e03f2aa08c1ae503e2df5f110d16fb",""],["appbba6a7aeb20340bfea39379b7e17a66260a3b804",""],["appa52311a15f65a7e2fc665eea6977031698924705",""],["appc214a60b161d03166fb57bcb65ad8379802628cc",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/nats.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","nats"],["rel","nofollow","target","_blank","href","https://nats.io"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","vue-densemble"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","options"],["rel","nofollow","target","_blank","href","https://github.com/nats-io/node-nats#connection-options"],["href","/microservices/nats#groupes-de-files-dattente"],["appAnchor","","id","client"],["href","/microservices/basics#client"],["appAnchor","","id","requ\xeate-r\xe9ponse"],["href","/microservices/basics#requ%C3%AAte-r%C3%A9ponse"],["rel","nofollow","target","_blank","href","https://docs.nats.io/nats-concepts/reqreply"],["appAnchor","","id","bas\xe9-sur-les-\xe9v\xe9nements"],["href","/microservices/basics#event-based"],["rel","nofollow","target","_blank","href","https://docs.nats.io/nats-concepts/pubsub"],["appAnchor","","id","groupes-de-files-dattente"],["rel","nofollow","target","_blank","href","https://docs.nats.io/nats-concepts/queue"],["appAnchor","","id","contexte"],["appAnchor","","id","caract\xe8res-g\xe9n\xe9riques"],["appAnchor","","id","constructeurs-denregistrements"]],template:function(t,r){if(1&t&&(e.j41(0,"div",6,0)(2,"div",7)(3,"a",8),e.nrm(4,"i",9),e.k0s()(),e.j41(5,"h3",10),e.EFF(6,"NATS"),e.k0s(),e.j41(7,"p")(8,"a",11),e.EFF(9,"NATS"),e.k0s(),e.EFF(10," est un syst\xe8me de messagerie open source simple, s\xe9curis\xe9 et performant pour les applications natives du cloud, la messagerie IoT et les architectures microservices. Le serveur NATS est \xe9crit dans le langage de programmation Go, mais des biblioth\xe8ques clientes pour interagir avec le serveur sont disponibles pour des dizaines de langages de programmation majeurs. NATS prend en charge les livraisons "),e.j41(11,"strong"),e.EFF(12,"At Most Once"),e.k0s(),e.EFF(13," (au plus une fois) et "),e.j41(14,"strong"),e.EFF(15,"At Least Once"),e.k0s(),e.EFF(16," (au moins une fois). Il peut fonctionner n'importe o\xf9, depuis les grands serveurs et les instances cloud, en passant par les gateways de p\xe9riph\xe9rie et m\xeame les appareils de l'Internet des objets."),e.k0s(),e.j41(17,"h4",12)(18,"span"),e.EFF(19,"Installation"),e.k0s()(),e.j41(20,"p"),e.EFF(21,"Pour commencer \xe0 construire des microservices bas\xe9s sur les NATS, il faut d'abord installer le package requis :"),e.k0s(),e.j41(22,"pre")(23,"code",13),e.EFF(24,"\n$ npm i --save nats\n"),e.k0s()(),e.j41(25,"h4",14)(26,"span"),e.EFF(27,"Vue d'ensemble"),e.k0s()(),e.j41(28,"p"),e.EFF(29,"Pour utiliser le transporteur NATS, passez l'objet d'options suivant \xe0 la m\xe9thode "),e.j41(30,"code"),e.EFF(31,"createMicroservice()"),e.k0s(),e.EFF(32," :"),e.k0s(),e.j41(33,"app-copy-button",15)(34,"span",16),e.EFF(35),e.nI1(36,"extension"),e.nrm(37,"app-tabs",null,1),e.k0s(),e.j41(39,"pre")(40,"code",17),e.EFF(41,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.NATS,\n  options: {\n    servers: ['nats://localhost:4222'],\n  },\n});\n"),e.k0s()(),e.j41(42,"pre")(43,"code",17),e.EFF(44,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.NATS,\n  options: {\n    servers: ['nats://localhost:4222'],\n  },\n});\n"),e.k0s()()(),e.j41(45,"blockquote",18)(46,"strong"),e.EFF(47,"Astuce"),e.k0s(),e.EFF(48," L'enum "),e.j41(49,"code"),e.EFF(50,"Transport"),e.k0s(),e.EFF(51," est import\xe9 du package "),e.j41(52,"code"),e.EFF(53,"@nestjs/microservices"),e.k0s(),e.EFF(54,".\n"),e.k0s(),e.j41(55,"h4",19)(56,"span"),e.EFF(57,"Options"),e.k0s()(),e.j41(58,"p"),e.EFF(59,"L'objet "),e.j41(60,"code"),e.EFF(61,"options"),e.k0s(),e.EFF(62," est sp\xe9cifique au transporteur choisi. Le transporteur "),e.j41(63,"strong"),e.EFF(64,"NATS"),e.k0s(),e.EFF(65," expose les propri\xe9t\xe9s d\xe9crites "),e.j41(66,"a",20),e.EFF(67,"ici"),e.k0s(),e.EFF(68,".\nDe plus, il y a une propri\xe9t\xe9 "),e.j41(69,"code"),e.EFF(70,"queue"),e.k0s(),e.EFF(71," qui vous permet de sp\xe9cifier le nom de la file d'attente \xe0 laquelle votre serveur doit s'abonner (laissez "),e.j41(72,"code"),e.EFF(73,"undefined"),e.k0s(),e.EFF(74," pour ignorer ce param\xe8tre). Pour en savoir plus sur les groupes de files d'attente NATS, voir "),e.j41(75,"a",21),e.EFF(76,"ci-dessous"),e.k0s(),e.EFF(77,"."),e.k0s(),e.j41(78,"h4",22)(79,"span"),e.EFF(80,"Client"),e.k0s()(),e.j41(81,"p"),e.EFF(82,"Comme d'autres transporteurs de microservices, vous avez "),e.j41(83,"a",23),e.EFF(84,"plusieurs options"),e.k0s(),e.EFF(85," pour cr\xe9er une instance NATS "),e.j41(86,"code"),e.EFF(87,"ClientProxy"),e.k0s(),e.EFF(88,"."),e.k0s(),e.j41(89,"p"),e.EFF(90,"Une m\xe9thode pour cr\xe9er une instance est d'utiliser le "),e.j41(91,"code"),e.EFF(92,"ClientsModule"),e.k0s(),e.EFF(93,". Pour cr\xe9er une instance de client avec le "),e.j41(94,"code"),e.EFF(95,"ClientsModule"),e.k0s(),e.EFF(96,", importez-le et utilisez la m\xe9thode "),e.j41(97,"code"),e.EFF(98,"register()"),e.k0s(),e.EFF(99," pour passer un objet options avec les m\xeames propri\xe9t\xe9s que celles montr\xe9es ci-dessus dans la m\xe9thode "),e.j41(100,"code"),e.EFF(101,"createMicroservice()"),e.k0s(),e.EFF(102,", ainsi qu'une propri\xe9t\xe9 "),e.j41(103,"code"),e.EFF(104,"name"),e.k0s(),e.EFF(105," \xe0 utiliser comme jeton d'injection. Pour en savoir plus sur "),e.j41(106,"code"),e.EFF(107,"ClientsModule"),e.k0s(),e.j41(108,"a",23),e.EFF(109,"ici"),e.k0s(),e.EFF(110,"."),e.k0s(),e.j41(111,"app-copy-button")(112,"pre")(113,"code",17),e.EFF(114,"\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'MATH_SERVICE',\n        transport: Transport.NATS,\n        options: {\n          servers: ['nats://localhost:4222'],\n        }\n      },\n    ]),\n  ]\n  ...\n})\n"),e.k0s()()(),e.j41(115,"p"),e.EFF(116,"D'autres options pour cr\xe9er un client (soit "),e.j41(117,"code"),e.EFF(118,"ClientProxyFactory"),e.k0s(),e.EFF(119," ou "),e.j41(120,"code"),e.EFF(121,"@Client()"),e.k0s(),e.EFF(122,") peuvent \xe9galement \xeatre utilis\xe9es. Vous pouvez en prendre connaissance "),e.j41(123,"a",23),e.EFF(124,"ici"),e.k0s(),e.EFF(125,"."),e.k0s(),e.j41(126,"h4",24)(127,"span"),e.EFF(128,"Requ\xeate-r\xe9ponse"),e.k0s()(),e.j41(129,"p"),e.EFF(130,"Pour le style de message "),e.j41(131,"strong"),e.EFF(132,"requ\xeate-r\xe9ponse"),e.k0s(),e.EFF(133," ("),e.j41(134,"a",25),e.EFF(135,"en lire plus"),e.k0s(),e.EFF(136,"), le transporteur NATS n'utilise pas le m\xe9canisme NATS int\xe9gr\xe9 "),e.j41(137,"a",26),e.EFF(138,"Request-Reply"),e.k0s(),e.EFF(139,'. Au lieu de cela, une "requ\xeate" est publi\xe9e sur un sujet donn\xe9 en utilisant la m\xe9thode '),e.j41(140,"code"),e.EFF(141,"publish()"),e.k0s(),e.EFF(142," avec un nom de sujet de r\xe9ponse unique, et les r\xe9pondeurs \xe9coutent sur ce sujet et envoient des r\xe9ponses au sujet de r\xe9ponse. Les sujets de r\xe9ponse sont renvoy\xe9s dynamiquement au demandeur, ind\xe9pendamment de l'emplacement de l'une ou l'autre des parties."),e.k0s(),e.j41(143,"h4",27)(144,"span"),e.EFF(145,"Bas\xe9 sur les \xe9v\xe9nements"),e.k0s()(),e.j41(146,"p"),e.EFF(147,"Pour le style de message "),e.j41(148,"strong"),e.EFF(149,"bas\xe9 sur les \xe9v\xe9nements"),e.k0s(),e.EFF(150," ("),e.j41(151,"a",28),e.EFF(152,"lire la suite"),e.k0s(),e.EFF(153,"), le transporteur NATS utilise le m\xe9canisme "),e.j41(154,"a",29),e.EFF(155,"Publish-Subscribe"),e.k0s(),e.EFF(156,' int\xe9gr\xe9 au NATS. Un \xe9diteur envoie un message sur un sujet et tout abonn\xe9 actif \xe9coutant sur ce sujet re\xe7oit le message. Les abonn\xe9s peuvent \xe9galement manifester leur int\xe9r\xeat pour des sujets g\xe9n\xe9riques qui fonctionnent un peu comme des expressions r\xe9guli\xe8res. Ce mod\xe8le "un pour plusieurs" est parfois appel\xe9 "fan-out".'),e.k0s(),e.j41(157,"h4",30)(158,"span"),e.EFF(159,"Groupes de files d'attente"),e.k0s()(),e.j41(160,"p"),e.EFF(161,"Le NATS fournit une fonction int\xe9gr\xe9e d'\xe9quilibrage de la charge appel\xe9e "),e.j41(162,"a",31),e.EFF(163,"files d'attente distribu\xe9es"),e.k0s(),e.EFF(164,". Pour cr\xe9er un abonnement \xe0 une file d'attente, utilisez la propri\xe9t\xe9 "),e.j41(165,"code"),e.EFF(166,"queue"),e.k0s(),e.EFF(167," comme suit :"),e.k0s(),e.j41(168,"app-copy-button",15)(169,"span",16),e.EFF(170),e.nI1(171,"extension"),e.nrm(172,"app-tabs",null,2),e.k0s(),e.j41(174,"pre")(175,"code",17),e.EFF(176,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.NATS,\n  options: {\n    servers: ['nats://localhost:4222'],\n    queue: 'cats_queue',\n  },\n});\n"),e.k0s()()(),e.j41(177,"h4",32)(178,"span"),e.EFF(179,"Contexte"),e.k0s()(),e.j41(180,"p"),e.EFF(181,"Dans des sc\xe9narios plus sophistiqu\xe9s, vous pouvez vouloir acc\xe9der \xe0 plus d'informations sur la requ\xeate entrante. Lorsque vous utilisez le transporteur NATS, vous pouvez acc\xe9der \xe0 l'objet "),e.j41(182,"code"),e.EFF(183,"NatsContext"),e.k0s(),e.EFF(184,"."),e.k0s(),e.j41(185,"app-copy-button",15)(186,"span",16),e.nrm(187,"app-tabs",null,3),e.k0s(),e.j41(189,"pre")(190,"code",17),e.EFF(191,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: NatsContext) {\n  console.log(`Subject: ${context.getSubject()}`);\n}\n"),e.k0s()(),e.j41(192,"pre")(193,"code",17),e.EFF(194,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  console.log(`Subject: ${context.getSubject()}`);\n}\n"),e.k0s()()(),e.j41(195,"blockquote",18)(196,"strong"),e.EFF(197,"Astuce"),e.k0s(),e.j41(198,"code"),e.EFF(199,"@Payload()"),e.k0s(),e.EFF(200,", "),e.j41(201,"code"),e.EFF(202,"@Ctx()"),e.k0s(),e.EFF(203," et "),e.j41(204,"code"),e.EFF(205,"NatsContext"),e.k0s(),e.EFF(206," sont import\xe9s du package "),e.j41(207,"code"),e.EFF(208,"@nestjs/microservices"),e.k0s(),e.EFF(209,".\n"),e.k0s(),e.j41(210,"h4",33)(211,"span"),e.EFF(212,"Caract\xe8res g\xe9n\xe9riques"),e.k0s()(),e.j41(213,"p"),e.EFF(214,"Un abonnement peut porter sur un sujet explicite ou inclure des caract\xe8res g\xe9n\xe9riques."),e.k0s(),e.j41(215,"app-copy-button",15)(216,"span",16),e.nrm(217,"app-tabs",null,4),e.k0s(),e.j41(219,"pre")(220,"code",17),e.EFF(221,"\n@MessagePattern('time.us.*')\ngetDate(@Payload() data: number[], @Ctx() context: NatsContext) {\n  console.log(`Subject: ${context.getSubject()}`); // par exemple \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n"),e.k0s()(),e.j41(222,"pre")(223,"code",17),e.EFF(224,"\n@Bind(Payload(), Ctx())\n@MessagePattern('time.us.*')\ngetDate(data, context) {\n  console.log(`Subject: ${context.getSubject()}`); // par exemple \"time.us.east\"\n  return new Date().toLocaleTimeString(...);\n}\n"),e.k0s()()(),e.j41(225,"h4",34)(226,"span"),e.EFF(227,"Constructeurs d'enregistrements"),e.k0s()(),e.j41(228,"p"),e.EFF(229,"Pour configurer les options du message, vous pouvez utiliser la classe "),e.j41(230,"code"),e.EFF(231,"NatsRecordBuilder"),e.k0s(),e.EFF(232," (note : ceci est \xe9galement possible pour les flux bas\xe9s sur les \xe9v\xe8nements). Par exemple, pour ajouter l'en-t\xeate "),e.j41(233,"code"),e.EFF(234,"x-version"),e.k0s(),e.EFF(235,", utilisez la m\xe9thode "),e.j41(236,"code"),e.EFF(237,"setHeaders"),e.k0s(),e.EFF(238,", comme suit :"),e.k0s(),e.j41(239,"app-copy-button")(240,"pre")(241,"code",17),e.EFF(242,"\nimport * as nats from 'nats';\n\n// quelque part dans votre code\nconst headers = nats.headers();\nheaders.set('x-version', '1.0.0');\n\nconst record = new NatsRecordBuilder(':cat:').setHeaders(headers).build();\nthis.client.send('replace-emoji', record).subscribe(...);\n"),e.k0s()()(),e.j41(243,"blockquote",18)(244,"strong"),e.EFF(245,"Astuce"),e.k0s(),e.EFF(246," La classe "),e.j41(247,"code"),e.EFF(248,"NatsRecordBuilder"),e.k0s(),e.EFF(249," est export\xe9e du package "),e.j41(250,"code"),e.EFF(251,"@nestjs/microservices"),e.k0s(),e.EFF(252,".\n"),e.k0s(),e.j41(253,"p"),e.EFF(254,"Vous pouvez \xe9galement lire ces en-t\xeates c\xf4t\xe9 serveur, en acc\xe9dant au "),e.j41(255,"code"),e.EFF(256,"NatsContext"),e.k0s(),e.EFF(257,", comme suit :"),e.k0s(),e.j41(258,"app-copy-button",15)(259,"span",16),e.nrm(260,"app-tabs",null,5),e.k0s(),e.j41(262,"pre")(263,"code",17),e.EFF(264,"\n@MessagePattern('replace-emoji')\nreplaceEmoji(@Payload() data: string, @Ctx() context: NatsContext): string {\n  const headers = context.getHeaders();\n  return headers['x-version'] === '1.0.0' ? '\u{1f431}' : '\u{1f408}';\n}\n"),e.k0s()(),e.j41(265,"pre")(266,"code",17),e.EFF(267,"\n@Bind(Payload(), Ctx())\n@MessagePattern('replace-emoji')\nreplaceEmoji(data, context) {\n  const headers = context.getHeaders();\n  return headers['x-version'] === '1.0.0' ? '\u{1f431}' : '\u{1f408}';\n}\n"),e.k0s()()(),e.j41(268,"p"),e.EFF(269,"Dans certains cas, vous pouvez vouloir configurer des en-t\xeates pour plusieurs requ\xeates, vous pouvez les passer en tant qu'options \xe0 la "),e.j41(270,"code"),e.EFF(271,"ClientProxyFactory"),e.k0s(),e.EFF(272," :"),e.k0s(),e.j41(273,"app-copy-button")(274,"pre")(275,"code",17),e.EFF(276,"\nimport { Module } from '@nestjs/common';\nimport { ClientProxyFactory, Transport } from '@nestjs/microservices';\n\n@Module({\n  providers: [\n    {\n      provide: 'API_v1',\n      useFactory: () =>\n        ClientProxyFactory.create({\n          transport: Transport.NATS,\n          options: {\n            servers: ['nats://localhost:4222'],\n            headers: { 'x-version': '1.0.0' },\n          },\n        }),\n    },\n  ],\n})\nexport class ApiModule {}\n"),e.k0s()()()()),2&t){const o=e.sdS(38),a=e.sdS(173),u=e.sdS(188),c=e.sdS(218),i=e.sdS(261);e.R7$(35),e.SpI(" ",e.i5U(36,18,"main",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(128),e.SpI(" ",e.i5U(171,21,"main",a.isJsActive),"\n"),e.R7$(19),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(27),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(40),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive)}},dependencies:[F.O,m.a,l.z,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"NATS - Microservices"}},{path:"grpc",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-grpc"]],features:[e.Vt3],decls:887,vars:52,consts:[["contentReference",""],["appe366638d23213fff6ff2dbcb5b16ea0fc5c47618",""],["app4c439417fdea68d0b29cf07bc32ae95204414838",""],["app483a50973c246d7120ff4f71b207fd226e9281e2",""],["app5fef375999c1d2401b266c02193034aa600c305c",""],["app14e9fb7d4d34a4a8f05f00466a454c8b5b47bfd8",""],["app188ac9241369be714895397e9b4076a98dadff99",""],["app189e7a753a31e0330cb54ca961f6702c94dfae3f",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/grpc.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","grpc"],["rel","nofollow","target","_blank","href","https://github.com/grpc/grpc-node"],["rel","nofollow","target","_blank","href","https://protobuf.dev"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","vue-densemble"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],[1,"language-json"],["appAnchor","","id","options"],["href","https://github.com/grpc/grpc-node/blob/master/packages/proto-loader/README.md","rel","nofollow","target","_blank"],["href","https://grpc.io/grpc/node/grpc.ServerCredentials.html","rel","nofollow","target","_blank"],["appAnchor","","id","exemple-de-service-grpc"],["rel","nofollow","target","_blank","href","https://developers.google.com/protocol-buffers"],["href","microservices/basics#request-response"],["appAnchor","","id","client"],["href","microservices/grpc#options"],[1,"error"],["appAnchor","","id","exemple"],["rel","nofollow","target","_blank","href","https://github.com/nestjs/nest/tree/master/sample/04-grpc"],["appAnchor","","id","r\xe9flexion-grpc"],["rel","nofollow","target","_blank","href","https://grpc.io/docs/guides/reflection/#overview"],["appAnchor","","id","flux-de-donn\xe9es-grpc"],["rel","nofollow","target","_blank","href","https://grpc.io/docs/guides/concepts/"],["appAnchor","","id","exemple-de-flux-en-continu"],["rel","nofollow","target","_blank","href","https://github.com/stephenh/ts-proto"],["rel","nofollow","target","_blank","href","https://github.com/stephenh/ts-proto/blob/main/NESTJS.markdown"],["appAnchor","","id","strat\xe9gie-subject"],[1,"warning"],["appAnchor","","id","gestionnaire-dappel-de-flux"],["rel","nofollow","target","_blank","href","https://grpc.github.io/grpc/node/grpc-ClientDuplexStream.html"],["rel","nofollow","target","_blank","href","https://grpc.github.io/grpc/node/grpc-ServerReadableStream.html"],["appAnchor","","id","m\xe9tadonn\xe9es-grpc"],["href","microservices/grpc#strat%C3%A9gie-subject"],["href","microservices/grpc#gestionnaire-dappel-de-flux"]],template:function(t,r){if(1&t&&(e.j41(0,"div",8,0)(2,"div",9)(3,"a",10),e.nrm(4,"i",11),e.k0s()(),e.j41(5,"h3",12),e.EFF(6,"gRPC"),e.k0s(),e.j41(7,"p")(8,"a",13),e.EFF(9,"gRPC"),e.k0s(),e.EFF(10," est un cadre RPC moderne, open source et tr\xe8s performant qui peut fonctionner dans n'importe quel environnement. Il permet de connecter efficacement des services dans et entre les centres de donn\xe9es gr\xe2ce \xe0 une prise en charge enfichable de l'\xe9quilibrage de la charge, du tra\xe7age, de la v\xe9rification de l'\xe9tat et de l'authentification."),e.k0s(),e.j41(11,"p"),e.EFF(12,"Comme de nombreux syst\xe8mes RPC, gRPC est bas\xe9 sur le concept de d\xe9finition d'un service en termes de fonctions (m\xe9thodes) qui peuvent \xeatre appel\xe9es \xe0 distance. Pour chaque m\xe9thode, vous d\xe9finissez les param\xe8tres et les types de retour. Les services, les param\xe8tres et les types de retour sont d\xe9finis dans les fichiers "),e.j41(13,"code"),e.EFF(14,".proto"),e.k0s(),e.EFF(15," \xe0 l'aide du m\xe9canisme "),e.j41(16,"a",14),e.EFF(17,"protocol buffers"),e.k0s(),e.EFF(18," de Google, qui est neutre sur le plan du langage."),e.k0s(),e.j41(19,"p"),e.EFF(20,"Avec le transporteur gRPC, Nest utilise des fichiers "),e.j41(21,"code"),e.EFF(22,".proto"),e.k0s(),e.EFF(23," pour lier dynamiquement les clients et les serveurs afin de faciliter la mise en \u0153uvre des appels de proc\xe9dure \xe0 distance, en s\xe9rialisant et d\xe9s\xe9rialisant automatiquement les donn\xe9es structur\xe9es."),e.k0s(),e.j41(24,"h4",15)(25,"span"),e.EFF(26,"Installation"),e.k0s()(),e.j41(27,"p"),e.EFF(28,"Pour commencer \xe0 construire des microservices bas\xe9s sur gRPC, il faut d'abord installer les paquets n\xe9cessaires :"),e.k0s(),e.j41(29,"pre")(30,"code",16),e.EFF(31,"\n$ npm i --save @grpc/grpc-js @grpc/proto-loader\n"),e.k0s()(),e.j41(32,"h4",17)(33,"span"),e.EFF(34,"Vue d'ensemble"),e.k0s()(),e.j41(35,"p"),e.EFF(36,"Comme pour les autres impl\xe9mentations de la couche de transport des microservices Nest, vous s\xe9lectionnez le m\xe9canisme de transport gRPC en utilisant la propri\xe9t\xe9 "),e.j41(37,"code"),e.EFF(38,"transport"),e.k0s(),e.EFF(39," de l'objet options pass\xe9 \xe0 la m\xe9thode "),e.j41(40,"code"),e.EFF(41,"createMicroservice()"),e.k0s(),e.EFF(42,'. Dans l\'exemple suivant, nous allons mettre en place un service "hero". La propri\xe9t\xe9 '),e.j41(43,"code"),e.EFF(44,"options"),e.k0s(),e.EFF(45," fournit des m\xe9tadonn\xe9es sur ce service ; ses propri\xe9t\xe9s sont d\xe9crites [ci-dessous] (microservices/grpc#options)."),e.k0s(),e.j41(46,"app-copy-button",18)(47,"span",19),e.EFF(48),e.nI1(49,"extension"),e.nrm(50,"app-tabs",null,1),e.k0s(),e.j41(52,"pre")(53,"code",20),e.EFF(54,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.GRPC,\n  options: {\n    package: 'hero',\n    protoPath: join(__dirname, 'hero/hero.proto'),\n  },\n});\n"),e.k0s()(),e.j41(55,"pre")(56,"code",20),e.EFF(57,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.GRPC,\n  options: {\n    package: 'hero',\n    protoPath: join(__dirname, 'hero/hero.proto'),\n  },\n});\n"),e.k0s()()(),e.j41(58,"blockquote",21)(59,"strong"),e.EFF(60,"Astuce"),e.k0s(),e.EFF(61," La fonction "),e.j41(62,"code"),e.EFF(63,"join()"),e.k0s(),e.EFF(64," est import\xe9e du paquet "),e.j41(65,"code"),e.EFF(66,"path"),e.k0s(),e.EFF(67," ; l'enum "),e.j41(68,"code"),e.EFF(69,"Transport"),e.k0s(),e.EFF(70," est import\xe9 du paquet "),e.j41(71,"code"),e.EFF(72,"@nestjs/microservices"),e.k0s(),e.EFF(73,".\n"),e.k0s(),e.j41(74,"p"),e.EFF(75,"Dans le fichier "),e.j41(76,"code"),e.EFF(77,"nest-cli.json"),e.k0s(),e.EFF(78,", nous ajoutons la propri\xe9t\xe9 "),e.j41(79,"code"),e.EFF(80,"assets"),e.k0s(),e.EFF(81," qui nous permet de distribuer des fichiers non-TypeScript, et "),e.j41(82,"code"),e.EFF(83,"watchAssets"),e.k0s(),e.EFF(84," - pour activer la surveillance de tous les assets non-TypeScript. Dans notre cas, nous voulons que les fichiers "),e.j41(85,"code"),e.EFF(86,".proto"),e.k0s(),e.EFF(87," soient automatiquement copi\xe9s dans le dossier "),e.j41(88,"code"),e.EFF(89,"dist"),e.k0s(),e.EFF(90,"."),e.k0s(),e.j41(91,"pre")(92,"code",22),e.EFF(93,'\n{\n  "compilerOptions": {\n    "assets": ["**/*.proto"],\n    "watchAssets": true\n  }\n}\n'),e.k0s()(),e.j41(94,"h4",23)(95,"span"),e.EFF(96,"Options"),e.k0s()(),e.j41(97,"p"),e.EFF(98,"L'objet "),e.j41(99,"strong"),e.EFF(100,"gRPC"),e.k0s(),e.EFF(101,' "transporter options" expose les propri\xe9t\xe9s d\xe9crites ci-dessous.'),e.k0s(),e.j41(102,"table")(103,"tr")(104,"td")(105,"code"),e.EFF(106,"package"),e.k0s()(),e.j41(107,"td"),e.EFF(108,"Nom du paquet Protobuf (correspond \xe0 la configuration du "),e.j41(109,"code"),e.EFF(110,"package"),e.k0s(),e.EFF(111," dans le fichier "),e.j41(112,"code"),e.EFF(113,".proto"),e.k0s(),e.EFF(114,"). Requis"),e.k0s()(),e.j41(115,"tr")(116,"td")(117,"code"),e.EFF(118,"protoPath"),e.k0s()(),e.j41(119,"td"),e.EFF(120," Chemin absolu (ou relatif au r\xe9pertoire racine) vers le fichier "),e.j41(121,"code"),e.EFF(122,".proto"),e.k0s(),e.EFF(123,". Requis "),e.k0s()(),e.j41(124,"tr")(125,"td")(126,"code"),e.EFF(127,"url"),e.k0s()(),e.j41(128,"td"),e.EFF(129,"URL de connexion. Cha\xeene au format adresse "),e.j41(130,"code"),e.EFF(131,"IP/nom DNS:port"),e.k0s(),e.EFF(132," (par exemple, "),e.j41(133,"code"),e.EFF(134,"'0.0.0.0:50051'"),e.k0s(),e.EFF(135," pour un serveur Discord) d\xe9finissant l'adresse/port sur lequel le transporteur \xe9tablit une connexion. Facultatif. La valeur par d\xe9faut est "),e.j41(136,"code"),e.EFF(137,"'localhost:5000'"),e.k0s()()(),e.j41(138,"tr")(139,"td")(140,"code"),e.EFF(141,"protoLoader"),e.k0s()(),e.j41(142,"td"),e.EFF(143,"Nom du paquet NPM pour l'utilitaire de chargement des fichiers "),e.j41(144,"code"),e.EFF(145,".proto"),e.k0s(),e.EFF(146,". Facultatif. La valeur par d\xe9faut est "),e.j41(147,"code"),e.EFF(148,"'@grpc/proto-loader'"),e.k0s()()(),e.j41(149,"tr")(150,"td")(151,"code"),e.EFF(152,"loader"),e.k0s()(),e.j41(153,"td"),e.EFF(154," Options de "),e.j41(155,"code"),e.EFF(156,"@grpc/proto-loader"),e.k0s(),e.EFF(157,". Elles permettent de contr\xf4ler en d\xe9tail le comportement des fichiers "),e.j41(158,"code"),e.EFF(159,".proto"),e.k0s(),e.EFF(160,". Facultatif. Voir "),e.j41(161,"a",24),e.EFF(162,"here"),e.k0s(),e.EFF(163," pour plus de d\xe9tails "),e.k0s()(),e.j41(164,"tr")(165,"td")(166,"code"),e.EFF(167,"credentials"),e.k0s()(),e.j41(168,"td"),e.EFF(169," Identifiants du serveur. Facultatif. "),e.j41(170,"a",25),e.EFF(171,"En lire plus ici"),e.k0s()()()(),e.j41(172,"h4",26)(173,"span"),e.EFF(174,"Exemple de service gRPC"),e.k0s()(),e.j41(175,"p"),e.EFF(176,"D\xe9finissons notre exemple de service gRPC appel\xe9 "),e.j41(177,"code"),e.EFF(178,"HeroesService"),e.k0s(),e.EFF(179,". Dans l'objet "),e.j41(180,"code"),e.EFF(181,"options"),e.k0s(),e.EFF(182," ci-dessus, la propri\xe9t\xe9 "),e.j41(183,"code"),e.EFF(184,"protoPath"),e.k0s(),e.EFF(185," d\xe9finit un chemin vers le fichier de d\xe9finitions "),e.j41(186,"code"),e.EFF(187,".proto"),e.k0s(),e.j41(188,"code"),e.EFF(189,"hero.proto"),e.k0s(),e.EFF(190,". Le fichier "),e.j41(191,"code"),e.EFF(192,"hero.proto"),e.k0s(),e.EFF(193," est structur\xe9 en utilisant "),e.j41(194,"a",27),e.EFF(195,"protocol buffers"),e.k0s(),e.EFF(196,". Voici \xe0 quoi il ressemble :"),e.k0s(),e.j41(197,"app-copy-button")(198,"pre")(199,"code",20),e.EFF(200,'\n// hero/hero.proto\nsyntax = "proto3";\n\npackage hero;\n\nservice HeroesService {\n  rpc FindOne (HeroById) returns (Hero) {}\n}\n\nmessage HeroById {\n  int32 id = 1;\n}\n\nmessage Hero {\n  int32 id = 1;\n  string name = 2;\n}\n'),e.k0s()()(),e.j41(201,"p"),e.EFF(202,"Notre "),e.j41(203,"code"),e.EFF(204,"HeroesService"),e.k0s(),e.EFF(205," expose une m\xe9thode "),e.j41(206,"code"),e.EFF(207,"FindOne()"),e.k0s(),e.EFF(208,". Cette m\xe9thode attend un argument d'entr\xe9e de type "),e.j41(209,"code"),e.EFF(210,"HeroById"),e.k0s(),e.EFF(211," et retourne un message "),e.j41(212,"code"),e.EFF(213,"Hero"),e.k0s(),e.EFF(214," (les tampons de protocole utilisent les \xe9l\xe9ments "),e.j41(215,"code"),e.EFF(216,"message"),e.k0s(),e.EFF(217," pour d\xe9finir \xe0 la fois les types de param\xe8tres et les types de retour)."),e.k0s(),e.j41(218,"p"),e.EFF(219,"Ensuite, nous devons impl\xe9menter le service. Pour d\xe9finir un handler qui r\xe9ponde \xe0 cette d\xe9finition, nous utilisons le d\xe9corateur "),e.j41(220,"code"),e.EFF(221,"@GrpcMethod()"),e.k0s(),e.EFF(222," dans un contr\xf4leur, comme montr\xe9 ci-dessous. Ce d\xe9corateur fournit les m\xe9tadonn\xe9es n\xe9cessaires pour d\xe9clarer une m\xe9thode en tant que m\xe9thode de service gRPC."),e.k0s(),e.j41(223,"blockquote",21)(224,"strong"),e.EFF(225,"Astuce"),e.k0s(),e.EFF(226," Le d\xe9corateur "),e.j41(227,"code"),e.EFF(228,"@MessagePattern()"),e.k0s(),e.EFF(229," ("),e.j41(230,"a",28),e.EFF(231,"en savoir plus"),e.k0s(),e.EFF(232,") introduit dans les chapitres pr\xe9c\xe9dents sur les microservices n'est pas utilis\xe9 avec les microservices bas\xe9s sur gRPC. Le d\xe9corateur "),e.j41(233,"code"),e.EFF(234,"@GrpcMethod()"),e.k0s(),e.EFF(235," prend effectivement sa place pour les microservices bas\xe9s sur gRPC.\n"),e.k0s(),e.j41(236,"app-copy-button",18)(237,"span",19),e.EFF(238),e.nI1(239,"extension"),e.nrm(240,"app-tabs",null,2),e.k0s(),e.j41(242,"pre")(243,"code",20),e.EFF(244,"\n@Controller()\nexport class HeroesController {\n  @GrpcMethod('HeroesService', 'FindOne')\n  findOne(data: HeroById, metadata: Metadata, call: ServerUnaryCall<any, any>): Hero {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()(),e.j41(245,"pre")(246,"code",20),e.EFF(247,"\n@Controller()\nexport class HeroesController {\n  @GrpcMethod('HeroesService', 'FindOne')\n  findOne(data, metadata, call) {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()()(),e.j41(248,"blockquote",21)(249,"strong"),e.EFF(250,"Astuce"),e.k0s(),e.EFF(251," Le d\xe9corateur "),e.j41(252,"code"),e.EFF(253,"@GrpcMethod()"),e.k0s(),e.EFF(254," est import\xe9 du paquetage "),e.j41(255,"code"),e.EFF(256,"@nestjs/microservices"),e.k0s(),e.EFF(257,", tandis que "),e.j41(258,"code"),e.EFF(259,"Metadata"),e.k0s(),e.EFF(260," et "),e.j41(261,"code"),e.EFF(262,"ServerUnaryCall"),e.k0s(),e.EFF(263," sont import\xe9s du paquetage "),e.j41(264,"code"),e.EFF(265,"grpc"),e.k0s(),e.EFF(266,".\n"),e.k0s(),e.j41(267,"p"),e.EFF(268,"Le d\xe9corateur montr\xe9 ci-dessus prend deux arguments. Le premier est le nom du service (par exemple, "),e.j41(269,"code"),e.EFF(270,"'HeroesService''), correspondant \xe0 la d\xe9finition du service "),e.k0s(),e.EFF(271,"HeroesService"),e.j41(272,"code"),e.EFF(273,"dans"),e.k0s(),e.EFF(274,"hero.proto"),e.j41(275,"code"),e.EFF(276,". La seconde (la cha\xeene "),e.k0s(),e.EFF(277,"'FindOne'"),e.j41(278,"code"),e.EFF(279,") correspond \xe0 la m\xe9thode rpc "),e.k0s(),e.EFF(280,"FindOne()"),e.j41(281,"code"),e.EFF(282,"d\xe9finie dans"),e.k0s(),e.EFF(283,"HeroesService"),e.j41(284,"code"),e.EFF(285,"dans le fichier"),e.k0s(),e.EFF(286,"hero.proto`."),e.k0s(),e.j41(287,"p"),e.EFF(288,"La m\xe9thode "),e.j41(289,"code"),e.EFF(290,"findOne()"),e.k0s(),e.EFF(291," prend trois arguments, les "),e.j41(292,"code"),e.EFF(293,"data"),e.k0s(),e.EFF(294," transmises par l'appelant, "),e.j41(295,"code"),e.EFF(296,"metadata"),e.k0s(),e.EFF(297," qui stocke les m\xe9tadonn\xe9es de la requ\xeate gRPC\net "),e.j41(298,"code"),e.EFF(299,"call"),e.k0s(),e.EFF(300," pour obtenir les propri\xe9t\xe9s de l'objet "),e.j41(301,"code"),e.EFF(302,"GrpcCall"),e.k0s(),e.EFF(303," telles que "),e.j41(304,"code"),e.EFF(305,"sendMetadata"),e.k0s(),e.EFF(306," pour envoyer les m\xe9tadonn\xe9es au client."),e.k0s(),e.j41(307,"p"),e.EFF(308,"Les deux arguments du d\xe9corateur "),e.j41(309,"code"),e.EFF(310,"@GrpcMethod()"),e.k0s(),e.EFF(311," sont optionnels. S'il est appel\xe9 sans le second argument (par exemple, "),e.j41(312,"code"),e.EFF(313,"'FindOne'"),e.k0s(),e.EFF(314,"), Nest associera automatiquement la m\xe9thode rpc du fichier "),e.j41(315,"code"),e.EFF(316,".proto"),e.k0s(),e.EFF(317," avec le handler en convertissant le nom du handler en majuscules (par exemple, le handler "),e.j41(318,"code"),e.EFF(319,"findOne"),e.k0s(),e.EFF(320," est associ\xe9 \xe0 la d\xe9finition de l'appel rpc "),e.j41(321,"code"),e.EFF(322,"FindOne"),e.k0s(),e.EFF(323,"). Ceci est illustr\xe9 ci-dessous."),e.k0s(),e.j41(324,"app-copy-button",18)(325,"span",19),e.EFF(326),e.nI1(327,"extension"),e.nrm(328,"app-tabs",null,3),e.k0s(),e.j41(330,"pre")(331,"code",20),e.EFF(332,"\n@Controller()\nexport class HeroesController {\n  @GrpcMethod('HeroesService')\n  findOne(data: HeroById, metadata: Metadata, call: ServerUnaryCall<any, any>): Hero {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()(),e.j41(333,"pre")(334,"code",20),e.EFF(335,"\n@Controller()\nexport class HeroesController {\n  @GrpcMethod('HeroesService')\n  findOne(data, metadata, call) {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()()(),e.j41(336,"p"),e.EFF(337,"Vous pouvez \xe9galement omettre le premier argument "),e.j41(338,"code"),e.EFF(339,"@GrpcMethod()"),e.k0s(),e.EFF(340,". Dans ce cas, Nest associe automatiquement le gestionnaire \xe0 la d\xe9finition du service \xe0 partir du fichier de d\xe9finitions du proto, en se basant sur le nom de la "),e.j41(341,"strong"),e.EFF(342,"classe"),e.k0s(),e.EFF(343," dans laquelle le gestionnaire est d\xe9fini. Par exemple, dans le code suivant, la classe "),e.j41(344,"code"),e.EFF(345,"HeroesService"),e.k0s(),e.EFF(346," associe ses m\xe9thodes de gestion \xe0 la d\xe9finition du service "),e.j41(347,"code"),e.EFF(348,"HeroesService"),e.k0s(),e.EFF(349," dans le fichier "),e.j41(350,"code"),e.EFF(351,"hero.proto"),e.k0s(),e.EFF(352," en se basant sur la correspondance du nom `'HeroesService''."),e.k0s(),e.j41(353,"app-copy-button",18)(354,"span",19),e.EFF(355),e.nI1(356,"extension"),e.nrm(357,"app-tabs",null,4),e.k0s(),e.j41(359,"pre")(360,"code",20),e.EFF(361,"\n@Controller()\nexport class HeroesService {\n  @GrpcMethod()\n  findOne(data: HeroById, metadata: Metadata, call: ServerUnaryCall<any, any>): Hero {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()(),e.j41(362,"pre")(363,"code",20),e.EFF(364,"\n@Controller()\nexport class HeroesService {\n  @GrpcMethod()\n  findOne(data, metadata, call) {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()()(),e.j41(365,"h4",29)(366,"span"),e.EFF(367,"Client"),e.k0s()(),e.j41(368,"p"),e.EFF(369,"Les applications Nest peuvent agir en tant que clients gRPC, consommant des services d\xe9finis dans les fichiers "),e.j41(370,"code"),e.EFF(371,".proto"),e.k0s(),e.EFF(372,". Vous acc\xe9dez aux services distants par l'interm\xe9diaire d'un objet "),e.j41(373,"code"),e.EFF(374,"ClientGrpc"),e.k0s(),e.EFF(375,". Vous pouvez obtenir un objet "),e.j41(376,"code"),e.EFF(377,"ClientGrpc"),e.k0s(),e.EFF(378," de plusieurs fa\xe7ons."),e.k0s(),e.j41(379,"p"),e.EFF(380,"La technique privil\xe9gi\xe9e est d'importer le module "),e.j41(381,"code"),e.EFF(382,"ClientsModule"),e.k0s(),e.EFF(383,". Utilisez la m\xe9thode "),e.j41(384,"code"),e.EFF(385,"register()"),e.k0s(),e.EFF(386," pour lier un paquet de services d\xe9fini dans un fichier "),e.j41(387,"code"),e.EFF(388,".proto"),e.k0s(),e.EFF(389," \xe0 un jeton d'injection, et pour configurer le service. La propri\xe9t\xe9 "),e.j41(390,"code"),e.EFF(391,"name"),e.k0s(),e.EFF(392," est le jeton d'injection. Pour les services gRPC, utilisez "),e.j41(393,"code"),e.EFF(394,"transport : Transport.GRPC"),e.k0s(),e.EFF(395,". La propri\xe9t\xe9 "),e.j41(396,"code"),e.EFF(397,"options"),e.k0s(),e.EFF(398," est un objet avec les m\xeames propri\xe9t\xe9s que celles d\xe9crites "),e.j41(399,"a",30),e.EFF(400,"ci-dessus"),e.k0s(),e.EFF(401,"."),e.k0s(),e.j41(402,"app-copy-button")(403,"pre")(404,"code",20),e.EFF(405,"\nimports: [\n  ClientsModule.register([\n    {\n      name: 'HERO_PACKAGE',\n      transport: Transport.GRPC,\n      options: {\n        package: 'hero',\n        protoPath: join(__dirname, 'hero/hero.proto'),\n      },\n    },\n  ]),\n];\n"),e.k0s()()(),e.j41(406,"blockquote",21)(407,"strong"),e.EFF(408,"Astuce"),e.k0s(),e.EFF(409," La m\xe9thode "),e.j41(410,"code"),e.EFF(411,"register()"),e.k0s(),e.EFF(412," prend un tableau d'objets. Vous pouvez enregistrer plusieurs paquets en fournissant une liste d'objets d'enregistrement s\xe9par\xe9s par des virgules.\n"),e.k0s(),e.j41(413,"p"),e.EFF(414,"Une fois enregistr\xe9, nous pouvons injecter l'objet "),e.j41(415,"code"),e.EFF(416,"ClientGrpc"),e.k0s(),e.EFF(417," configur\xe9 avec "),e.j41(418,"code"),e.EFF(419,"@Inject()"),e.k0s(),e.EFF(420,". Nous utilisons ensuite la m\xe9thode "),e.j41(421,"code"),e.EFF(422,"getService()"),e.k0s(),e.EFF(423," de l'objet "),e.j41(424,"code"),e.EFF(425,"ClientGrpc"),e.k0s(),e.EFF(426," pour r\xe9cup\xe9rer l'instance de service, comme indiqu\xe9 ci-dessous."),e.k0s(),e.j41(427,"app-copy-button")(428,"pre")(429,"code",20),e.EFF(430,"\n@Injectable()\nexport class AppService implements OnModuleInit {\n  private heroesService: HeroesService;\n\n  constructor(@Inject('HERO_PACKAGE') private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.heroesService = this.client.getService<HeroesService>('HeroesService');\n  }\n\n  getHero(): Observable<string> {\n    return this.heroesService.findOne({ id: 1 });\n  }\n}\n"),e.k0s()()(),e.j41(431,"blockquote",31)(432,"strong"),e.EFF(433,"Attention"),e.k0s(),e.EFF(434," Le client gRPC n'enverra pas les champs qui contiennent le trait de soulignement "),e.j41(435,"code"),e.EFF(436,"_"),e.k0s(),e.EFF(437," dans leur nom \xe0 moins que l'option "),e.j41(438,"code"),e.EFF(439,"keepCase"),e.k0s(),e.EFF(440," soit fix\xe9e \xe0 "),e.j41(441,"code"),e.EFF(442,"true"),e.k0s(),e.EFF(443," dans la configuration du chargeur de proto ("),e.j41(444,"code"),e.EFF(445,"options.loader.keepcase"),e.k0s(),e.EFF(446," dans la configuration du transporteur de microservices).\n"),e.k0s(),e.j41(447,"p"),e.EFF(448,"Remarquez qu'il y a une petite diff\xe9rence par rapport \xe0 la technique utilis\xe9e dans d'autres m\xe9thodes de transport de microservices. Au lieu de la classe "),e.j41(449,"code"),e.EFF(450,"ClientProxy"),e.k0s(),e.EFF(451,", nous utilisons la classe "),e.j41(452,"code"),e.EFF(453,"ClientGrpc"),e.k0s(),e.EFF(454,", qui fournit la m\xe9thode "),e.j41(455,"code"),e.EFF(456,"getService()"),e.k0s(),e.EFF(457,". La m\xe9thode g\xe9n\xe9rique "),e.j41(458,"code"),e.EFF(459,"getService()"),e.k0s(),e.EFF(460," prend un nom de service comme argument et retourne son instance (si disponible)."),e.k0s(),e.j41(461,"p"),e.EFF(462,"Vous pouvez \xe9galement utiliser le d\xe9corateur "),e.j41(463,"code"),e.EFF(464,"@Client()"),e.k0s(),e.EFF(465," pour instancier un objet "),e.j41(466,"code"),e.EFF(467,"ClientGrpc"),e.k0s(),e.EFF(468,", comme suit :"),e.k0s(),e.j41(469,"app-copy-button")(470,"pre")(471,"code",20),e.EFF(472,"\n@Injectable()\nexport class AppService implements OnModuleInit {\n  @Client({\n    transport: Transport.GRPC,\n    options: {\n      package: 'hero',\n      protoPath: join(__dirname, 'hero/hero.proto'),\n    },\n  })\n  client: ClientGrpc;\n\n  private heroesService: HeroesService;\n\n  onModuleInit() {\n    this.heroesService = this.client.getService<HeroesService>('HeroesService');\n  }\n\n  getHero(): Observable<string> {\n    return this.heroesService.findOne({ id: 1 });\n  }\n}\n"),e.k0s()()(),e.j41(473,"p"),e.EFF(474,"Enfin, pour des sc\xe9narios plus complexes, nous pouvons injecter un client configur\xe9 dynamiquement en utilisant la classe "),e.j41(475,"code"),e.EFF(476,"ClientProxyFactory"),e.k0s(),e.EFF(477," comme d\xe9crit [ici] (/microservices/basics#client)."),e.k0s(),e.j41(478,"p"),e.EFF(479,"Dans les deux cas, nous obtenons une r\xe9f\xe9rence \xe0 notre objet proxy "),e.j41(480,"code"),e.EFF(481,"HeroesService"),e.k0s(),e.EFF(482,", qui expose le m\xeame ensemble de m\xe9thodes que celles d\xe9finies dans le fichier "),e.j41(483,"code"),e.EFF(484,".proto"),e.k0s(),e.EFF(485,". Maintenant, quand nous acc\xe9dons \xe0 cet objet proxy (c'est-\xe0-dire "),e.j41(486,"code"),e.EFF(487,"heroesService"),e.k0s(),e.EFF(488,"), le syst\xe8me gRPC s\xe9rialise automatiquement les requ\xeates, les transmet au syst\xe8me distant, renvoie une r\xe9ponse, et d\xe9s\xe9rialise la r\xe9ponse. Parce que gRPC nous prot\xe8ge de ces d\xe9tails de communication r\xe9seau, "),e.j41(489,"code"),e.EFF(490,"heroesService"),e.k0s(),e.EFF(491," ressemble et agit comme un fournisseur local."),e.k0s(),e.j41(492,"p"),e.EFF(493,"Notez que toutes les m\xe9thodes du service sont en "),e.j41(494,"strong"),e.EFF(495,"majuscules"),e.k0s(),e.EFF(496," (afin de suivre la convention naturelle du langage). Ainsi, par exemple, alors que la d\xe9finition du fichier "),e.j41(497,"code"),e.EFF(498,".proto"),e.k0s(),e.j41(499,"code"),e.EFF(500,"HeroesService"),e.k0s(),e.EFF(501," contient la fonction "),e.j41(502,"code"),e.EFF(503,"FindOne()"),e.k0s(),e.EFF(504,", l'instance "),e.j41(505,"code"),e.EFF(506,"heroesService"),e.k0s(),e.EFF(507," fournira la m\xe9thode "),e.j41(508,"code"),e.EFF(509,"findOne()"),e.k0s(),e.EFF(510,"."),e.k0s(),e.j41(511,"app-copy-button")(512,"pre")(513,"code",20),e.EFF(514,"\ninterface HeroesService {\n  findOne(data: { id: number }): Observable<any>;\n}\n"),e.k0s()()(),e.j41(515,"p"),e.EFF(516,"Un gestionnaire de message peut \xe9galement renvoyer un "),e.j41(517,"code"),e.EFF(518,"Observable"),e.k0s(),e.EFF(519,", auquel cas les valeurs de r\xe9sultat seront \xe9mises jusqu'\xe0 ce que le flux soit termin\xe9."),e.k0s(),e.j41(520,"app-copy-button",18)(521,"span",19),e.EFF(522),e.nI1(523,"extension"),e.nrm(524,"app-tabs",null,5),e.k0s(),e.j41(526,"pre")(527,"code",20),e.EFF(528,"\n@Get()\ncall(): Observable<any> {\n  return this.heroesService.findOne({ id: 1 });\n}\n"),e.k0s()(),e.j41(529,"pre")(530,"code",20),e.EFF(531,"\n@Get()\ncall() {\n  return this.heroesService.findOne({ id: 1 });\n}\n"),e.k0s()()(),e.j41(532,"p"),e.EFF(533,"Pour envoyer des m\xe9tadonn\xe9es gRPC (en m\xeame temps que la requ\xeate), vous pouvez passer un deuxi\xe8me argument, comme suit :"),e.k0s(),e.j41(534,"app-copy-button")(535,"pre")(536,"code",20),e.EFF(537,"\ncall(): Observable<any> {\n  const metadata = new Metadata();\n  metadata.add('Set-Cookie', 'yummy_cookie=choco');\n\n  return this.heroesService.findOne({ id: 1 }, metadata);\n}\n"),e.k0s()()(),e.j41(538,"blockquote",21)(539,"strong"),e.EFF(540,"Astuce"),e.k0s(),e.EFF(541," La classe "),e.j41(542,"code"),e.EFF(543,"Metadata"),e.k0s(),e.EFF(544," est import\xe9e du paquet "),e.j41(545,"code"),e.EFF(546,"grpc"),e.k0s(),e.EFF(547,".\n"),e.k0s(),e.j41(548,"p"),e.EFF(549,"Notez que cela n\xe9cessite la mise \xe0 jour de l'interface "),e.j41(550,"code"),e.EFF(551,"HeroesService"),e.k0s(),e.EFF(552," que nous avons d\xe9finie quelques \xe9tapes plus t\xf4t."),e.k0s(),e.j41(553,"h4",32)(554,"span"),e.EFF(555,"Exemple"),e.k0s()(),e.j41(556,"p"),e.EFF(557,"Un exemple concret est disponible "),e.j41(558,"a",33),e.EFF(559,"ici"),e.k0s(),e.EFF(560,"."),e.k0s(),e.j41(561,"h4",34)(562,"span"),e.EFF(563,"R\xe9flexion gRPC"),e.k0s()(),e.j41(564,"p"),e.EFF(565,"La "),e.j41(566,"a",35),e.EFF(567,"sp\xe9cification de r\xe9flexion du serveur gRPC"),e.k0s(),e.EFF(568," est une norme qui permet aux clients gRPC de demander des d\xe9tails sur l'API que le serveur expose, un peu comme l'exposition d'un document OpenAPI pour une API REST. Cela peut faciliter consid\xe9rablement le travail avec des outils de d\xe9bogage pour d\xe9veloppeurs tels que grpc-ui ou postman."),e.k0s(),e.j41(569,"p"),e.EFF(570,"Pour ajouter la prise en charge de la r\xe9flexion gRPC \xe0 votre serveur, installez d'abord le paquetage d'impl\xe9mentation requis :"),e.k0s(),e.j41(571,"pre")(572,"code",16),e.EFF(573,"\n$ npm i --save @grpc/reflection\n"),e.k0s()(),e.j41(574,"p"),e.EFF(575,"Ensuite, il peut \xeatre connect\xe9 au serveur gRPC en utilisant le hook "),e.j41(576,"code"),e.EFF(577,"onLoadPackageDefinition"),e.k0s(),e.EFF(578," dans les options du serveur gRPC, comme suit :"),e.k0s(),e.j41(579,"app-copy-button",18)(580,"span",19),e.EFF(581),e.nI1(582,"extension"),e.nrm(583,"app-tabs",null,6),e.k0s(),e.j41(585,"pre")(586,"code",20),e.EFF(587,"\nimport { ReflectionService } from '@grpc/reflection';\n\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  options: {\n    onLoadPackageDefinition: (pkg, server) => {\n      new ReflectionService(pkg).addToServer(server);\n    },\n  },\n});\n"),e.k0s()()(),e.j41(588,"p"),e.EFF(589,"D\xe9sormais, votre serveur r\xe9pondra aux messages demandant des d\xe9tails sur l'API en utilisant la sp\xe9cification de r\xe9flexion."),e.k0s(),e.j41(590,"h4",36)(591,"span"),e.EFF(592,"Flux de donn\xe9es gRPC"),e.k0s()(),e.j41(593,"p"),e.EFF(594,"gRPC supporte les connexions en direct \xe0 long terme, connues sous le nom de "),e.j41(595,"code"),e.EFF(596,"streams"),e.k0s(),e.EFF(597," (flux). Les flux sont utiles dans des cas tels que le chat, les observations ou les transferts de donn\xe9es. Vous trouverez plus de d\xe9tails dans la documentation officielle "),e.j41(598,"a",37),e.EFF(599,"ici"),e.k0s(),e.EFF(600,"."),e.k0s(),e.j41(601,"p"),e.EFF(602,"Nest prend en charge les gestionnaires de flux GRPC de deux mani\xe8res diff\xe9rentes :"),e.k0s(),e.j41(603,"ul")(604,"li"),e.EFF(605,"RxJS "),e.j41(606,"code"),e.EFF(607,"Subject"),e.k0s(),e.EFF(608," + "),e.j41(609,"code"),e.EFF(610,"Observable"),e.k0s(),e.EFF(611," handler : peut \xeatre utile pour \xe9crire des r\xe9ponses \xe0 l'int\xe9rieur d'une m\xe9thode de contr\xf4leur ou pour \xeatre pass\xe9 au consommateur "),e.j41(612,"code"),e.EFF(613,"Subject"),e.k0s(),e.EFF(614,"/"),e.j41(615,"code"),e.EFF(616,"Observable"),e.k0s(),e.EFF(617,"."),e.k0s(),e.j41(618,"li"),e.EFF(619,"Gestionnaire de flux d'appels GRPC purs : peut \xeatre utile pour \xeatre pass\xe9 \xe0 un ex\xe9cuteur qui g\xe9rera le reste de la distribution pour le gestionnaire de flux "),e.j41(620,"code"),e.EFF(621,"Duplex"),e.k0s(),e.EFF(622," standard de Node."),e.k0s()(),e.j41(623,"p"),e.nrm(624,"app-banner-enterprise"),e.k0s(),e.j41(625,"h4",38)(626,"span"),e.EFF(627,"Exemple de flux en continu"),e.k0s()(),e.j41(628,"p"),e.EFF(629,"D\xe9finissons un nouvel exemple de service gRPC appel\xe9 "),e.j41(630,"code"),e.EFF(631,"HelloService"),e.k0s(),e.EFF(632,". Le fichier "),e.j41(633,"code"),e.EFF(634,"hello.proto"),e.k0s(),e.EFF(635," est structur\xe9 en utilisant "),e.j41(636,"a",27),e.EFF(637,"protocol buffers"),e.k0s(),e.EFF(638,". Voici \xe0 quoi il ressemble :"),e.k0s(),e.j41(639,"app-copy-button")(640,"pre")(641,"code",20),e.EFF(642,'\n// hello/hello.proto\nsyntax = "proto3";\n\npackage hello;\n\nservice HelloService {\n  rpc BidiHello(stream HelloRequest) returns (stream HelloResponse);\n  rpc LotsOfGreetings(stream HelloRequest) returns (HelloResponse);\n}\n\nmessage HelloRequest {\n  string greeting = 1;\n}\n\nmessage HelloResponse {\n  string reply = 1;\n}\n'),e.k0s()()(),e.j41(643,"blockquote",21)(644,"strong"),e.EFF(645,"Astuce"),e.k0s(),e.EFF(646," La m\xe9thode "),e.j41(647,"code"),e.EFF(648,"LotsOfGreetings"),e.k0s(),e.EFF(649," peut \xeatre simplement impl\xe9ment\xe9e avec le d\xe9corateur "),e.j41(650,"code"),e.EFF(651,"@GrpcMethod"),e.k0s(),e.EFF(652," (comme dans les exemples ci-dessus) puisque le flux retourn\xe9 peut \xe9mettre plusieurs valeurs.\n"),e.k0s(),e.j41(653,"p"),e.EFF(654,"Sur la base de ce fichier "),e.j41(655,"code"),e.EFF(656,".proto"),e.k0s(),e.EFF(657,", d\xe9finissons l'interface "),e.j41(658,"code"),e.EFF(659,"HelloService"),e.k0s(),e.EFF(660," :"),e.k0s(),e.j41(661,"app-copy-button")(662,"pre")(663,"code",20),e.EFF(664,"\ninterface HelloService {\n  bidiHello(upstream: Observable<HelloRequest>): Observable<HelloResponse>;\n  lotsOfGreetings(\n    upstream: Observable<HelloRequest>,\n  ): Observable<HelloResponse>;\n}\n\ninterface HelloRequest {\n  greeting: string;\n}\n\ninterface HelloResponse {\n  reply: string;\n}\n"),e.k0s()()(),e.j41(665,"blockquote",21)(666,"strong"),e.EFF(667,"Astuce"),e.k0s(),e.EFF(668," L'interface proto peut \xeatre g\xe9n\xe9r\xe9e automatiquement par le paquetage "),e.j41(669,"a",39),e.EFF(670,"ts-proto"),e.k0s(),e.EFF(671,", apprenez-en plus "),e.j41(672,"a",40),e.EFF(673,"ici"),e.k0s(),e.EFF(674,".\n"),e.k0s(),e.j41(675,"h4",41)(676,"span"),e.EFF(677,"Strat\xe9gie Subject"),e.k0s()(),e.j41(678,"p"),e.EFF(679,"Le d\xe9corateur "),e.j41(680,"code"),e.EFF(681,"@GrpcStreamMethod()"),e.k0s(),e.EFF(682," fournit le param\xe8tre de la fonction comme un "),e.j41(683,"code"),e.EFF(684,"Observable"),e.k0s(),e.EFF(685," RxJS. Ainsi, nous pouvons recevoir et traiter plusieurs messages."),e.k0s(),e.j41(686,"app-copy-button")(687,"pre")(688,"code",20),e.EFF(689,"\n@GrpcStreamMethod()\nbidiHello(messages: Observable<any>, metadata: Metadata, call: ServerDuplexStream<any, any>): Observable<any> {\n  const subject = new Subject();\n\n  const onNext = message => {\n    console.log(message);\n    subject.next({\n      reply: 'Hello, world!'\n    });\n  };\n  const onComplete = () => subject.complete();\n  messages.subscribe({\n    next: onNext,\n    complete: onComplete,\n  });\n\n\n  return subject.asObservable();\n}\n"),e.k0s()()(),e.j41(690,"blockquote",42)(691,"strong"),e.EFF(692,"Attention"),e.k0s(),e.EFF(693," Pour supporter l'interaction full-duplex avec le d\xe9corateur "),e.j41(694,"code"),e.EFF(695,"@GrpcStreamMethod()"),e.k0s(),e.EFF(696,", la m\xe9thode du contr\xf4leur doit retourner un "),e.j41(697,"code"),e.EFF(698,"Observable"),e.k0s(),e.EFF(699," RxJS.\n"),e.k0s(),e.j41(700,"blockquote",21)(701,"strong"),e.EFF(702,"Astuce"),e.k0s(),e.EFF(703," Les classes/interfaces "),e.j41(704,"code"),e.EFF(705,"Metadata"),e.k0s(),e.EFF(706," et "),e.j41(707,"code"),e.EFF(708,"ServerUnaryCall"),e.k0s(),e.EFF(709," sont import\xe9es du paquet "),e.j41(710,"code"),e.EFF(711,"grpc"),e.k0s(),e.EFF(712,".\n"),e.k0s(),e.j41(713,"p"),e.EFF(714,"Selon la d\xe9finition du service (dans le fichier "),e.j41(715,"code"),e.EFF(716,".proto"),e.k0s(),e.EFF(717,"), la m\xe9thode "),e.j41(718,"code"),e.EFF(719,"BidiHello"),e.k0s(),e.EFF(720," doit envoyer des requ\xeates au service. Pour envoyer plusieurs messages asynchrones au flux depuis un client, nous nous appuyons sur une classe RxJS "),e.j41(721,"code"),e.EFF(722,"ReplaySubject"),e.k0s(),e.EFF(723,"."),e.k0s(),e.j41(724,"app-copy-button")(725,"pre")(726,"code",20),e.EFF(727,"\nconst helloService = this.client.getService<HelloService>('HelloService');\nconst helloRequest$ = new ReplaySubject<HelloRequest>();\n\nhelloRequest$.next({ greeting: 'Hello (1)!' });\nhelloRequest$.next({ greeting: 'Hello (2)!' });\nhelloRequest$.complete();\n\nreturn helloService.bidiHello(helloRequest$);\n"),e.k0s()()(),e.j41(728,"p"),e.EFF(729,"Dans l'exemple ci-dessus, nous avons \xe9crit deux messages dans le flux (appels "),e.j41(730,"code"),e.EFF(731,"next()"),e.k0s(),e.EFF(732,") et notifi\xe9 au service que nous avions termin\xe9 d'envoyer les donn\xe9es (appel "),e.j41(733,"code"),e.EFF(734,"complete()"),e.k0s(),e.EFF(735,")."),e.k0s(),e.j41(736,"h4",43)(737,"span"),e.EFF(738,"Gestionnaire d'appel de flux"),e.k0s()(),e.j41(739,"p"),e.EFF(740,"Lorsque la valeur de retour de la m\xe9thode est d\xe9finie comme "),e.j41(741,"code"),e.EFF(742,"stream"),e.k0s(),e.EFF(743,", le d\xe9corateur "),e.j41(744,"code"),e.EFF(745,"@GrpcStreamCall()"),e.k0s(),e.EFF(746," fournit le param\xe8tre de fonction comme "),e.j41(747,"code"),e.EFF(748,"grpc.ServerDuplexStream"),e.k0s(),e.EFF(749,", qui supporte les m\xe9thodes standards comme "),e.j41(750,"code"),e.EFF(751,".on('data', callback)"),e.k0s(),e.EFF(752,", "),e.j41(753,"code"),e.EFF(754,".write(message)"),e.k0s(),e.EFF(755," ou "),e.j41(756,"code"),e.EFF(757,".cancel()"),e.k0s(),e.EFF(758,". Une documentation compl\xe8te sur les m\xe9thodes disponibles est disponible "),e.j41(759,"a",44),e.EFF(760,"ici"),e.k0s(),e.EFF(761,"."),e.k0s(),e.j41(762,"p"),e.EFF(763,"Alternativement, lorsque la valeur de retour de la m\xe9thode n'est pas un "),e.j41(764,"code"),e.EFF(765,"stream"),e.k0s(),e.EFF(766,", le d\xe9corateur "),e.j41(767,"code"),e.EFF(768,"@GrpcStreamCall()"),e.k0s(),e.EFF(769," fournit deux param\xe8tres de fonction, respectivement "),e.j41(770,"code"),e.EFF(771,"grpc.ServerReadableStream"),e.k0s(),e.EFF(772," ("),e.j41(773,"a",45),e.EFF(774,"en savoir plus"),e.k0s(),e.EFF(775,") et "),e.j41(776,"code"),e.EFF(777,"callback"),e.k0s(),e.EFF(778,"."),e.k0s(),e.j41(779,"p"),e.EFF(780,"Commen\xe7ons par l'impl\xe9mentation de "),e.j41(781,"code"),e.EFF(782,"BidiHello"),e.k0s(),e.EFF(783," qui devrait supporter une interaction full-duplex."),e.k0s(),e.j41(784,"app-copy-button")(785,"pre")(786,"code",20),e.EFF(787,"\n@GrpcStreamCall()\nbidiHello(requestStream: any) {\n  requestStream.on('data', message => {\n    console.log(message);\n    requestStream.write({\n      reply: 'Hello, world!'\n    });\n  });\n}\n"),e.k0s()()(),e.j41(788,"blockquote",21)(789,"strong"),e.EFF(790,"Astuce"),e.k0s(),e.EFF(791," Ce d\xe9corateur n'exige pas la fourniture d'un param\xe8tre de retour sp\xe9cifique. On s'attend \xe0 ce que le flux soit trait\xe9 de la m\xeame mani\xe8re que tout autre type de flux standard.\n"),e.k0s(),e.j41(792,"p"),e.EFF(793,"Dans l'exemple ci-dessus, nous avons utilis\xe9 la m\xe9thode "),e.j41(794,"code"),e.EFF(795,"write()"),e.k0s(),e.EFF(796," pour \xe9crire des objets dans le flux de r\xe9ponse. Le callback pass\xe9 dans la m\xe9thode "),e.j41(797,"code"),e.EFF(798,".on()"),e.k0s(),e.EFF(799," en tant que second param\xe8tre sera appel\xe9 \xe0 chaque fois que notre service recevra un nouveau morceau de donn\xe9es."),e.k0s(),e.j41(800,"p"),e.EFF(801,"Impl\xe9mentons la m\xe9thode "),e.j41(802,"code"),e.EFF(803,"LotsOfGreetings"),e.k0s(),e.EFF(804,"."),e.k0s(),e.j41(805,"app-copy-button")(806,"pre")(807,"code",20),e.EFF(808,"\n@GrpcStreamCall()\nlotsOfGreetings(requestStream: any, callback: (err: unknown, value: HelloResponse) => void) {\n  requestStream.on('data', message => {\n    console.log(message);\n  });\n  requestStream.on('end', () => callback(null, { reply: 'Hello, world!' }));\n}\n"),e.k0s()()(),e.j41(809,"p"),e.EFF(810,"Ici, nous avons utilis\xe9 la fonction "),e.j41(811,"code"),e.EFF(812,"callback"),e.k0s(),e.EFF(813," pour envoyer la r\xe9ponse une fois que le traitement du "),e.j41(814,"code"),e.EFF(815,"requestStream"),e.k0s(),e.EFF(816," est termin\xe9."),e.k0s(),e.j41(817,"h4",46)(818,"span"),e.EFF(819,"M\xe9tadonn\xe9es gRPC"),e.k0s()(),e.j41(820,"p"),e.EFF(821,"Les m\xe9tadonn\xe9es sont des informations sur un appel RPC particulier sous la forme d'une liste de paires cl\xe9-valeur, o\xf9 les cl\xe9s sont des cha\xeenes de caract\xe8res et les valeurs sont g\xe9n\xe9ralement des cha\xeenes de caract\xe8res mais peuvent \xeatre des donn\xe9es binaires. Les m\xe9tadonn\xe9es sont opaques \xe0 gRPC lui-m\xeame - elles permettent au client de fournir des informations associ\xe9es \xe0 l'appel au serveur et vice versa. Les m\xe9tadonn\xe9es peuvent inclure des jetons d'authentification, des identifiants de requ\xeate et des balises \xe0 des fins de surveillance, ainsi que des informations de donn\xe9es telles que le nombre d'enregistrements dans un ensemble de donn\xe9es."),e.k0s(),e.j41(822,"p"),e.EFF(823,"Pour lire les m\xe9tadonn\xe9es dans le gestionnaire "),e.j41(824,"code"),e.EFF(825,"@GrpcMethod()"),e.k0s(),e.EFF(826,", utilisez le second argument (metadata), qui est de type "),e.j41(827,"code"),e.EFF(828,"Metadata"),e.k0s(),e.EFF(829," (import\xe9 du paquet "),e.j41(830,"code"),e.EFF(831,"grpc"),e.k0s(),e.EFF(832,")."),e.k0s(),e.j41(833,"p"),e.EFF(834,"Pour renvoyer les m\xe9tadonn\xe9es du gestionnaire, utilisez la m\xe9thode "),e.j41(835,"code"),e.EFF(836,"ServerUnaryCall#sendMetadata()"),e.k0s(),e.EFF(837," (troisi\xe8me argument du gestionnaire)."),e.k0s(),e.j41(838,"app-copy-button",18)(839,"span",19),e.EFF(840),e.nI1(841,"extension"),e.nrm(842,"app-tabs",null,7),e.k0s(),e.j41(844,"pre")(845,"code",20),e.EFF(846,"\n@Controller()\nexport class HeroesService {\n  @GrpcMethod()\n  findOne(data: HeroById, metadata: Metadata, call: ServerUnaryCall<any, any>): Hero {\n    const serverMetadata = new Metadata();\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n\n    serverMetadata.add('Set-Cookie', 'yummy_cookie=choco');\n    call.sendMetadata(serverMetadata);\n\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()(),e.j41(847,"pre")(848,"code",20),e.EFF(849,"\n@Controller()\nexport class HeroesService {\n  @GrpcMethod()\n  findOne(data, metadata, call) {\n    const serverMetadata = new Metadata();\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n\n    serverMetadata.add('Set-Cookie', 'yummy_cookie=choco');\n    call.sendMetadata(serverMetadata);\n\n    return items.find(({ id }) => id === data.id);\n  }\n}\n"),e.k0s()()(),e.j41(850,"p"),e.EFF(851,"De m\xeame, pour lire les m\xe9tadonn\xe9es dans les gestionnaires annot\xe9s avec le gestionnaire "),e.j41(852,"code"),e.EFF(853,"@GrpcStreamMethod()"),e.k0s(),e.EFF(854," ("),e.j41(855,"a",47),e.EFF(856,"Strat\xe9gie Subject"),e.k0s(),e.EFF(857,"), utilisez le deuxi\xe8me argument (metadata), qui est de type "),e.j41(858,"code"),e.EFF(859,"Metadata"),e.k0s(),e.EFF(860," (import\xe9 du paquet "),e.j41(861,"code"),e.EFF(862,"grpc"),e.k0s(),e.EFF(863,")."),e.k0s(),e.j41(864,"p"),e.EFF(865,"Pour renvoyer les m\xe9tadonn\xe9es du gestionnaire, utilisez la m\xe9thode "),e.j41(866,"code"),e.EFF(867,"ServerDuplexStream#sendMetadata()"),e.k0s(),e.EFF(868," (troisi\xe8me argument du gestionnaire)."),e.k0s(),e.j41(869,"p"),e.EFF(870,"Pour lire les m\xe9tadonn\xe9es \xe0 partir d'un "),e.j41(871,"a",48),e.EFF(872,"gestionnaire d'appel de flux"),e.k0s(),e.EFF(873," (handlers annot\xe9s avec le d\xe9corateur "),e.j41(874,"code"),e.EFF(875,"@GrpcStreamCall()"),e.k0s(),e.EFF(876,"), \xe9coutez l'\xe9v\xe9nement "),e.j41(877,"code"),e.EFF(878,"metadata"),e.k0s(),e.EFF(879," sur la r\xe9f\xe9rence "),e.j41(880,"code"),e.EFF(881,"requestStream"),e.k0s(),e.EFF(882,", comme suit :"),e.k0s(),e.j41(883,"app-copy-button")(884,"pre")(885,"code",20),e.EFF(886,"\nrequestStream.on('metadata', (metadata: Metadata) => {\n  const meta = metadata.get('X-Meta');\n});\n"),e.k0s()()()()),2&t){const o=e.sdS(51),a=e.sdS(241),u=e.sdS(329),c=e.sdS(358),i=e.sdS(525),E=e.sdS(584),j=e.sdS(843);e.R7$(48),e.SpI(" ",e.i5U(49,31,"main",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(183),e.SpI(" ",e.i5U(239,34,"heroes.controller",a.isJsActive),"\n"),e.R7$(4),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(81),e.SpI(" ",e.i5U(327,37,"heroes.controller",u.isJsActive),"\n"),e.R7$(4),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(22),e.SpI(" ",e.i5U(356,40,"heroes.controller",c.isJsActive),"\n"),e.R7$(4),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(160),e.SpI(" ",e.i5U(523,43,"heroes.controller",i.isJsActive),"\n"),e.R7$(4),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(52),e.SpI(" ",e.i5U(582,46,"main",E.isJsActive),"\n"),e.R7$(259),e.SpI(" ",e.i5U(841,49,"heroes.controller",j.isJsActive),"\n"),e.R7$(4),e.AVh("hide",j.isJsActive),e.R7$(3),e.AVh("hide",!j.isJsActive)}},dependencies:[F.O,m.a,x.d,l.z,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"gRPC - Microservices"}},{path:"rabbitmq",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-rabbitmq"]],features:[e.Vt3],decls:334,vars:28,consts:[["contentReference",""],["appb5b4cbcb397e9b0f5b7693d5980b50ad90935731",""],["app43ef4f6f3a336757e916bfec62dc233b5332020f",""],["app82f72431b5685fc6fd86223a0db55ac0e5d40549",""],["app14d61f90f6b75473a412cdc565eac5ea20fca35c",""],["app4bdb02c646e60b252f9e11cd5b20176706008e55",""],["appa43f1a38160ca2323cbc5f088461af1a6a9bebc4",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/rabbitmq.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","rabbitmq"],["rel","nofollow","target","_blank","href","https://www.rabbitmq.com/"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","vue-densemble"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","options"],["href","https://amqp-node.github.io/amqplib/channel_api.html#channel_consume","rel","nofollow","target","_blank"],["href","https://amqp-node.github.io/amqplib/channel_api.html#channel_assertQueue","rel","nofollow","target","_blank"],["href","https://amqp-node.github.io/amqplib/channel_api.html#socket-options","rel","nofollow","target","_blank"],["appAnchor","","id","client"],["href","/microservices/basics#client"],["appAnchor","","id","contexte"],["rel","nofollow","target","_blank","href","https://www.rabbitmq.com/channels.html"],["appAnchor","","id","accus\xe9-de-r\xe9ception-des-messages"],["rel","nofollow","target","_blank","href","https://www.rabbitmq.com/confirms.html"],["appAnchor","","id","constructeurs-denregistrements"]],template:function(t,r){if(1&t&&(e.j41(0,"div",7,0)(2,"div",8)(3,"a",9),e.nrm(4,"i",10),e.k0s()(),e.j41(5,"h3",11),e.EFF(6,"RabbitMQ"),e.k0s(),e.j41(7,"p")(8,"a",12),e.EFF(9,"RabbitMQ"),e.k0s(),e.EFF(10," est un broker (courtier) de messages l\xe9ger et open-source qui prend en charge de nombreux protocoles de messagerie. Il peut \xeatre d\xe9ploy\xe9 dans des configurations distribu\xe9es et f\xe9d\xe9r\xe9es pour r\xe9pondre aux exigences de haute disponibilit\xe9. En outre, il s'agit du courtier de messages le plus largement d\xe9ploy\xe9, utilis\xe9 dans le monde entier par de petites startups et de grandes entreprises."),e.k0s(),e.j41(11,"h4",13)(12,"span"),e.EFF(13,"Installation"),e.k0s()(),e.j41(14,"p"),e.EFF(15,"Pour commencer \xe0 construire des microservices bas\xe9s sur RabbitMQ, il faut d'abord installer les packages n\xe9cessaires :"),e.k0s(),e.j41(16,"pre")(17,"code",14),e.EFF(18,"\n$ npm i --save amqplib amqp-connection-manager\n"),e.k0s()(),e.j41(19,"h4",15)(20,"span"),e.EFF(21,"Vue d'ensemble"),e.k0s()(),e.j41(22,"p"),e.EFF(23,"Pour utiliser le transporteur RabbitMQ, passez l'objet d'options suivant \xe0 la m\xe9thode "),e.j41(24,"code"),e.EFF(25,"createMicroservice()"),e.k0s(),e.EFF(26," :"),e.k0s(),e.j41(27,"app-copy-button",16)(28,"span",17),e.EFF(29),e.nI1(30,"extension"),e.nrm(31,"app-tabs",null,1),e.k0s(),e.j41(33,"pre")(34,"code",18),e.EFF(35,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.RMQ,\n  options: {\n    urls: ['amqp://localhost:5672'],\n    queue: 'cats_queue',\n    queueOptions: {\n      durable: false\n    },\n  },\n});\n"),e.k0s()(),e.j41(36,"pre")(37,"code",18),e.EFF(38,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.RMQ,\n  options: {\n    urls: ['amqp://localhost:5672'],\n    queue: 'cats_queue',\n    queueOptions: {\n      durable: false\n    },\n  },\n});\n"),e.k0s()()(),e.j41(39,"blockquote",19)(40,"strong"),e.EFF(41,"Astuce"),e.k0s(),e.EFF(42," L'enum "),e.j41(43,"code"),e.EFF(44,"Transport"),e.k0s(),e.EFF(45," est import\xe9 du package "),e.j41(46,"code"),e.EFF(47,"@nestjs/microservices"),e.k0s(),e.EFF(48,".\n"),e.k0s(),e.j41(49,"h4",20)(50,"span"),e.EFF(51,"Options"),e.k0s()(),e.j41(52,"p"),e.EFF(53,"La propri\xe9t\xe9 "),e.j41(54,"code"),e.EFF(55,"options"),e.k0s(),e.EFF(56," est sp\xe9cifique au transporteur choisi. Le transporteur "),e.j41(57,"strong"),e.EFF(58,"RabbitMQ"),e.k0s(),e.EFF(59," expose les propri\xe9t\xe9s d\xe9crites ci-dessous."),e.k0s(),e.j41(60,"table")(61,"tr")(62,"td")(63,"code"),e.EFF(64,"urls"),e.k0s()(),e.j41(65,"td"),e.EFF(66,"Urls de connexion"),e.k0s()(),e.j41(67,"tr")(68,"td")(69,"code"),e.EFF(70,"queue"),e.k0s()(),e.j41(71,"td"),e.EFF(72,"Nom de la file d'attente que votre serveur \xe9coutera"),e.k0s()(),e.j41(73,"tr")(74,"td")(75,"code"),e.EFF(76,"prefetchCount"),e.k0s()(),e.j41(77,"td"),e.EFF(78,"D\xe9finit le nombre de pr\xe9chargement pour le canal"),e.k0s()(),e.j41(79,"tr")(80,"td")(81,"code"),e.EFF(82,"isGlobalPrefetchCount"),e.k0s()(),e.j41(83,"td"),e.EFF(84,"Activation du pr\xe9chargement par canal"),e.k0s()(),e.j41(85,"tr")(86,"td")(87,"code"),e.EFF(88,"noAck"),e.k0s()(),e.j41(89,"td"),e.EFF(90,"Si "),e.j41(91,"code"),e.EFF(92,"false"),e.k0s(),e.EFF(93,", mode d'accus\xe9 de r\xe9ception manuel activ\xe9"),e.k0s()(),e.j41(94,"tr")(95,"td")(96,"code"),e.EFF(97,"consumerTag"),e.k0s()(),e.j41(98,"td"),e.EFF(99,"Identifiant de Consumer Tag (en lire plus "),e.j41(100,"a",21),e.EFF(101,"ici"),e.k0s(),e.EFF(102,")"),e.k0s()(),e.j41(103,"tr")(104,"td")(105,"code"),e.EFF(106,"queueOptions"),e.k0s()(),e.j41(107,"td"),e.EFF(108,"Options suppl\xe9mentaires de file d'attente (en lire plus "),e.j41(109,"a",22),e.EFF(110,"ici"),e.k0s(),e.EFF(111,")"),e.k0s()(),e.j41(112,"tr")(113,"td")(114,"code"),e.EFF(115,"socketOptions"),e.k0s()(),e.j41(116,"td"),e.EFF(117,"Options suppl\xe9mentaires de socket (en lire plus "),e.j41(118,"a",23),e.EFF(119,"ici"),e.k0s(),e.EFF(120,")"),e.k0s()(),e.j41(121,"tr")(122,"td")(123,"code"),e.EFF(124,"headers"),e.k0s()(),e.j41(125,"td"),e.EFF(126,"En-t\xeates \xe0 envoyer avec chaque message"),e.k0s()()(),e.j41(127,"h4",24)(128,"span"),e.EFF(129,"Client"),e.k0s()(),e.j41(130,"p"),e.EFF(131,"Comme d'autres transporteurs de microservices, vous avez "),e.j41(132,"a",25),e.EFF(133,"plusieurs options"),e.k0s(),e.EFF(134," pour cr\xe9er une instance RabbitMQ "),e.j41(135,"code"),e.EFF(136,"ClientProxy"),e.k0s(),e.EFF(137,"."),e.k0s(),e.j41(138,"p"),e.EFF(139,"Une m\xe9thode pour cr\xe9er une instance est d'utiliser le "),e.j41(140,"code"),e.EFF(141,"ClientsModule"),e.k0s(),e.EFF(142,". Pour cr\xe9er une instance de client avec le "),e.j41(143,"code"),e.EFF(144,"ClientsModule"),e.k0s(),e.EFF(145,", importez-le et utilisez la m\xe9thode "),e.j41(146,"code"),e.EFF(147,"register()"),e.k0s(),e.EFF(148," pour passer un objet options avec les m\xeames propri\xe9t\xe9s que celles montr\xe9es ci-dessus dans la m\xe9thode "),e.j41(149,"code"),e.EFF(150,"createMicroservice()"),e.k0s(),e.EFF(151,", ainsi qu'une propri\xe9t\xe9 "),e.j41(152,"code"),e.EFF(153,"name"),e.k0s(),e.EFF(154," \xe0 utiliser comme jeton d'injection. Lisez en plus \xe0 propos de "),e.j41(155,"code"),e.EFF(156,"ClientsModule"),e.k0s(),e.j41(157,"a",25),e.EFF(158,"ici"),e.k0s(),e.EFF(159,"."),e.k0s(),e.j41(160,"app-copy-button")(161,"pre")(162,"code",18),e.EFF(163,"\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'MATH_SERVICE',\n        transport: Transport.RMQ,\n        options: {\n          urls: ['amqp://localhost:5672'],\n          queue: 'cats_queue',\n          queueOptions: {\n            durable: false\n          },\n        },\n      },\n    ]),\n  ]\n  ...\n})\n"),e.k0s()()(),e.j41(164,"p"),e.EFF(165,"D'autres options pour cr\xe9er un client (soit "),e.j41(166,"code"),e.EFF(167,"ClientProxyFactory"),e.k0s(),e.EFF(168," ou "),e.j41(169,"code"),e.EFF(170,"@Client()"),e.k0s(),e.EFF(171,") peuvent \xe9galement \xeatre utilis\xe9es. Vous pouvez en prendre connaissance "),e.j41(172,"a",25),e.EFF(173,"ici"),e.k0s(),e.EFF(174,"."),e.k0s(),e.j41(175,"h4",26)(176,"span"),e.EFF(177,"Contexte"),e.k0s()(),e.j41(178,"p"),e.EFF(179,"Dans des sc\xe9narios plus sophistiqu\xe9s, vous pouvez vouloir acc\xe9der \xe0 plus d'informations sur la requ\xeate entrante. Lorsque vous utilisez le transporteur RabbitMQ, vous pouvez acc\xe9der \xe0 l'objet "),e.j41(180,"code"),e.EFF(181,"RmqContext"),e.k0s(),e.EFF(182,"."),e.k0s(),e.j41(183,"app-copy-button",16)(184,"span",17),e.nrm(185,"app-tabs",null,2),e.k0s(),e.j41(187,"pre")(188,"code",18),e.EFF(189,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: RmqContext) {\n  console.log(`Pattern: ${context.getPattern()}`);\n}\n"),e.k0s()(),e.j41(190,"pre")(191,"code",18),e.EFF(192,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  console.log(`Pattern: ${context.getPattern()}`);\n}\n"),e.k0s()()(),e.j41(193,"blockquote",19)(194,"strong"),e.EFF(195,"Astuce"),e.k0s(),e.j41(196,"code"),e.EFF(197,"@Payload()"),e.k0s(),e.EFF(198,", "),e.j41(199,"code"),e.EFF(200,"@Ctx()"),e.k0s(),e.EFF(201," et "),e.j41(202,"code"),e.EFF(203,"RmqContext"),e.k0s(),e.EFF(204," sont import\xe9s du package "),e.j41(205,"code"),e.EFF(206,"@nestjs/microservices"),e.k0s(),e.EFF(207,".\n"),e.k0s(),e.j41(208,"p"),e.EFF(209,"Pour acc\xe9der au message RabbitMQ original (avec les "),e.j41(210,"code"),e.EFF(211,"properties"),e.k0s(),e.EFF(212,", "),e.j41(213,"code"),e.EFF(214,"fields"),e.k0s(),e.EFF(215," et "),e.j41(216,"code"),e.EFF(217,"content"),e.k0s(),e.EFF(218,"), utilisez la m\xe9thode "),e.j41(219,"code"),e.EFF(220,"getMessage()"),e.k0s(),e.EFF(221," de l'objet "),e.j41(222,"code"),e.EFF(223,"RmqContext"),e.k0s(),e.EFF(224,", comme suit :"),e.k0s(),e.j41(225,"app-copy-button",16)(226,"span",17),e.nrm(227,"app-tabs",null,3),e.k0s(),e.j41(229,"pre")(230,"code",18),e.EFF(231,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: RmqContext) {\n  console.log(context.getMessage());\n}\n"),e.k0s()(),e.j41(232,"pre")(233,"code",18),e.EFF(234,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  console.log(context.getMessage());\n}\n"),e.k0s()()(),e.j41(235,"p"),e.EFF(236,"Pour r\xe9cup\xe9rer une r\xe9f\xe9rence au "),e.j41(237,"a",27),e.EFF(238,"channel"),e.k0s(),e.EFF(239," RabbitMQ, utilisez la m\xe9thode "),e.j41(240,"code"),e.EFF(241,"getChannelRef"),e.k0s(),e.EFF(242," de l'objet "),e.j41(243,"code"),e.EFF(244,"RmqContext"),e.k0s(),e.EFF(245,", comme suit :"),e.k0s(),e.j41(246,"app-copy-button",16)(247,"span",17),e.nrm(248,"app-tabs",null,4),e.k0s(),e.j41(250,"pre")(251,"code",18),e.EFF(252,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: RmqContext) {\n  console.log(context.getChannelRef());\n}\n"),e.k0s()(),e.j41(253,"pre")(254,"code",18),e.EFF(255,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  console.log(context.getChannelRef());\n}\n"),e.k0s()()(),e.j41(256,"h4",28)(257,"span"),e.EFF(258,"Accus\xe9 de r\xe9ception des messages"),e.k0s()(),e.j41(259,"p"),e.EFF(260,"Pour s'assurer qu'un message n'est jamais perdu, RabbitMQ supporte les "),e.j41(261,"a",29),e.EFF(262,"accus\xe9s de r\xe9ception de message"),e.k0s(),e.EFF(263,". Un accus\xe9 de r\xe9ception est renvoy\xe9 par le consommateur pour indiquer \xe0 RabbitMQ qu'un message particulier a \xe9t\xe9 re\xe7u, trait\xe9 et que RabbitMQ est libre de le supprimer. Si un consommateur meurt (son canal est ferm\xe9, sa connexion est ferm\xe9e ou la connexion TCP est perdue) sans avoir envoy\xe9 d'ack, RabbitMQ comprendra qu'un message n'a pas \xe9t\xe9 enti\xe8rement trait\xe9 et le remettra en file d'attente."),e.k0s(),e.j41(264,"p"),e.EFF(265,"Pour activer le mode d'acquittement manuel, fixez la propri\xe9t\xe9 "),e.j41(266,"code"),e.EFF(267,"noAck"),e.k0s(),e.EFF(268," \xe0 "),e.j41(269,"code"),e.EFF(270,"false"),e.k0s(),e.EFF(271," :"),e.k0s(),e.j41(272,"app-copy-button")(273,"pre")(274,"code",18),e.EFF(275,"\noptions: {\n  urls: ['amqp://localhost:5672'],\n  queue: 'cats_queue',\n  noAck: false,\n  queueOptions: {\n    durable: false\n  },\n},\n"),e.k0s()()(),e.j41(276,"p"),e.EFF(277,"Lorsque les accus\xe9s de r\xe9ception manuels sont activ\xe9s, le travailleur doit envoyer un accus\xe9 de r\xe9ception appropri\xe9 pour signaler qu'il a termin\xe9 sa t\xe2che."),e.k0s(),e.j41(278,"app-copy-button",16)(279,"span",17),e.nrm(280,"app-tabs",null,5),e.k0s(),e.j41(282,"pre")(283,"code",18),e.EFF(284,"\n@MessagePattern('notifications')\ngetNotifications(@Payload() data: number[], @Ctx() context: RmqContext) {\n  const channel = context.getChannelRef();\n  const originalMsg = context.getMessage();\n\n  channel.ack(originalMsg);\n}\n"),e.k0s()(),e.j41(285,"pre")(286,"code",18),e.EFF(287,"\n@Bind(Payload(), Ctx())\n@MessagePattern('notifications')\ngetNotifications(data, context) {\n  const channel = context.getChannelRef();\n  const originalMsg = context.getMessage();\n\n  channel.ack(originalMsg);\n}\n"),e.k0s()()(),e.j41(288,"h4",30)(289,"span"),e.EFF(290,"Constructeurs d'enregistrements"),e.k0s()(),e.j41(291,"p"),e.EFF(292,"Pour configurer les options des messages, vous pouvez utiliser la classe "),e.j41(293,"code"),e.EFF(294,"RmqRecordBuilder"),e.k0s(),e.EFF(295," (note : ceci est \xe9galement possible pour les flux bas\xe9s sur les \xe9v\xe9nements). Par exemple, pour d\xe9finir les propri\xe9t\xe9s "),e.j41(296,"code"),e.EFF(297,"headers"),e.k0s(),e.EFF(298," et "),e.j41(299,"code"),e.EFF(300,"priority"),e.k0s(),e.EFF(301,", utilisez la m\xe9thode "),e.j41(302,"code"),e.EFF(303,"setOptions"),e.k0s(),e.EFF(304,", comme suit :"),e.k0s(),e.j41(305,"app-copy-button")(306,"pre")(307,"code",18),e.EFF(308,"\nconst message = ':cat:';\nconst record = new RmqRecordBuilder(message)\n  .setOptions({\n    headers: {\n      ['x-version']: '1.0.0',\n    },\n    priority: 3,\n  })\n  .build();\n\nthis.client.send('replace-emoji', record).subscribe(...);\n"),e.k0s()()(),e.j41(309,"blockquote",19)(310,"strong"),e.EFF(311,"Astuce"),e.k0s(),e.EFF(312," La classe "),e.j41(313,"code"),e.EFF(314,"RmqRecordBuilder"),e.k0s(),e.EFF(315," est export\xe9e depuis le package "),e.j41(316,"code"),e.EFF(317,"@nestjs/microservices"),e.k0s(),e.EFF(318,".\n"),e.k0s(),e.j41(319,"p"),e.EFF(320,"Vous pouvez \xe9galement lire ces valeurs c\xf4t\xe9 serveur, en acc\xe9dant au "),e.j41(321,"code"),e.EFF(322,"RmqContext"),e.k0s(),e.EFF(323,", comme suit :"),e.k0s(),e.j41(324,"app-copy-button",16)(325,"span",17),e.nrm(326,"app-tabs",null,6),e.k0s(),e.j41(328,"pre")(329,"code",18),e.EFF(330,"\n@MessagePattern('replace-emoji')\nreplaceEmoji(@Payload() data: string, @Ctx() context: RmqContext): string {\n  const { properties: { headers } } = context.getMessage();\n  return headers['x-version'] === '1.0.0' ? '\u{1f431}' : '\u{1f408}';\n}\n"),e.k0s()(),e.j41(331,"pre")(332,"code",18),e.EFF(333,"\n@Bind(Payload(), Ctx())\n@MessagePattern('replace-emoji')\nreplaceEmoji(data, context) {\n  const { properties: { headers } } = context.getMessage();\n  return headers['x-version'] === '1.0.0' ? '\u{1f431}' : '\u{1f408}';\n}\n"),e.k0s()()()()),2&t){const o=e.sdS(32),a=e.sdS(186),u=e.sdS(228),c=e.sdS(249),i=e.sdS(281),E=e.sdS(327);e.R7$(29),e.SpI(" ",e.i5U(30,25,"main",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(151),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(39),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive),e.R7$(18),e.AVh("hide",c.isJsActive),e.R7$(3),e.AVh("hide",!c.isJsActive),e.R7$(29),e.AVh("hide",i.isJsActive),e.R7$(3),e.AVh("hide",!i.isJsActive),e.R7$(43),e.AVh("hide",E.isJsActive),e.R7$(3),e.AVh("hide",!E.isJsActive)}},dependencies:[F.O,m.a,l.z,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"RabbitMQ - Microservices"}},{path:"kafka",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-kafka"]],features:[e.Vt3],decls:680,vars:60,consts:[["contentReference",""],["app659b1f5240de29c9e7dc5597d73e132fa926b95e",""],["app50e681857650d6e6b19f33068b06cbaa296de3d1",""],["appf2b05adbaea963d0468f88961319c239c4f005a3",""],["app2443fb221b31a209a525fc591312cb0837b51d31",""],["app9e28f7485f3e9d21a1c43c0f5c9ec06480100122",""],["app0c2d5a67c208971d6b5c3ea82cd511206851480e",""],["app4aa16d7d1fd365525dedaac05682728ad8450a37",""],["appb942d95daeff1d88b3e4b9a30c4fae9b3a7c01de",""],["appaca4041f15e84ea6908e96ffc9ea240f88cb3997",""],["app49a61457725f4140f69732f8e977d7e71fd5d9df",""],["app722b480562a8c9bbe77b4c6e38ad3d56174b5f39",""],["app165531d410286af09c4b2d7e80c899a5681201e7",""],["appfc0437eb3a22e7efa85968093aa3da3bcacd1d78",""],["appcb719163678ef3af82b3ee44103494218c40c8fc",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/kafka.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","kafka"],["rel","nofollow","target","_blank","href","https://kafka.apache.org/"],["appAnchor","","id","installation"],[1,"language-bash"],["appAnchor","","id","vue-densemble"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"],[1,"info"],["appAnchor","","id","options"],["href","https://kafka.js.org/docs/configuration","rel","nofollow","target","blank"],["href","https://kafka.js.org/docs/consuming#a-name-options-a-options","rel","nofollow","target","blank"],["href","https://kafka.js.org/docs/consuming","rel","nofollow","target","blank"],["href","https://kafka.js.org/docs/consuming#frombeginning","rel","nofollow","target","blank"],["href","https://kafka.js.org/docs/producing#options","rel","nofollow","target","blank"],["appAnchor","","id","client"],["href","/microservices/basics#client"],["appAnchor","","id","mod\xe8le-de-message"],["rel","nofollow","target","_blank","href","https://www.enterpriseintegrationpatterns.com/patterns/messaging/ReturnAddress.html"],["rel","nofollow","target","_blank","href","https://www.enterpriseintegrationpatterns.com/patterns/messaging/CorrelationIdentifier.html"],["appAnchor","","id","abonnement-aux-r\xe9ponses-aux-messages"],[1,"warning"],["href","/microservices/basics#request-response"],["href","/microservices/basics#event-based"],["appAnchor","","id","messages-entrants"],["appAnchor","","id","messages-sortants"],["rel","nofollow","target","_blank","href","https://docs.confluent.io/current/ksql/docs/developer-guide/partition-data.html#co-partitioning-requirements"],["appAnchor","","id","bas\xe9-sur-les-\xe9v\xe9nements"],["href","/microservices/basics#messagerie-%C3%A9v%C3%A9nementielle"],["href","/microservices/basics#publication-d%C3%A9v%C3%A9nements"],["appAnchor","","id","contexte"],["appAnchor","","id","conventions-de-nommage"],["appAnchor","","id","exceptions-r\xe9cup\xe9rables"],["appAnchor","","id","validation-des-d\xe9calages"],["rel","nofollow","target","_blank","href","https://kafka.js.org/docs/consuming#autocommit"],["rel","nofollow","target","_blank","href","https://kafka.js.org/docs/consuming#manual-committing"]],template:function(t,r){if(1&t&&(e.j41(0,"div",15,0)(2,"div",16)(3,"a",17),e.nrm(4,"i",18),e.k0s()(),e.j41(5,"h3",19),e.EFF(6,"Kafka"),e.k0s(),e.j41(7,"p")(8,"a",20),e.EFF(9,"Kafka"),e.k0s(),e.EFF(10," est une plateforme de diffusion en continu distribu\xe9e, \xe0 code source ouvert, qui pr\xe9sente trois caract\xe9ristiques essentielles :"),e.k0s(),e.j41(11,"ul")(12,"li"),e.EFF(13,"Publier des flux d'enregistrements et s'y abonner, \xe0 l'instar d'une file d'attente de messages ou d'un syst\xe8me de messagerie d'entreprise."),e.k0s(),e.j41(14,"li"),e.EFF(15,"Stocker les flux d'enregistrements de mani\xe8re durable et tol\xe9rante aux pannes."),e.k0s(),e.j41(16,"li"),e.EFF(17,"Traiter les flux d'enregistrements au fur et \xe0 mesure qu'ils se produisent."),e.k0s()(),e.j41(18,"p"),e.EFF(19,"Le projet Kafka vise \xe0 fournir une plateforme unifi\xe9e, \xe0 haut d\xe9bit et \xe0 faible latence pour traiter les flux de donn\xe9es en temps r\xe9el. Il s'int\xe8gre tr\xe8s bien avec Apache Storm et Spark pour l'analyse des donn\xe9es en temps r\xe9el."),e.k0s(),e.j41(20,"h4",21)(21,"span"),e.EFF(22,"Installation"),e.k0s()(),e.j41(23,"p"),e.EFF(24,"Pour commencer \xe0 construire des microservices bas\xe9s sur Kafka, installez d'abord le package requis :"),e.k0s(),e.j41(25,"pre")(26,"code",22),e.EFF(27,"\n$ npm i --save kafkajs\n"),e.k0s()(),e.j41(28,"h4",23)(29,"span"),e.EFF(30,"Vue d'ensemble"),e.k0s()(),e.j41(31,"p"),e.EFF(32,"Comme pour les autres impl\xe9mentations de la couche de transport des microservices Nest, vous s\xe9lectionnez le m\xe9canisme de transport Kafka en utilisant la propri\xe9t\xe9 "),e.j41(33,"code"),e.EFF(34,"transport"),e.k0s(),e.EFF(35," de l'objet options pass\xe9 \xe0 la m\xe9thode "),e.j41(36,"code"),e.EFF(37,"createMicroservice()"),e.k0s(),e.EFF(38,", ainsi qu'une propri\xe9t\xe9 optionnelle "),e.j41(39,"code"),e.EFF(40,"options"),e.k0s(),e.EFF(41,", comme indiqu\xe9 ci-dessous :"),e.k0s(),e.j41(42,"app-copy-button",24)(43,"span",25),e.EFF(44),e.nI1(45,"extension"),e.nrm(46,"app-tabs",null,1),e.k0s(),e.j41(48,"pre")(49,"code",26),e.EFF(50,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.KAFKA,\n  options: {\n    client: {\n      brokers: ['localhost:9092'],\n    }\n  }\n});\n"),e.k0s()(),e.j41(51,"pre")(52,"code",26),e.EFF(53,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.KAFKA,\n  options: {\n    client: {\n      brokers: ['localhost:9092'],\n    }\n  }\n});\n"),e.k0s()()(),e.j41(54,"blockquote",27)(55,"strong"),e.EFF(56,"Astuce"),e.k0s(),e.EFF(57," L'enum "),e.j41(58,"code"),e.EFF(59,"Transport"),e.k0s(),e.EFF(60," est import\xe9 du package "),e.j41(61,"code"),e.EFF(62,"@nestjs/microservices"),e.k0s(),e.EFF(63,".\n"),e.k0s(),e.j41(64,"h4",28)(65,"span"),e.EFF(66,"Options"),e.k0s()(),e.j41(67,"p"),e.EFF(68,"La propri\xe9t\xe9 "),e.j41(69,"code"),e.EFF(70,"options"),e.k0s(),e.EFF(71," est sp\xe9cifique au transporteur choisi. Le transporteur "),e.j41(72,"strong"),e.EFF(73,"Kafka"),e.k0s(),e.EFF(74," expose les propri\xe9t\xe9s d\xe9crites ci-dessous."),e.k0s(),e.j41(75,"table")(76,"tr")(77,"td")(78,"code"),e.EFF(79,"client"),e.k0s()(),e.j41(80,"td"),e.EFF(81,"Options de configuration du client (en lire plus "),e.j41(82,"a",29),e.EFF(83,"ici"),e.k0s(),e.EFF(84,")"),e.k0s()(),e.j41(85,"tr")(86,"td")(87,"code"),e.EFF(88,"consumer"),e.k0s()(),e.j41(89,"td"),e.EFF(90,"Options de configuration du consommateur (en lire plus "),e.j41(91,"a",30),e.EFF(92,"ici"),e.k0s(),e.EFF(93,")"),e.k0s()(),e.j41(94,"tr")(95,"td")(96,"code"),e.EFF(97,"run"),e.k0s()(),e.j41(98,"td"),e.EFF(99,"Options de configuration d'ex\xe9cution (en lire plus "),e.j41(100,"a",31),e.EFF(101,"ici"),e.k0s(),e.EFF(102,")"),e.k0s()(),e.j41(103,"tr")(104,"td")(105,"code"),e.EFF(106,"subscribe"),e.k0s()(),e.j41(107,"td"),e.EFF(108,"Options de configuration des abonnements (en lire plus "),e.j41(109,"a",32),e.EFF(110,"ici"),e.k0s(),e.EFF(111,")"),e.k0s()(),e.j41(112,"tr")(113,"td")(114,"code"),e.EFF(115,"producer"),e.k0s()(),e.j41(116,"td"),e.EFF(117,"Options de configuration des producteurs (en lire plus "),e.j41(118,"a",33),e.EFF(119,"ici"),e.k0s(),e.EFF(120,")"),e.k0s()(),e.j41(121,"tr")(122,"td")(123,"code"),e.EFF(124,"send"),e.k0s()(),e.j41(125,"td"),e.EFF(126,"Options de configuration de l'envoi (en lire plus "),e.j41(127,"a",33),e.EFF(128,"ici"),e.k0s(),e.EFF(129,")"),e.k0s()(),e.j41(130,"tr")(131,"td")(132,"code"),e.EFF(133,"producerOnlyMode"),e.k0s()(),e.j41(134,"td"),e.EFF(135,"Indicateur de fonctionnalit\xe9 permettant d'ignorer l'enregistrement d'un groupe de consommateurs et d'agir uniquement en tant que producteur ("),e.j41(136,"code"),e.EFF(137,"boolean"),e.k0s(),e.EFF(138,")"),e.k0s()(),e.j41(139,"tr")(140,"td")(141,"code"),e.EFF(142,"postfixId"),e.k0s()(),e.j41(143,"td"),e.EFF(144,"Modifier le suffixe de la valeur clientId ("),e.j41(145,"code"),e.EFF(146,"string"),e.k0s(),e.EFF(147,")"),e.k0s()()(),e.j41(148,"h4",34)(149,"span"),e.EFF(150,"Client"),e.k0s()(),e.j41(151,"p"),e.EFF(152,"Il y a une petite diff\xe9rence entre Kafka et les autres transporteurs de microservices. Au lieu de la classe "),e.j41(153,"code"),e.EFF(154,"ClientProxy"),e.k0s(),e.EFF(155,", nous utilisons la classe "),e.j41(156,"code"),e.EFF(157,"ClientKafka"),e.k0s(),e.EFF(158,"."),e.k0s(),e.j41(159,"p"),e.EFF(160,"Comme d'autres transporteurs de microservices, vous avez "),e.j41(161,"a",35),e.EFF(162,"plusieurs options"),e.k0s(),e.EFF(163," pour cr\xe9er une instance "),e.j41(164,"code"),e.EFF(165,"ClientKafka"),e.k0s(),e.EFF(166,"."),e.k0s(),e.j41(167,"p"),e.EFF(168,"Une m\xe9thode pour cr\xe9er une instance est d'utiliser le "),e.j41(169,"code"),e.EFF(170,"ClientsModule"),e.k0s(),e.EFF(171,". Pour cr\xe9er une instance de client avec le "),e.j41(172,"code"),e.EFF(173,"ClientsModule"),e.k0s(),e.EFF(174,", importez-le et utilisez la m\xe9thode "),e.j41(175,"code"),e.EFF(176,"register()"),e.k0s(),e.EFF(177," pour passer un objet options avec les m\xeames propri\xe9t\xe9s que celles montr\xe9es ci-dessus dans la m\xe9thode "),e.j41(178,"code"),e.EFF(179,"createMicroservice()"),e.k0s(),e.EFF(180,", ainsi qu'une propri\xe9t\xe9 "),e.j41(181,"code"),e.EFF(182,"name"),e.k0s(),e.EFF(183," \xe0 utiliser comme jeton d'injection. Lisez-en plus \xe0 propos du "),e.j41(184,"code"),e.EFF(185,"ClientsModule"),e.k0s(),e.j41(186,"a",35),e.EFF(187,"ici"),e.k0s(),e.EFF(188,"."),e.k0s(),e.j41(189,"app-copy-button")(190,"pre")(191,"code",26),e.EFF(192,"\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'HERO_SERVICE',\n        transport: Transport.KAFKA,\n        options: {\n          client: {\n            clientId: 'hero',\n            brokers: ['localhost:9092'],\n          },\n          consumer: {\n            groupId: 'hero-consumer'\n          }\n        }\n      },\n    ]),\n  ]\n  ...\n})\n"),e.k0s()()(),e.j41(193,"p"),e.EFF(194,"D'autres options pour cr\xe9er un client (soit "),e.j41(195,"code"),e.EFF(196,"ClientProxyFactory"),e.k0s(),e.EFF(197," ou "),e.j41(198,"code"),e.EFF(199,"@Client()"),e.k0s(),e.EFF(200,") peuvent \xe9galement \xeatre utilis\xe9es. Vous pouvez lire \xe0 leur sujet "),e.j41(201,"a",35),e.EFF(202,"ici"),e.k0s(),e.EFF(203,"."),e.k0s(),e.j41(204,"p"),e.EFF(205,"Utilisez le d\xe9corateur "),e.j41(206,"code"),e.EFF(207,"@Client()"),e.k0s(),e.EFF(208," comme suit :"),e.k0s(),e.j41(209,"app-copy-button")(210,"pre")(211,"code",26),e.EFF(212,"\n@Client({\n  transport: Transport.KAFKA,\n  options: {\n    client: {\n      clientId: 'hero',\n      brokers: ['localhost:9092'],\n    },\n    consumer: {\n      groupId: 'hero-consumer'\n    }\n  }\n})\nclient: ClientKafka;\n"),e.k0s()()(),e.j41(213,"h4",36)(214,"span"),e.EFF(215,"Mod\xe8le de message"),e.k0s()(),e.j41(216,"p"),e.EFF(217,"Le mod\xe8le de message de microservice Kafka utilise deux sujets pour les canaux de demande et de r\xe9ponse. Le mod\xe8le "),e.j41(218,"code"),e.EFF(219,"ClientKafka#send()"),e.k0s(),e.EFF(220," envoie des messages avec une "),e.j41(221,"a",37),e.EFF(222,"adresse de retour"),e.k0s(),e.EFF(223," en associant un "),e.j41(224,"a",38),e.EFF(225,"identifiant de corr\xe9lation"),e.k0s(),e.EFF(226,", un sujet de r\xe9ponse et une partition de r\xe9ponse au message de demande. Cela n\xe9cessite que l'instance "),e.j41(227,"code"),e.EFF(228,"ClientKafka"),e.k0s(),e.EFF(229," soit abonn\xe9e au sujet de r\xe9ponse et assign\xe9e \xe0 au moins une partition avant d'envoyer un message."),e.k0s(),e.j41(230,"p"),e.EFF(231,"Par la suite, vous devez avoir au moins une partition de sujet de r\xe9ponse pour chaque application Nest en cours d'ex\xe9cution. Par exemple, si vous ex\xe9cutez 4 applications Nest mais que le sujet de r\xe9ponse n'a que 3 partitions, alors une des applications Nest \xe9chouera lorsqu'elle essaiera d'envoyer un message."),e.k0s(),e.j41(232,"p"),e.EFF(233,"Lorsque de nouvelles instances "),e.j41(234,"code"),e.EFF(235,"ClientKafka"),e.k0s(),e.EFF(236," sont lanc\xe9es, elles rejoignent le groupe de consommateurs et s'abonnent \xe0 leurs sujets respectifs. Ce processus d\xe9clenche un r\xe9\xe9quilibrage des partitions de sujets attribu\xe9es aux consommateurs du groupe de consommateurs."),e.k0s(),e.j41(237,"p"),e.EFF(238,"Normalement, les partitions th\xe9matiques sont attribu\xe9es \xe0 l'aide du syst\xe8me de partitionnement \xe0 la ronde, qui attribue les partitions th\xe9matiques \xe0 une collection de consommateurs tri\xe9s par noms de consommateurs qui sont d\xe9finis de mani\xe8re al\xe9atoire lors du lancement de l'application. Toutefois, lorsqu'un nouveau consommateur rejoint le groupe de consommateurs, il peut \xeatre positionn\xe9 n'importe o\xf9 dans la collection de consommateurs. Il s'ensuit que des consommateurs pr\xe9existants peuvent se voir attribuer des partitions diff\xe9rentes lorsque le consommateur pr\xe9existant est plac\xe9 apr\xe8s le nouveau consommateur. Par cons\xe9quent, les consommateurs auxquels sont attribu\xe9es des partitions diff\xe9rentes perdront les messages de r\xe9ponse des requ\xeates envoy\xe9es avant le r\xe9\xe9quilibrage."),e.k0s(),e.j41(239,"p"),e.EFF(240,"Pour \xe9viter que les consommateurs "),e.j41(241,"code"),e.EFF(242,"ClientKafka"),e.k0s(),e.EFF(243," ne perdent des messages de r\xe9ponse, un partitionneur personnalis\xe9 int\xe9gr\xe9 sp\xe9cifique \xe0 Nest est utilis\xe9. Ce partitionneur personnalis\xe9 attribue des partitions \xe0 une collection de consommateurs tri\xe9s par des horodatages \xe0 haute r\xe9solution ("),e.j41(244,"code"),e.EFF(245,"process.hrtime()"),e.k0s(),e.EFF(246,") qui sont d\xe9finis au lancement de l'application."),e.k0s(),e.j41(247,"h4",39)(248,"span"),e.EFF(249,"Abonnement aux r\xe9ponses aux messages"),e.k0s()(),e.j41(250,"blockquote",40)(251,"strong"),e.EFF(252,"Note"),e.k0s(),e.EFF(253," Cette section n'est pertinente que si vous utilisez le style de message "),e.j41(254,"a",41),e.EFF(255,"requ\xeate-r\xe9ponse"),e.k0s(),e.EFF(256," (avec le d\xe9corateur "),e.j41(257,"code"),e.EFF(258,"@MessagePattern"),e.k0s(),e.EFF(259," et la m\xe9thode "),e.j41(260,"code"),e.EFF(261,"ClientKafka#send"),e.k0s(),e.EFF(262,"). L'abonnement au sujet de r\xe9ponse n'est pas n\xe9cessaire pour la communication "),e.j41(263,"a",42),e.EFF(264,"bas\xe9e sur les \xe9v\xe9nements"),e.k0s(),e.EFF(265," (d\xe9corateur "),e.j41(266,"code"),e.EFF(267,"@EventPattern"),e.k0s(),e.EFF(268," et m\xe9thode "),e.j41(269,"code"),e.EFF(270,"@ClientKafka#emit"),e.k0s(),e.EFF(271,").\n"),e.k0s(),e.j41(272,"p"),e.EFF(273,"La classe "),e.j41(274,"code"),e.EFF(275,"ClientKafka"),e.k0s(),e.EFF(276," fournit la m\xe9thode "),e.j41(277,"code"),e.EFF(278,"subscribeToResponseOf()"),e.k0s(),e.EFF(279,". La m\xe9thode "),e.j41(280,"code"),e.EFF(281,"subscribeToResponseOf()"),e.k0s(),e.EFF(282," prend le nom du sujet d'une requ\xeate comme argument et ajoute le nom du sujet de r\xe9ponse d\xe9riv\xe9 \xe0 une collection de sujets de r\xe9ponse. Cette m\xe9thode est n\xe9cessaire lors de l'impl\xe9mentation du mod\xe8le de message."),e.k0s(),e.j41(283,"app-copy-button",24)(284,"span",25),e.EFF(285),e.nI1(286,"extension"),e.nrm(287,"app-tabs",null,2),e.k0s(),e.j41(289,"pre")(290,"code",26),e.EFF(291,"\nonModuleInit() {\n  this.client.subscribeToResponseOf('hero.kill.dragon');\n}\n"),e.k0s()()(),e.j41(292,"p"),e.EFF(293,"Si l'instance "),e.j41(294,"code"),e.EFF(295,"ClientKafka"),e.k0s(),e.EFF(296," est cr\xe9\xe9e de mani\xe8re asynchrone, la m\xe9thode "),e.j41(297,"code"),e.EFF(298,"subscribeToResponseOf()"),e.k0s(),e.EFF(299," doit \xeatre appel\xe9e avant d'appeler la m\xe9thode "),e.j41(300,"code"),e.EFF(301,"connect()"),e.k0s(),e.EFF(302,"."),e.k0s(),e.j41(303,"app-copy-button",24)(304,"span",25),e.EFF(305),e.nI1(306,"extension"),e.nrm(307,"app-tabs",null,3),e.k0s(),e.j41(309,"pre")(310,"code",26),e.EFF(311,"\nasync onModuleInit() {\n  this.client.subscribeToResponseOf('hero.kill.dragon');\n  await this.client.connect();\n}\n"),e.k0s()()(),e.j41(312,"h4",43)(313,"span"),e.EFF(314,"Messages entrants"),e.k0s()(),e.j41(315,"p"),e.EFF(316,"Nest re\xe7oit les messages Kafka entrants sous la forme d'un objet avec les propri\xe9t\xe9s "),e.j41(317,"code"),e.EFF(318,"key"),e.k0s(),e.EFF(319,", "),e.j41(320,"code"),e.EFF(321,"value"),e.k0s(),e.EFF(322," et "),e.j41(323,"code"),e.EFF(324,"headers"),e.k0s(),e.EFF(325," qui ont des valeurs de type "),e.j41(326,"code"),e.EFF(327,"Buffer"),e.k0s(),e.EFF(328,'. Nest analyse ensuite ces valeurs en transformant les tampons en cha\xeenes de caract\xe8res. Si la cha\xeene est "semblable \xe0 un objet", Nest tente d\'analyser la cha\xeene en tant que '),e.j41(329,"code"),e.EFF(330,"JSON"),e.k0s(),e.EFF(331,". La "),e.j41(332,"code"),e.EFF(333,"value"),e.k0s(),e.EFF(334," est alors transmise au gestionnaire qui lui est associ\xe9."),e.k0s(),e.j41(335,"h4",44)(336,"span"),e.EFF(337,"Messages sortants"),e.k0s()(),e.j41(338,"p"),e.EFF(339,"Nest envoie des messages Kafka sortants apr\xe8s un processus de s\xe9rialisation lors de la publication d'\xe9v\xe9nements ou de l'envoi de messages. Cela se produit sur les arguments pass\xe9s aux m\xe9thodes "),e.j41(340,"code"),e.EFF(341,"emit()"),e.k0s(),e.EFF(342," et "),e.j41(343,"code"),e.EFF(344,"send()"),e.k0s(),e.EFF(345," de "),e.j41(346,"code"),e.EFF(347,"ClientKafka"),e.k0s(),e.EFF(348," ou sur les valeurs renvoy\xe9es par une m\xe9thode "),e.j41(349,"code"),e.EFF(350,"@MessagePattern"),e.k0s(),e.EFF(351,'. Cette s\xe9rialisation "stringifie" les objets qui ne sont pas des cha\xeenes ou des tampons en utilisant '),e.j41(352,"code"),e.EFF(353,"JSON.stringify()"),e.k0s(),e.EFF(354," ou la m\xe9thode prototype "),e.j41(355,"code"),e.EFF(356,"toString()"),e.k0s(),e.EFF(357,"."),e.k0s(),e.j41(358,"app-copy-button",24)(359,"span",25),e.EFF(360),e.nI1(361,"extension"),e.nrm(362,"app-tabs",null,4),e.k0s(),e.j41(364,"pre")(365,"code",26),e.EFF(366,"\n@Controller()\nexport class HeroesController {\n  @MessagePattern('hero.kill.dragon')\n  killDragon(@Payload() message: KillDragonMessage): any {\n    const dragonId = message.dragonId;\n    const items = [\n      { id: 1, name: '\xc9p\xe9e mythique' },\n      { id: 2, name: 'Cl\xe9 du donjon' },\n    ];\n    return items;\n  }\n}\n"),e.k0s()()(),e.j41(367,"blockquote",27)(368,"strong"),e.EFF(369,"AStuce"),e.k0s(),e.j41(370,"code"),e.EFF(371,"@Payload()"),e.k0s(),e.EFF(372," est import\xe9 du package "),e.j41(373,"code"),e.EFF(374,"@nestjs/microservices"),e.k0s(),e.EFF(375,".\n"),e.k0s(),e.j41(376,"p"),e.EFF(377,"Les messages sortants peuvent \xe9galement \xeatre cod\xe9s en passant un objet avec les propri\xe9t\xe9s "),e.j41(378,"code"),e.EFF(379,"key"),e.k0s(),e.EFF(380," et "),e.j41(381,"code"),e.EFF(382,"value"),e.k0s(),e.EFF(383,". L'attribution d'une cl\xe9 aux messages est importante pour r\xe9pondre \xe0 "),e.j41(384,"a",45),e.EFF(385,"l'exigence de copartition"),e.k0s(),e.EFF(386,"."),e.k0s(),e.j41(387,"app-copy-button",24)(388,"span",25),e.EFF(389),e.nI1(390,"extension"),e.nrm(391,"app-tabs",null,5),e.k0s(),e.j41(393,"pre")(394,"code",26),e.EFF(395,"\n@Controller()\nexport class HeroesController {\n  @MessagePattern('hero.kill.dragon')\n  killDragon(@Payload() message: KillDragonMessage): any {\n    const realm = 'Nest';\n    const heroId = message.heroId;\n    const dragonId = message.dragonId;\n\n    const items = [\n      { id: 1, name: '\xc9p\xe9e mythique' },\n      { id: 2, name: 'Cl\xe9 du donjon' },\n    ];\n\n    return {\n      headers: {\n        realm\n      },\n      key: heroId,\n      value: items\n    }\n  }\n}\n"),e.k0s()()(),e.j41(396,"p"),e.EFF(397,"De plus, les messages pass\xe9s dans ce format peuvent \xe9galement contenir des en-t\xeates personnalis\xe9s d\xe9finis dans la propri\xe9t\xe9 de hachage "),e.j41(398,"code"),e.EFF(399,"headers"),e.k0s(),e.EFF(400,". Les valeurs de la propri\xe9t\xe9 de hachage des en-t\xeates doivent \xeatre de type "),e.j41(401,"code"),e.EFF(402,"string"),e.k0s(),e.EFF(403," ou de type "),e.j41(404,"code"),e.EFF(405,"Buffer"),e.k0s(),e.EFF(406,"."),e.k0s(),e.j41(407,"app-copy-button",24)(408,"span",25),e.EFF(409),e.nI1(410,"extension"),e.nrm(411,"app-tabs",null,6),e.k0s(),e.j41(413,"pre")(414,"code",26),e.EFF(415,"\n@Controller()\nexport class HeroesController {\n  @MessagePattern('hero.kill.dragon')\n  killDragon(@Payload() message: KillDragonMessage): any {\n    const realm = 'Nest';\n    const heroId = message.heroId;\n    const dragonId = message.dragonId;\n\n    const items = [\n      { id: 1, name: '\xc9p\xe9e mythique' },\n      { id: 2, name: 'Cl\xe9 du donjon' },\n    ];\n\n    return {\n      headers: {\n        kafka_nestRealm: realm\n      },\n      key: heroId,\n      value: items\n    }\n  }\n}\n"),e.k0s()()(),e.j41(416,"h4",46)(417,"span"),e.EFF(418,"Bas\xe9 sur les \xe9v\xe9nements"),e.k0s()(),e.j41(419,"p"),e.EFF(420,"Si la m\xe9thode requ\xeate-r\xe9ponse est id\xe9ale pour l'\xe9change de messages entre services, elle l'est moins lorsque votre style de message est bas\xe9 sur les \xe9v\xe9nements (ce qui est id\xe9al pour Kafka) - lorsque vous souhaitez simplement publier des \xe9v\xe9nements "),e.j41(421,"strong"),e.EFF(422,"sans attendre de r\xe9ponse"),e.k0s(),e.EFF(423,". Dans ce cas, vous ne voulez pas de la surcharge requise par la m\xe9thode requ\xeate-r\xe9ponse pour maintenir deux sujets."),e.k0s(),e.j41(424,"p"),e.EFF(425,"Pour en savoir plus, consultez les deux sections suivantes : "),e.j41(426,"a",47),e.EFF(427,"Vue d'ensemble : bas\xe9e sur les \xe9v\xe9nements"),e.k0s(),e.EFF(428," et "),e.j41(429,"a",48),e.EFF(430,"Vue d'ensemble : publier des \xe9v\xe9nements"),e.k0s(),e.EFF(431,"."),e.k0s(),e.j41(432,"h4",49)(433,"span"),e.EFF(434,"Contexte"),e.k0s()(),e.j41(435,"p"),e.EFF(436,"Dans des sc\xe9narios plus sophistiqu\xe9s, vous pouvez vouloir acc\xe9der \xe0 plus d'informations sur la requ\xeate entrante. Lorsque vous utilisez le transporteur Kafka, vous pouvez acc\xe9der \xe0 l'objet "),e.j41(437,"code"),e.EFF(438,"KafkaContext"),e.k0s(),e.EFF(439,"."),e.k0s(),e.j41(440,"app-copy-button",24)(441,"span",25),e.nrm(442,"app-tabs",null,7),e.k0s(),e.j41(444,"pre")(445,"code",26),e.EFF(446,"\n@MessagePattern('hero.kill.dragon')\nkillDragon(@Payload() message: KillDragonMessage, @Ctx() context: KafkaContext) {\n  console.log(`Topic: ${context.getTopic()}`);\n}\n"),e.k0s()(),e.j41(447,"pre")(448,"code",26),e.EFF(449,"\n@Bind(Payload(), Ctx())\n@MessagePattern('hero.kill.dragon')\nkillDragon(message, context) {\n  console.log(`Topic: ${context.getTopic()}`);\n}\n"),e.k0s()()(),e.j41(450,"blockquote",27)(451,"strong"),e.EFF(452,"Astuce"),e.k0s(),e.j41(453,"code"),e.EFF(454,"@Payload()"),e.k0s(),e.EFF(455,", "),e.j41(456,"code"),e.EFF(457,"@Ctx()"),e.k0s(),e.EFF(458," et "),e.j41(459,"code"),e.EFF(460,"KafkaContext"),e.k0s(),e.EFF(461," sont import\xe9s du package "),e.j41(462,"code"),e.EFF(463,"@nestjs/microservices"),e.k0s(),e.EFF(464,".\n"),e.k0s(),e.j41(465,"p"),e.EFF(466,"Pour acc\xe9der \xe0 l'objet Kafka "),e.j41(467,"code"),e.EFF(468,"IncomingMessage"),e.k0s(),e.EFF(469," original, utilisez la m\xe9thode "),e.j41(470,"code"),e.EFF(471,"getMessage()"),e.k0s(),e.EFF(472," de l'objet "),e.j41(473,"code"),e.EFF(474,"KafkaContext"),e.k0s(),e.EFF(475,", comme suit :"),e.k0s(),e.j41(476,"app-copy-button",24)(477,"span",25),e.nrm(478,"app-tabs",null,8),e.k0s(),e.j41(480,"pre")(481,"code",26),e.EFF(482,"\n@MessagePattern('hero.kill.dragon')\nkillDragon(@Payload() message: KillDragonMessage, @Ctx() context: KafkaContext) {\n  const originalMessage = context.getMessage();\n  const partition = context.getPartition();\n  const { headers, timestamp } = originalMessage;\n}\n"),e.k0s()(),e.j41(483,"pre")(484,"code",26),e.EFF(485,"\n@Bind(Payload(), Ctx())\n@MessagePattern('hero.kill.dragon')\nkillDragon(message, context) {\n  const originalMessage = context.getMessage();\n  const partition = context.getPartition();\n  const { headers, timestamp } = originalMessage;\n}\n"),e.k0s()()(),e.j41(486,"p"),e.EFF(487,"Le "),e.j41(488,"code"),e.EFF(489,"IncomingMessage"),e.k0s(),e.EFF(490," remplit l'interface suivante :"),e.k0s(),e.j41(491,"app-copy-button")(492,"pre")(493,"code",26),e.EFF(494,"\ninterface IncomingMessage {\n  topic: string;\n  partition: number;\n  timestamp: string;\n  size: number;\n  attributes: number;\n  offset: string;\n  key: any;\n  value: any;\n  headers: Record<string, any>;\n}\n"),e.k0s()()(),e.j41(495,"p"),e.EFF(496,"Si votre handler implique un temps de traitement lent pour chaque message re\xe7u, vous devriez envisager d'utiliser le callback "),e.j41(497,"code"),e.EFF(498,"heartbeat"),e.k0s(),e.EFF(499,". Pour r\xe9cup\xe9rer la fonction "),e.j41(500,"code"),e.EFF(501,"heartbeat"),e.k0s(),e.EFF(502,", utilisez la m\xe9thode "),e.j41(503,"code"),e.EFF(504,"getHeartbeat()"),e.k0s(),e.EFF(505," du "),e.j41(506,"code"),e.EFF(507,"KafkaContext"),e.k0s(),e.EFF(508,", comme suit :"),e.k0s(),e.j41(509,"app-copy-button",24)(510,"span",25),e.nrm(511,"app-tabs",null,9),e.k0s(),e.j41(513,"pre")(514,"code",26),e.EFF(515,"\n@MessagePattern('hero.kill.dragon')\nasync killDragon(@Payload() message: KillDragonMessage, @Ctx() context: KafkaContext) {\n  const heartbeat = context.getHeartbeat();\n\n  // Effectuer un traitement lent\n  await doWorkPart1();\n\n  // Envoi d'un heartbeat pour ne pas d\xe9passer le sessionTimeout\n  await heartbeat();\n\n  // Effectuer \xe0 nouveau un traitement lent\n  await doWorkPart2();\n}\n"),e.k0s()()(),e.j41(516,"h4",50)(517,"span"),e.EFF(518,"Conventions de nommage"),e.k0s()(),e.j41(519,"p"),e.EFF(520,"Les composants de microservices Kafka ajoutent une description de leur r\xf4le respectif aux options "),e.j41(521,"code"),e.EFF(522,"client.clientId"),e.k0s(),e.EFF(523," et "),e.j41(524,"code"),e.EFF(525,"consumer.groupId"),e.k0s(),e.EFF(526," pour \xe9viter les collisions entre les composants clients et serveurs des microservices Nest. Par d\xe9faut, les composants "),e.j41(527,"code"),e.EFF(528,"ClientKafka"),e.k0s(),e.EFF(529," ajoutent "),e.j41(530,"code"),e.EFF(531,"-client"),e.k0s(),e.EFF(532," et les composants "),e.j41(533,"code"),e.EFF(534,"ServerKafka"),e.k0s(),e.EFF(535," ajoutent "),e.j41(536,"code"),e.EFF(537,"-server"),e.k0s(),e.EFF(538," \xe0 ces deux options. Notez comment les valeurs fournies ci-dessous sont transform\xe9es de cette mani\xe8re (comme indiqu\xe9 dans les commentaires)."),e.k0s(),e.j41(539,"app-copy-button",24)(540,"span",25),e.EFF(541),e.nI1(542,"extension"),e.nrm(543,"app-tabs",null,10),e.k0s(),e.j41(545,"pre")(546,"code",26),e.EFF(547,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.KAFKA,\n  options: {\n    client: {\n      clientId: 'hero', // hero-server\n      brokers: ['localhost:9092'],\n    },\n    consumer: {\n      groupId: 'hero-consumer' // hero-consumer-server\n    },\n  }\n});\n"),e.k0s()()(),e.j41(548,"p"),e.EFF(549,"Et pour le client :"),e.k0s(),e.j41(550,"app-copy-button",24)(551,"span",25),e.EFF(552),e.nI1(553,"extension"),e.nrm(554,"app-tabs",null,11),e.k0s(),e.j41(556,"pre")(557,"code",26),e.EFF(558,"\n@Client({\n  transport: Transport.KAFKA,\n  options: {\n    client: {\n      clientId: 'hero', // hero-client\n      brokers: ['localhost:9092'],\n    },\n    consumer: {\n      groupId: 'hero-consumer' // hero-consumer-client\n    }\n  }\n})\nclient: ClientKafka;\n"),e.k0s()()(),e.j41(559,"blockquote",27)(560,"strong"),e.EFF(561,"Astuce"),e.k0s(),e.EFF(562," Les conventions de nommage des clients et des consommateurs Kafka peuvent \xeatre personnalis\xe9es en \xe9tendant "),e.j41(563,"code"),e.EFF(564,"ClientKafka"),e.k0s(),e.EFF(565," et "),e.j41(566,"code"),e.EFF(567,"KafkaServer"),e.k0s(),e.EFF(568," dans votre propre fournisseur personnalis\xe9 et en surchargeant le constructeur.\n"),e.k0s(),e.j41(569,"p"),e.EFF(570,"Puisque le mod\xe8le de message de microservice Kafka utilise deux sujets pour les canaux de demande et de r\xe9ponse, un mod\xe8le de r\xe9ponse doit \xeatre d\xe9riv\xe9 du sujet de demande. Par d\xe9faut, le nom du sujet de r\xe9ponse est le composite du nom du sujet de demande avec "),e.j41(571,"code"),e.EFF(572,".reply"),e.k0s(),e.EFF(573," ajout\xe9."),e.k0s(),e.j41(574,"app-copy-button",24)(575,"span",25),e.EFF(576),e.nI1(577,"extension"),e.nrm(578,"app-tabs",null,12),e.k0s(),e.j41(580,"pre")(581,"code",26),e.EFF(582,"\nonModuleInit() {\n  this.client.subscribeToResponseOf('hero.get'); // hero.get.reply\n}\n"),e.k0s()()(),e.j41(583,"blockquote",27)(584,"strong"),e.EFF(585,"Astuce"),e.k0s(),e.EFF(586," Les conventions de nommage des sujets de r\xe9ponse Kafka peuvent \xeatre personnalis\xe9es en \xe9tendant "),e.j41(587,"code"),e.EFF(588,"ClientKafka"),e.k0s(),e.EFF(589," dans votre propre fournisseur personnalis\xe9 et en surchargeant la m\xe9thode "),e.j41(590,"code"),e.EFF(591,"getResponsePatternName"),e.k0s(),e.EFF(592,".\n"),e.k0s(),e.j41(593,"h4",51)(594,"span"),e.EFF(595,"Exceptions r\xe9cup\xe9rables"),e.k0s()(),e.j41(596,"p"),e.EFF(597,"Comme pour les autres transporteurs, toutes les exceptions non g\xe9r\xe9es sont automatiquement envelopp\xe9es dans une "),e.j41(598,"code"),e.EFF(599,"RpcException"),e.k0s(),e.EFF(600,' et converties dans un format "convivial". Cependant, il y a des cas o\xf9 vous voudrez contourner ce m\xe9canisme et laisser les exceptions \xeatre consomm\xe9es par le pilote '),e.j41(601,"code"),e.EFF(602,"kafkajs"),e.k0s(),e.EFF(603," \xe0 la place. Lancer une exception lors du traitement d'un message demande \xe0 "),e.j41(604,"code"),e.EFF(605,"kafkajs"),e.k0s(),e.EFF(606," de "),e.j41(607,"strong"),e.EFF(608,"retry"),e.k0s(),e.EFF(609," (le livrer \xe0 nouveau), ce qui signifie que m\xeame si le gestionnaire de message (ou d'\xe9v\xe9nement) a \xe9t\xe9 d\xe9clench\xe9, le d\xe9calage ne sera pas enregistr\xe9 dans Kafka."),e.k0s(),e.j41(610,"blockquote",40)(611,"strong"),e.EFF(612,"Attention"),e.k0s(),e.EFF(613," Pour les gestionnaires d'\xe9v\xe9nements (communication bas\xe9e sur les \xe9v\xe9nements), toutes les exceptions non g\xe9r\xe9es sont consid\xe9r\xe9es par d\xe9faut comme des "),e.j41(614,"strong"),e.EFF(615,"exceptions r\xe9cup\xe9rables"),e.k0s(),e.EFF(616,".\n"),e.k0s(),e.j41(617,"p"),e.EFF(618,"Pour cela, vous pouvez utiliser une classe d\xe9di\xe9e appel\xe9e "),e.j41(619,"code"),e.EFF(620,"KafkaRetriableException"),e.k0s(),e.EFF(621,", comme suit :"),e.k0s(),e.j41(622,"app-copy-button")(623,"pre")(624,"code",26),e.EFF(625,"\nthrow new KafkaRetriableException('...');\n"),e.k0s()()(),e.j41(626,"blockquote",27)(627,"strong"),e.EFF(628,"Astuce"),e.k0s(),e.EFF(629," La classe "),e.j41(630,"code"),e.EFF(631,"KafkaRetriableException"),e.k0s(),e.EFF(632," est export\xe9e depuis le package "),e.j41(633,"code"),e.EFF(634,"@nestjs/microservices"),e.k0s(),e.EFF(635,".\n"),e.k0s(),e.j41(636,"h4",52)(637,"span"),e.EFF(638,"Validation des d\xe9calages"),e.k0s()(),e.j41(639,"p"),e.EFF(640,"La validation des d\xe9calages est essentielle lorsque l'on travaille avec Kafka. Par d\xe9faut, les messages sont automatiquement valid\xe9s apr\xe8s un certain temps. Pour plus d'informations, visitez "),e.j41(641,"a",53),e.EFF(642,"KafkaJS docs"),e.k0s(),e.EFF(643,". "),e.j41(644,"code"),e.EFF(645,"KafkaContext"),e.k0s(),e.EFF(646," offre un moyen d'acc\xe8der au consommateur actif pour valider manuellement les d\xe9calages. Ce consommateur est le consomamteur KafkaJS et fonctionne comme "),e.j41(647,"a",54),e.EFF(648,"l'impl\xe9mentation native de KafkaJS"),e.k0s(),e.EFF(649,"."),e.k0s(),e.j41(650,"app-copy-button",24)(651,"span",25),e.nrm(652,"app-tabs",null,13),e.k0s(),e.j41(654,"pre")(655,"code",26),e.EFF(656,"\n@EventPattern('user.created')\nasync handleUserCreated(@Payload() data: IncomingMessage, @Ctx() context: KafkaContext) {\n  // logique m\xe9tier\n  \n  const { offset } = context.getMessage();\n  const partition = context.getPartition();\n  const topic = context.getTopic();\n  const consumer = context.getConsumer();\n  await consumer.commitOffsets([{ topic, partition, offset }])\n}\n"),e.k0s()(),e.j41(657,"pre")(658,"code",26),e.EFF(659,"\n@Bind(Payload(), Ctx())\n@EventPattern('user.created')\nasync handleUserCreated(data, context) {\n  // logique m\xe9tier\n\n  const { offset } = context.getMessage();\n  const partition = context.getPartition();\n  const topic = context.getTopic();\n  const consumer = context.getConsumer();\n  await consumer.commitOffsets([{ topic, partition, offset }])\n}\n"),e.k0s()()(),e.j41(660,"p"),e.EFF(661,"Pour d\xe9sactiver la validation automatique des messages, mettez "),e.j41(662,"code"),e.EFF(663,"autoCommit : false"),e.k0s(),e.EFF(664," dans la configuration "),e.j41(665,"code"),e.EFF(666,"run"),e.k0s(),e.EFF(667,", comme suit :"),e.k0s(),e.j41(668,"app-copy-button",24)(669,"span",25),e.EFF(670),e.nI1(671,"extension"),e.nrm(672,"app-tabs",null,14),e.k0s(),e.j41(674,"pre")(675,"code",26),e.EFF(676,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n  transport: Transport.KAFKA,\n  options: {\n    client: {\n      brokers: ['localhost:9092'],\n    },\n    run: {\n      autoCommit: false\n    }\n  }\n});\n"),e.k0s()(),e.j41(677,"pre")(678,"code",26),e.EFF(679,"\nconst app = await NestFactory.createMicroservice(AppModule, {\n  transport: Transport.KAFKA,\n  options: {\n    client: {\n      brokers: ['localhost:9092'],\n    },\n    run: {\n      autoCommit: false\n    }\n  }\n});\n"),e.k0s()()()()),2&t){const o=e.sdS(47),a=e.sdS(288),u=e.sdS(308),c=e.sdS(363),i=e.sdS(392),E=e.sdS(412),j=e.sdS(443),v=e.sdS(479),g=e.sdS(544),S=e.sdS(555),R=e.sdS(579),A=e.sdS(653),b=e.sdS(673);e.R7$(44),e.SpI(" ",e.i5U(45,30,"main",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(234),e.SpI(" ",e.i5U(286,33,"heroes.controller",a.isJsActive),"\n"),e.R7$(20),e.SpI(" ",e.i5U(306,36,"heroes.controller",u.isJsActive),"\n"),e.R7$(55),e.SpI(" ",e.i5U(361,39,"heroes.controller",c.isJsActive),"\n"),e.R7$(29),e.SpI(" ",e.i5U(390,42,"heroes.controller",i.isJsActive),"\n"),e.R7$(20),e.SpI(" ",e.i5U(410,45,"heroes.controller",E.isJsActive),"\n"),e.R7$(35),e.AVh("hide",j.isJsActive),e.R7$(3),e.AVh("hide",!j.isJsActive),e.R7$(33),e.AVh("hide",v.isJsActive),e.R7$(3),e.AVh("hide",!v.isJsActive),e.R7$(58),e.SpI(" ",e.i5U(542,48,"main",g.isJsActive),"\n"),e.R7$(11),e.SpI(" ",e.i5U(553,51,"heroes.controller",S.isJsActive),"\n"),e.R7$(24),e.SpI(" ",e.i5U(577,54,"heroes.controller",R.isJsActive),"\n"),e.R7$(78),e.AVh("hide",A.isJsActive),e.R7$(3),e.AVh("hide",!A.isJsActive),e.R7$(13),e.SpI(" ",e.i5U(671,57,"main",b.isJsActive),"\n"),e.R7$(4),e.AVh("hide",b.isJsActive),e.R7$(3),e.AVh("hide",!b.isJsActive)}},dependencies:[F.O,m.a,l.z,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Kafka - Microservices"}},{path:"pipes",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-pipes"]],features:[e.Vt3],decls:46,vars:4,consts:[["contentReference",""],["app58560845b7bede204f94a3fe4da80c27c154aa20",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/pipes.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","pipes"],["routerLink","/pipes"],[1,"info"],["appAnchor","","id","lier-les-pipes"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"]],template:function(t,r){if(1&t&&(e.j41(0,"div",2,0)(2,"div",3)(3,"a",4),e.nrm(4,"i",5),e.k0s()(),e.j41(5,"h3",6),e.EFF(6,"Pipes"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Il n'y a pas de diff\xe9rence fondamentale entre les "),e.j41(9,"a",7),e.EFF(10,"pipes ordinaires"),e.k0s(),e.EFF(11," et les pipes microservices. La seule diff\xe9rence est qu'au lieu de lancer "),e.j41(12,"code"),e.EFF(13,"HttpException"),e.k0s(),e.EFF(14,", vous devriez utiliser "),e.j41(15,"code"),e.EFF(16,"RpcException"),e.k0s(),e.EFF(17,"."),e.k0s(),e.j41(18,"blockquote",8)(19,"strong"),e.EFF(20,"Astuce"),e.k0s(),e.EFF(21," La classe "),e.j41(22,"code"),e.EFF(23,"RpcException"),e.k0s(),e.EFF(24," est expos\xe9e dans le package "),e.j41(25,"code"),e.EFF(26,"@nestjs/microservices"),e.k0s(),e.EFF(27,".\n"),e.k0s(),e.j41(28,"h4",9)(29,"span"),e.EFF(30,"Lier les pipes"),e.k0s()(),e.j41(31,"p"),e.EFF(32,"L'exemple suivant utilise un pipe \xe0 port\xe9e de m\xe9thode instanci\xe9 manuellement. Tout comme pour les applications bas\xe9es sur HTTP, vous pouvez \xe9galement utiliser des pipes \xe0 l'\xe9chelle du contr\xf4leur (c'est-\xe0-dire pr\xe9fixer la classe du contr\xf4leur avec un d\xe9corateur "),e.j41(33,"code"),e.EFF(34,"@UsePipes()"),e.k0s(),e.EFF(35,")."),e.k0s(),e.j41(36,"app-copy-button",10)(37,"span",11),e.nrm(38,"app-tabs",null,1),e.k0s(),e.j41(40,"pre")(41,"code",12),e.EFF(42,"\n@UsePipes(new ValidationPipe({ exceptionFactory: (errors) => new RpcException(errors) }))\n@MessagePattern({ cmd: 'sum' })\naccumulate(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()(),e.j41(43,"pre")(44,"code",12),e.EFF(45,"\n@UsePipes(new ValidationPipe({ exceptionFactory: (errors) => new RpcException(errors) }))\n@MessagePattern({ cmd: 'sum' })\naccumulate(data) {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()()()()),2&t){const o=e.sdS(39);e.R7$(40),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive)}},dependencies:[F.O,m.a,l.z,f.Wk],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Pipes - Microservices"}},{path:"exception-filters",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-exception-filters"]],features:[e.Vt3],decls:116,vars:16,consts:[["contentReference",""],["app001bba5c47f55238437ceb4da7f0312909731246",""],["app3ad4220c3bbcb40105a07b6f96e43790118db3ee",""],["appdf02a2e3a27e1b8aee516ff8edfaa5331e27cee1",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/exception-filters.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","filtres-dexception"],["routerLink","/exception-filters"],[1,"language-typescript"],[1,"info"],[1,"language-json"],["appAnchor","","id","filtres"],[1,"with-heading"],[1,"filename"],[1,"warning"],["routerLink","/faq/hybrid-application"],["appAnchor","","id","h\xe9ritage"]],template:function(t,r){if(1&t&&(e.j41(0,"div",4,0)(2,"div",5)(3,"a",6),e.nrm(4,"i",7),e.k0s()(),e.j41(5,"h3",8),e.EFF(6,"Filtres d'exception"),e.k0s(),e.j41(7,"p"),e.EFF(8,"La seule diff\xe9rence entre la couche HTTP "),e.j41(9,"a",9),e.EFF(10,"exception filter"),e.k0s(),e.EFF(11," et la couche microservices correspondante est qu'au lieu de lancer "),e.j41(12,"code"),e.EFF(13,"HttpException"),e.k0s(),e.EFF(14,", vous devez utiliser "),e.j41(15,"code"),e.EFF(16,"RpcException"),e.k0s(),e.EFF(17,"."),e.k0s(),e.j41(18,"app-copy-button")(19,"pre")(20,"code",10),e.EFF(21,"\nthrow new RpcException('Invalid credentials.');\n"),e.k0s()()(),e.j41(22,"blockquote",11)(23,"strong"),e.EFF(24,"Astuce"),e.k0s(),e.EFF(25," La classe "),e.j41(26,"code"),e.EFF(27,"RpcException"),e.k0s(),e.EFF(28," est import\xe9e du package "),e.j41(29,"code"),e.EFF(30,"@nestjs/microservices"),e.k0s(),e.EFF(31,".\n"),e.k0s(),e.j41(32,"p"),e.EFF(33,"Avec l'exemple ci-dessus, Nest va g\xe9rer l'exception lanc\xe9e et retourner l'objet "),e.j41(34,"code"),e.EFF(35,"error"),e.k0s(),e.EFF(36," avec la structure suivante :"),e.k0s(),e.j41(37,"pre")(38,"code",12),e.EFF(39,'\n{\n  "status": "error",\n  "message": "Invalid credentials."\n}\n'),e.k0s()(),e.j41(40,"h4",13)(41,"span"),e.EFF(42,"Filtres"),e.k0s()(),e.j41(43,"p"),e.EFF(44,"Les filtres d'exception des microservices se comportent de mani\xe8re similaire aux filtres d'exception HTTP, avec une petite diff\xe9rence. La m\xe9thode "),e.j41(45,"code"),e.EFF(46,"catch()"),e.k0s(),e.EFF(47," doit retourner un "),e.j41(48,"code"),e.EFF(49,"Observable"),e.k0s(),e.EFF(50,"."),e.k0s(),e.j41(51,"app-copy-button",14)(52,"span",15),e.EFF(53),e.nI1(54,"extension"),e.nrm(55,"app-tabs",null,1),e.k0s(),e.j41(57,"pre")(58,"code",10),e.EFF(59,"\nimport { Catch, RpcExceptionFilter, ArgumentsHost } from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\n\n@Catch(RpcException)\nexport class ExceptionFilter implements RpcExceptionFilter<RpcException> {\n  catch(exception: RpcException, host: ArgumentsHost): Observable<any> {\n    return throwError(() => exception.getError());\n  }\n}\n"),e.k0s()(),e.j41(60,"pre")(61,"code",10),e.EFF(62,"\nimport { Catch } from '@nestjs/common';\nimport { throwError } from 'rxjs';\n\n@Catch(RpcException)\nexport class ExceptionFilter {\n  catch(exception, host) {\n    return throwError(() => exception.getError());\n  }\n}\n"),e.k0s()()(),e.j41(63,"blockquote",16)(64,"strong"),e.EFF(65,"Attention"),e.k0s(),e.EFF(66," Les filtres d'exception globaux des microservices ne sont pas activ\xe9s par d\xe9faut lors de l'utilisation d'une "),e.j41(67,"a",17),e.EFF(68,"application hybride"),e.k0s(),e.EFF(69,".\n"),e.k0s(),e.j41(70,"p"),e.EFF(71,"L'exemple suivant utilise un filtre \xe0 port\xe9e de m\xe9thode instanci\xe9 manuellement. Tout comme pour les applications bas\xe9es sur HTTP, vous pouvez \xe9galement utiliser des filtres \xe0 l'\xe9chelle du contr\xf4leur (c'est-\xe0-dire pr\xe9fixer la classe du contr\xf4leur avec un d\xe9corateur "),e.j41(72,"code"),e.EFF(73,"@UseFilters()"),e.k0s(),e.EFF(74,")."),e.k0s(),e.j41(75,"app-copy-button",14)(76,"span",15),e.nrm(77,"app-tabs",null,2),e.k0s(),e.j41(79,"pre")(80,"code",10),e.EFF(81,"\n@UseFilters(new ExceptionFilter())\n@MessagePattern({ cmd: 'sum' })\naccumulate(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()(),e.j41(82,"pre")(83,"code",10),e.EFF(84,"\n@UseFilters(new ExceptionFilter())\n@MessagePattern({ cmd: 'sum' })\naccumulate(data) {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()()(),e.j41(85,"h4",18)(86,"span"),e.EFF(87,"H\xe9ritage"),e.k0s()(),e.j41(88,"p"),e.EFF(89,"En r\xe8gle g\xe9n\xe9rale, vous cr\xe9erez des filtres d'exception enti\xe8rement personnalis\xe9s, con\xe7us pour r\xe9pondre aux exigences de votre application. Cependant, il peut y avoir des cas d'utilisation o\xf9 vous souhaiteriez simplement \xe9tendre le "),e.j41(90,"strong"),e.EFF(91,"filtre d'exception de base"),e.k0s(),e.EFF(92,", et modifier son comportement en fonction de certains facteurs."),e.k0s(),e.j41(93,"p"),e.EFF(94,"Pour d\xe9l\xe9guer le traitement des exceptions au filtre de base, vous devez \xe9tendre "),e.j41(95,"code"),e.EFF(96,"BaseExceptionFilter"),e.k0s(),e.EFF(97," et appeler la m\xe9thode "),e.j41(98,"code"),e.EFF(99,"catch()"),e.k0s(),e.EFF(100," h\xe9rit\xe9e."),e.k0s(),e.j41(101,"app-copy-button",14)(102,"span",15),e.nrm(103,"app-tabs",null,3),e.k0s(),e.j41(105,"pre")(106,"code",10),e.EFF(107,"\nimport { Catch, ArgumentsHost } from '@nestjs/common';\nimport { BaseRpcExceptionFilter } from '@nestjs/microservices';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseRpcExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    return super.catch(exception, host);\n  }\n}\n"),e.k0s()(),e.j41(108,"pre")(109,"code",10),e.EFF(110,"\nimport { Catch } from '@nestjs/common';\nimport { BaseRpcExceptionFilter } from '@nestjs/microservices';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseRpcExceptionFilter {\n  catch(exception, host) {\n    return super.catch(exception, host);\n  }\n}\n"),e.k0s()()(),e.j41(111,"p"),e.EFF(112,"L'impl\xe9mentation ci-dessus n'est qu'une coquille d\xe9montrant l'approche. Votre impl\xe9mentation du filtre d'exception \xe9tendu inclurait votre "),e.j41(113,"strong"),e.EFF(114,"logique m\xe9tier"),e.k0s(),e.EFF(115," personnalis\xe9e (par exemple, le traitement de diverses conditions)."),e.k0s()()),2&t){const o=e.sdS(56),a=e.sdS(78),u=e.sdS(104);e.R7$(53),e.SpI(" ",e.i5U(54,13,"rpc-exception.filter",o.isJsActive),"\n"),e.R7$(4),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive),e.R7$(19),e.AVh("hide",a.isJsActive),e.R7$(3),e.AVh("hide",!a.isJsActive),e.R7$(23),e.AVh("hide",u.isJsActive),e.R7$(3),e.AVh("hide",!u.isJsActive)}},dependencies:[F.O,m.a,l.z,f.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Filtres d'exception - Microservices"}},{path:"guards",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-guards"]],features:[e.Vt3],decls:46,vars:4,consts:[["contentReference",""],["appcc3f00329eaf28c89f83cca4eaaae720a8fbdf69",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/guards.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","gardes"],["href","/guards"],[1,"info"],["appAnchor","","id","lier-les-gardes"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"]],template:function(t,r){if(1&t&&(e.j41(0,"div",2,0)(2,"div",3)(3,"a",4),e.nrm(4,"i",5),e.k0s()(),e.j41(5,"h3",6),e.EFF(6,"Gardes"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Il n'y a pas de diff\xe9rence fondamentale entre les gardes microservices et les "),e.j41(9,"a",7),e.EFF(10,"gardes d'application HTTP ordinaires"),e.k0s(),e.EFF(11,".\nLa seule diff\xe9rence est qu'au lieu de lancer "),e.j41(12,"code"),e.EFF(13,"HttpException"),e.k0s(),e.EFF(14,", vous devriez utiliser "),e.j41(15,"code"),e.EFF(16,"RpcException"),e.k0s(),e.EFF(17,"."),e.k0s(),e.j41(18,"blockquote",8)(19,"strong"),e.EFF(20,"Astuce"),e.k0s(),e.EFF(21," La classe "),e.j41(22,"code"),e.EFF(23,"RpcException"),e.k0s(),e.EFF(24," est expos\xe9e dans le package "),e.j41(25,"code"),e.EFF(26,"@nestjs/microservices"),e.k0s(),e.EFF(27,".\n"),e.k0s(),e.j41(28,"h4",9)(29,"span"),e.EFF(30,"Lier les gardes"),e.k0s()(),e.j41(31,"p"),e.EFF(32,"L'exemple suivant utilise une garde \xe0 l'\xe9chelle de la m\xe9thode. Tout comme pour les applications bas\xe9es sur HTTP, vous pouvez \xe9galement utiliser des protections au niveau du contr\xf4leur (c'est-\xe0-dire pr\xe9fixer la classe du contr\xf4leur avec un d\xe9corateur "),e.j41(33,"code"),e.EFF(34,"@UseGuards()"),e.k0s(),e.EFF(35,")."),e.k0s(),e.j41(36,"app-copy-button",10)(37,"span",11),e.nrm(38,"app-tabs",null,1),e.k0s(),e.j41(40,"pre")(41,"code",12),e.EFF(42,"\n@UseGuards(AuthGuard)\n@MessagePattern({ cmd: 'sum' })\naccumulate(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()(),e.j41(43,"pre")(44,"code",12),e.EFF(45,"\n@UseGuards(AuthGuard)\n@MessagePattern({ cmd: 'sum' })\naccumulate(data) {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()()()()),2&t){const o=e.sdS(39);e.R7$(40),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive)}},dependencies:[F.O,m.a,l.z],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Gardes - Microservices"}},{path:"interceptors",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-interceptors"]],features:[e.Vt3],decls:25,vars:4,consts:[["contentReference",""],["app824d87291843fadaccb3b2af65e511897be12fd1",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/interceptors.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","intercepteurs"],["routerLink","/intercepteurs"],[1,"with-heading"],[1,"filename"],[1,"language-typescript"]],template:function(t,r){if(1&t&&(e.j41(0,"div",2,0)(2,"div",3)(3,"a",4),e.nrm(4,"i",5),e.k0s()(),e.j41(5,"h3",6),e.EFF(6,"Intercepteurs"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Il n'y a pas de diff\xe9rence entre les "),e.j41(9,"a",7),e.EFF(10,"intercepteurs ordinaires"),e.k0s(),e.EFF(11," et les intercepteurs de microservices. L'exemple suivant utilise un intercepteur \xe0 port\xe9e de m\xe9thode instanci\xe9 manuellement. Tout comme pour les applications bas\xe9es sur HTTP, vous pouvez \xe9galement utiliser des intercepteurs \xe0 l'\xe9chelle du contr\xf4leur (c'est-\xe0-dire pr\xe9fixer la classe du contr\xf4leur avec un d\xe9corateur "),e.j41(12,"code"),e.EFF(13,"@UseInterceptors()"),e.k0s(),e.EFF(14,")."),e.k0s(),e.j41(15,"app-copy-button",8)(16,"span",9),e.nrm(17,"app-tabs",null,1),e.k0s(),e.j41(19,"pre")(20,"code",10),e.EFF(21,"\n@UseInterceptors(new TransformInterceptor())\n@MessagePattern({ cmd: 'sum' })\naccumulate(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()(),e.j41(22,"pre")(23,"code",10),e.EFF(24,"\n@UseInterceptors(new TransformInterceptor())\n@MessagePattern({ cmd: 'sum' })\naccumulate(data) {\n  return (data || []).reduce((a, b) => a + b);\n}\n"),e.k0s()()()()),2&t){const o=e.sdS(18);e.R7$(19),e.AVh("hide",o.isJsActive),e.R7$(3),e.AVh("hide",!o.isJsActive)}},dependencies:[F.O,l.z,f.Wk],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Intercepteurs - Microservices"}},{path:"custom-transport",component:(()=>{class s extends d.y{static \u0275fac=(()=>{let n;return function(r){return(n||(n=e.xGo(s)))(r||s)}})();static \u0275cmp=e.VBU({type:s,selectors:[["app-custom-transport"]],features:[e.Vt3],decls:393,vars:8,consts:[["contentReference",""],["app2a1847b6506c03dd87efa934278c548caeecdf83",""],["app021e172f212e47bdf180e0786456c988e551401b",""],[1,"content"],[1,"github-links"],["href","https://github.com/Lou8is/docs.nestjs.fr/edit/main/content/microservices/custom-transport.md","aria-label","Proposer des modifications","title","Proposer des modifications"],[1,"fas","fa-edit"],["id","transporteurs-personnalis\xe9s"],["rel","nofollow","target","_blank","href","https://dev.to/nestjs/integrate-nestjs-with-external-services-using-microservice-transporters-part-1-p3"],[1,"info"],["routerLink","/application-context"],["rel","nofollow","target","_blank","href","https://github.com/mqttjs/MQTT.js/blob/master/README.md#qos"],["rel","nofollow","target","_blank","href","https://dev.to/johnbiundo/series/4724"],["rel","nofollow","target","_blank","href","https://dev.to/nestjs/part-1-introduction-and-setup-1a2l"],["appAnchor","","id","cr\xe9er-une-strat\xe9gie"],[1,"language-typescript"],[1,"warning"],[1,"language-json"],["routerLink","/interceptors"],["appAnchor","","id","proxy-de-client"],["rel","nofollow","target","_blank","href","https://dev.to/nestjs/part-4-basic-client-component-16f9"],["appAnchor","","id","s\xe9rialisation-des-messages"],[1,"with-heading"],[1,"filename"]],template:function(t,r){if(1&t&&(e.j41(0,"div",3,0)(2,"div",4)(3,"a",5),e.nrm(4,"i",6),e.k0s()(),e.j41(5,"h3",7),e.EFF(6,"Transporteurs personnalis\xe9s"),e.k0s(),e.j41(7,"p"),e.EFF(8,"Nest fournit une vari\xe9t\xe9 de "),e.j41(9,"strong"),e.EFF(10,"transporteurs"),e.k0s(),e.EFF(11," pr\xeats \xe0 l'emploi, ainsi qu'une API permettant aux d\xe9veloppeurs d'\xe9laborer de nouvelles strat\xe9gies de transport personnalis\xe9es. Les transporteurs vous permettent de connecter des composants sur un r\xe9seau \xe0 l'aide d'une couche de communication enfichable et d'un protocole de message tr\xe8s simple au niveau de l'application (lire l'int\xe9gralit\xe9 de l'"),e.j41(12,"a",8),e.EFF(13,"article"),e.k0s(),e.EFF(14,")."),e.k0s(),e.j41(15,"blockquote",9)(16,"strong"),e.EFF(17,"Astuce"),e.k0s(),e.EFF(18," Construire un microservice avec Nest ne signifie pas n\xe9cessairement que vous devez utiliser le package "),e.j41(19,"code"),e.EFF(20,"@nestjs/microservices"),e.k0s(),e.EFF(21,". Par exemple, si vous voulez communiquer avec des services externes (disons d'autres microservices \xe9crits dans des langages diff\xe9rents), vous n'aurez peut-\xeatre pas besoin de toutes les fonctionnalit\xe9s fournies par la biblioth\xe8que "),e.j41(22,"code"),e.EFF(23,"@nestjs/microservice"),e.k0s(),e.EFF(24,".\nEn fait, si vous n'avez pas besoin de d\xe9corateurs ("),e.j41(25,"code"),e.EFF(26,"@EventPattern"),e.k0s(),e.EFF(27," ou "),e.j41(28,"code"),e.EFF(29,"@MessagePattern"),e.k0s(),e.EFF(30,") qui vous permettent de d\xe9finir les abonn\xe9s de mani\xe8re d\xe9clarative, lancer une "),e.j41(31,"a",10),e.EFF(32,"Application autonome"),e.k0s(),e.EFF(33," et maintenir manuellement les connexions/abonnements aux canaux devrait \xeatre suffisant pour la plupart des cas d'utilisation et vous fournira plus de flexibilit\xe9.\n"),e.k0s(),e.j41(34,"p"),e.EFF(35,"Avec un transporteur personnalis\xe9, vous pouvez int\xe9grer n'importe quel syst\xe8me/protocole de messagerie (y compris Google Cloud Pub/Sub, Amazon Kinesis, et d'autres) ou \xe9tendre le syst\xe8me existant, en ajoutant des fonctionnalit\xe9s suppl\xe9mentaires (par exemple, "),e.j41(36,"a",11),e.EFF(37,"QoS"),e.k0s(),e.EFF(38," pour MQTT)."),e.k0s(),e.j41(39,"blockquote",9)(40,"strong"),e.EFF(41,"Astuce"),e.k0s(),e.EFF(42," Pour mieux comprendre le fonctionnement des microservices Nest et la mani\xe8re dont vous pouvez \xe9tendre les capacit\xe9s des transporteurs existants, nous vous recommandons de lire les s\xe9ries d'articles "),e.j41(43,"a",12),e.EFF(44,"NestJS Microservices in Action"),e.k0s(),e.EFF(45," et "),e.j41(46,"a",13),e.EFF(47,"Advanced NestJS Microservices"),e.k0s(),e.EFF(48,".\n"),e.k0s(),e.j41(49,"h4",14)(50,"span"),e.EFF(51,"Cr\xe9er une strat\xe9gie"),e.k0s()(),e.j41(52,"p"),e.EFF(53,"Tout d'abord, d\xe9finissons une classe repr\xe9sentant notre transporteur personnalis\xe9."),e.k0s(),e.j41(54,"app-copy-button")(55,"pre")(56,"code",15),e.EFF(57,"\nimport { CustomTransportStrategy, Server } from '@nestjs/microservices';\n\nclass GoogleCloudPubSubServer\n  extends Server\n  implements CustomTransportStrategy {\n  /**\n   * Cette m\xe9thode est d\xe9clench\xe9e lorsque vous ex\xe9cutez \"app.listen()\".\n   */\n  listen(callback: () => void) {\n    callback();\n  }\n\n  /**\n   * Cette m\xe9thode est d\xe9clench\xe9e lors de l'arr\xeat de l'application.\n   */\n  close() {}\n}\n"),e.k0s()()(),e.j41(58,"blockquote",16)(59,"strong"),e.EFF(60,"Astuce"),e.k0s(),e.EFF(61," Veuillez noter que nous ne mettrons pas en \u0153uvre un serveur Google Cloud Pub/Sub complet dans ce chapitre, car cela n\xe9cessiterait de plonger dans les d\xe9tails techniques sp\xe9cifiques au transporteur.\n"),e.k0s(),e.j41(62,"p"),e.EFF(63,"Dans notre exemple ci-dessus, nous avons d\xe9clar\xe9 la classe "),e.j41(64,"code"),e.EFF(65,"GoogleCloudPubSubServer"),e.k0s(),e.EFF(66," et fourni les m\xe9thodes "),e.j41(67,"code"),e.EFF(68,"listen()"),e.k0s(),e.EFF(69," et "),e.j41(70,"code"),e.EFF(71,"close()"),e.k0s(),e.EFF(72," appliqu\xe9es par l'interface "),e.j41(73,"code"),e.EFF(74,"CustomTransportStrategy"),e.k0s(),e.EFF(75,".\nDe plus, notre classe \xe9tend la classe "),e.j41(76,"code"),e.EFF(77,"Server"),e.k0s(),e.EFF(78," import\xe9e du package "),e.j41(79,"code"),e.EFF(80,"@nestjs/microservices"),e.k0s(),e.EFF(81," qui fournit quelques m\xe9thodes utiles, par exemple, les m\xe9thodes utilis\xe9es par le runtime Nest pour enregistrer les gestionnaires de messages. Alternativement, dans le cas o\xf9 vous voulez \xe9tendre les capacit\xe9s d'une strat\xe9gie de transport existante, vous pouvez \xe9tendre la classe serveur correspondante, par exemple, "),e.j41(82,"code"),e.EFF(83,"ServerRedis"),e.k0s(),e.EFF(84,".\nConventionnellement, nous avons ajout\xe9 le suffixe "),e.j41(85,"code"),e.EFF(86,'"Server"'),e.k0s(),e.EFF(87," \xe0 notre classe car elle sera responsable de l'abonnement aux messages/\xe9v\xe9nements (et d'y r\xe9pondre, si n\xe9cessaire)."),e.k0s(),e.j41(88,"p"),e.EFF(89,"Ainsi, nous pouvons maintenant utiliser notre strat\xe9gie personnalis\xe9e au lieu d'utiliser un transporteur int\xe9gr\xe9, comme suit :"),e.k0s(),e.j41(90,"app-copy-button")(91,"pre")(92,"code",15),e.EFF(93,"\nconst app = await NestFactory.createMicroservice<MicroserviceOptions>(\n  AppModule,\n  {\n    strategy: new GoogleCloudPubSubServer(),\n  },\n);\n"),e.k0s()()(),e.j41(94,"p"),e.EFF(95,"En fait, au lieu de passer l'objet d'options normal du transporteur avec les propri\xe9t\xe9s "),e.j41(96,"code"),e.EFF(97,"transport"),e.k0s(),e.EFF(98," et "),e.j41(99,"code"),e.EFF(100,"options"),e.k0s(),e.EFF(101,", nous passons une seule propri\xe9t\xe9, "),e.j41(102,"code"),e.EFF(103,"strategy"),e.k0s(),e.EFF(104,", dont la valeur est une instance de notre classe de transporteur personnalis\xe9e."),e.k0s(),e.j41(105,"p"),e.EFF(106,"Pour en revenir \xe0 notre classe "),e.j41(107,"code"),e.EFF(108,"GoogleCloudPubSubServer"),e.k0s(),e.EFF(109,", dans une application r\xe9elle, nous devrions \xe9tablir une connexion avec notre courtier de messages/service externe et enregistrer des abonn\xe9s/\xe9couter des canaux sp\xe9cifiques dans la m\xe9thode "),e.j41(110,"code"),e.EFF(111,"listen()"),e.k0s(),e.EFF(112," (puis supprimer les abonnements et fermer la connexion dans la m\xe9thode de d\xe9montage "),e.j41(113,"code"),e.EFF(114,"close()"),e.k0s(),e.EFF(115,"), mais comme cela n\xe9cessite une bonne compr\xe9hension de la fa\xe7on dont les microservices Nest communiquent entre eux, nous vous recommandons de lire cette "),e.j41(116,"a",13),e.EFF(117,"s\xe9rie d'articles"),e.k0s(),e.EFF(118,".\nDans ce chapitre, nous allons plut\xf4t nous concentrer sur les capacit\xe9s de la classe "),e.j41(119,"code"),e.EFF(120,"Server"),e.k0s(),e.EFF(121," et comment vous pouvez les exploiter pour construire des strat\xe9gies personnalis\xe9es."),e.k0s(),e.j41(122,"p"),e.EFF(123,"Par exemple, disons que quelque part dans notre application, le gestionnaire de message suivant est d\xe9fini :"),e.k0s(),e.j41(124,"app-copy-button")(125,"pre")(126,"code",15),e.EFF(127,"\n@MessagePattern('echo')\necho(@Payload() data: object) {\n  return data;\n}\n"),e.k0s()()(),e.j41(128,"p"),e.EFF(129,"Ce gestionnaire de messages sera automatiquement enregistr\xe9 par le syst\xe8me d'ex\xe9cution Nest. Avec la classe "),e.j41(130,"code"),e.EFF(131,"Server"),e.k0s(),e.EFF(132,", vous pouvez voir quels mod\xe8les de messages ont \xe9t\xe9 enregistr\xe9s et aussi, acc\xe9der et ex\xe9cuter les m\xe9thodes qui leur ont \xe9t\xe9 assign\xe9es.\nPour tester ceci, ajoutons un simple "),e.j41(133,"code"),e.EFF(134,"console.log"),e.k0s(),e.EFF(135," dans la m\xe9thode "),e.j41(136,"code"),e.EFF(137,"listen()"),e.k0s(),e.EFF(138," avant que la fonction "),e.j41(139,"code"),e.EFF(140,"callback"),e.k0s(),e.EFF(141," ne soit appel\xe9e :"),e.k0s(),e.j41(142,"app-copy-button")(143,"pre")(144,"code",15),e.EFF(145,"\nlisten(callback: () => void) {\n  console.log(this.messageHandlers);\n  callback();\n}\n"),e.k0s()()(),e.j41(146,"p"),e.EFF(147,"Apr\xe8s le red\xe9marrage de votre application, vous verrez le journal suivant dans votre terminal :"),e.k0s(),e.j41(148,"app-copy-button")(149,"pre")(150,"code",15),e.EFF(151,"\nMap { 'echo' => [AsyncFunction] { isEventHandler: false } }\n"),e.k0s()()(),e.j41(152,"blockquote",9)(153,"strong"),e.EFF(154,"Astuce"),e.k0s(),e.EFF(155," Si nous utilisions le d\xe9corateur "),e.j41(156,"code"),e.EFF(157,"@EventPattern"),e.k0s(),e.EFF(158,", vous verriez le m\xeame r\xe9sultat, mais avec la propri\xe9t\xe9 "),e.j41(159,"code"),e.EFF(160,"isEventHandler"),e.k0s(),e.EFF(161," fix\xe9e \xe0 "),e.j41(162,"code"),e.EFF(163,"true"),e.k0s(),e.EFF(164,".\n"),e.k0s(),e.j41(165,"p"),e.EFF(166,"Comme vous pouvez le voir, la propri\xe9t\xe9 "),e.j41(167,"code"),e.EFF(168,"messageHandlers"),e.k0s(),e.EFF(169," est une collection "),e.j41(170,"code"),e.EFF(171,"Map"),e.k0s(),e.EFF(172," de tous les gestionnaires de messages (et d'\xe9v\xe9nements), dans laquelle les mod\xe8les sont utilis\xe9s comme cl\xe9s.\nMaintenant, vous pouvez utiliser une cl\xe9 (par exemple, "),e.j41(173,"code"),e.EFF(174,'"echo"'),e.k0s(),e.EFF(175,") pour recevoir une r\xe9f\xe9rence au gestionnaire de message :"),e.k0s(),e.j41(176,"app-copy-button")(177,"pre")(178,"code",15),e.EFF(179,"\nasync listen(callback: () => void) {\n  const echoHandler = this.messageHandlers.get('echo');\n  console.log(await echoHandler('Hello world!'));\n  callback();\n}\n"),e.k0s()()(),e.j41(180,"p"),e.EFF(181,"Une fois que nous avons ex\xe9cut\xe9 le "),e.j41(182,"code"),e.EFF(183,"echoHandler"),e.k0s(),e.EFF(184," en passant une cha\xeene arbitraire comme argument (ici "),e.j41(185,"code"),e.EFF(186,'"Hello world !"'),e.k0s(),e.EFF(187,"), nous devrions le voir dans la console :"),e.k0s(),e.j41(188,"pre")(189,"code",17),e.EFF(190,"\nHello world!\n"),e.k0s()(),e.j41(191,"p"),e.EFF(192,"Cela signifie que notre gestionnaire de m\xe9thode a \xe9t\xe9 correctement ex\xe9cut\xe9."),e.k0s(),e.j41(193,"p"),e.EFF(194,"Lorsque l'on utilise une "),e.j41(195,"code"),e.EFF(196,"CustomTransportStrategy"),e.k0s(),e.EFF(197," avec des "),e.j41(198,"a",18),e.EFF(199,"Intercepteurs"),e.k0s(),e.EFF(200,", les handlers sont envelopp\xe9s dans des flux RxJS. Cela signifie que vous devez vous y abonner afin d'ex\xe9cuter la logique sous-jacente des flux (par exemple, continuer dans la logique du contr\xf4leur apr\xe8s qu'un intercepteur ait \xe9t\xe9 ex\xe9cut\xe9)."),e.k0s(),e.j41(201,"p"),e.EFF(202,"Un exemple est donn\xe9 ci-dessous :"),e.k0s(),e.j41(203,"app-copy-button")(204,"pre")(205,"code",15),e.EFF(206,"\nasync listen(callback: () => void) {\n  const echoHandler = this.messageHandlers.get('echo');\n  const streamOrResult = await echoHandler('Hello World');\n  if (isObservable(streamOrResult)) {\n    streamOrResult.subscribe();\n  }\n  callback();\n}\n"),e.k0s()()(),e.j41(207,"h4",19)(208,"span"),e.EFF(209,"Proxy de client"),e.k0s()(),e.j41(210,"p"),e.EFF(211,"Comme nous l'avons mentionn\xe9 dans la premi\xe8re section, vous n'avez pas n\xe9cessairement besoin d'utiliser le package "),e.j41(212,"code"),e.EFF(213,"@nestjs/microservices"),e.k0s(),e.EFF(214,' pour cr\xe9er des microservices, mais si vous d\xe9cidez de le faire et que vous avez besoin d\'int\xe9grer une strat\xe9gie personnalis\xe9e, vous devrez \xe9galement fournir une classe "client".'),e.k0s(),e.j41(215,"blockquote",9)(216,"strong"),e.EFF(217,"Astuce"),e.k0s(),e.EFF(218," Encore une fois, l'impl\xe9mentation d'une classe client compl\xe8te compatible avec toutes les fonctionnalit\xe9s de "),e.j41(219,"code"),e.EFF(220,"@nestjs/microservices"),e.k0s(),e.EFF(221," (par exemple, le streaming) n\xe9cessite une bonne compr\xe9hension des techniques de communication utilis\xe9es par le framework. Pour en savoir plus, consultez cet "),e.j41(222,"a",20),e.EFF(223,"article"),e.k0s(),e.EFF(224,".\n"),e.k0s(),e.j41(225,"p"),e.EFF(226,"Pour communiquer avec un service externe/\xe9mettre et publier des messages (ou des \xe9v\xe9nements), vous pouvez soit utiliser un package SDK sp\xe9cifique \xe0 la biblioth\xe8que, soit impl\xe9menter une classe client personnalis\xe9e qui \xe9tend le "),e.j41(227,"code"),e.EFF(228,"ClientProxy"),e.k0s(),e.EFF(229,", comme suit :"),e.k0s(),e.j41(230,"app-copy-button")(231,"pre")(232,"code",15),e.EFF(233,"\nimport { ClientProxy, ReadPacket, WritePacket } from '@nestjs/microservices';\n\nclass GoogleCloudPubSubClient extends ClientProxy {\n  async connect(): Promise<any> {}\n  async close() {}\n  async dispatchEvent(packet: ReadPacket<any>): Promise<any> {}\n  publish(\n    packet: ReadPacket<any>,\n    callback: (packet: WritePacket<any>) => void,\n  ): Function {}\n}\n"),e.k0s()()(),e.j41(234,"blockquote",16)(235,"strong"),e.EFF(236,"Attention"),e.k0s(),e.EFF(237," Veuillez noter que nous ne mettrons pas en \u0153uvre un client Google Cloud Pub/Sub complet dans ce chapitre, car cela n\xe9cessiterait de plonger dans les d\xe9tails techniques sp\xe9cifiques au transporteur.\n"),e.k0s(),e.j41(238,"p"),e.EFF(239,"Comme vous pouvez le voir, la classe "),e.j41(240,"code"),e.EFF(241,"ClientProxy"),e.k0s(),e.EFF(242," nous demande de fournir plusieurs m\xe9thodes pour \xe9tablir et fermer la connexion et publier des messages ("),e.j41(243,"code"),e.EFF(244,"publish"),e.k0s(),e.EFF(245,") et des \xe9v\xe9nements ("),e.j41(246,"code"),e.EFF(247,"dispatchEvent"),e.k0s(),e.EFF(248,").\nNotez que si vous n'avez pas besoin d'un support de communication de type requ\xeate-r\xe9ponse, vous pouvez laisser la m\xe9thode "),e.j41(249,"code"),e.EFF(250,"publish()"),e.k0s(),e.EFF(251," vide. De m\xeame, si vous n'avez pas besoin de supporter une communication bas\xe9e sur les \xe9v\xe8nements, ignorez la m\xe9thode "),e.j41(252,"code"),e.EFF(253,"dispatchEvent()"),e.k0s(),e.EFF(254,"."),e.k0s(),e.j41(255,"p"),e.EFF(256,"Pour observer quand et comment ces m\xe9thodes sont ex\xe9cut\xe9es, ajoutons plusieurs appels \xe0 "),e.j41(257,"code"),e.EFF(258,"console.log"),e.k0s(),e.EFF(259,", comme suit :"),e.k0s(),e.j41(260,"app-copy-button")(261,"pre")(262,"code",15),e.EFF(263,"\nclass GoogleCloudPubSubClient extends ClientProxy {\n  async connect(): Promise<any> {\n    console.log('connect');\n  }\n\n  async close() {\n    console.log('close');\n  }\n\n  async dispatchEvent(packet: ReadPacket<any>): Promise<any> {\n    return console.log('event to dispatch: ', packet);\n  }\n\n  publish(\n    packet: ReadPacket<any>,\n    callback: (packet: WritePacket<any>) => void,\n  ): Function {\n    console.log('message:', packet);\n\n    // Dans une application r\xe9elle, la fonction \"callback\" doit \xeatre ex\xe9cut\xe9e\n    // avec la charge utile renvoy\xe9e par le r\xe9pondeur. Ici, nous allons simplement simuler (d\xe9lai de 5 secondes)\n    // que la r\xe9ponse arrive en transmettant les m\xeames \"donn\xe9es\" que celles que nous avons transmises \xe0 l'origine.\n    setTimeout(() => callback({ response: packet.data }), 5000);\n\n    return () => console.log('teardown');\n  }\n}\n"),e.k0s()()(),e.j41(264,"p"),e.EFF(265,"Avec ceci en place, cr\xe9ons une instance de la classe "),e.j41(266,"code"),e.EFF(267,"GoogleCloudPubSubClient"),e.k0s(),e.EFF(268," et lan\xe7ons la m\xe9thode "),e.j41(269,"code"),e.EFF(270,"send()"),e.k0s(),e.EFF(271," (que vous avez pu voir dans les chapitres pr\xe9c\xe9dents), en nous abonnant au flux observable retourn\xe9."),e.k0s(),e.j41(272,"app-copy-button")(273,"pre")(274,"code",15),e.EFF(275,"\nconst googlePubSubClient = new GoogleCloudPubSubClient();\ngooglePubSubClient\n  .send('pattern', 'Hello world!')\n  .subscribe((response) => console.log(response));\n"),e.k0s()()(),e.j41(276,"p"),e.EFF(277,"Vous devriez maintenant voir la sortie suivante dans votre terminal :"),e.k0s(),e.j41(278,"app-copy-button")(279,"pre")(280,"code",15),e.EFF(281,"\nconnect\nmessage: { pattern: 'pattern', data: 'Hello world!' }\nHello world! // <-- apr\xe8s 5 secondes\n"),e.k0s()()(),e.j41(282,"p"),e.EFF(283,'Pour tester si notre m\xe9thode "teardown" (que notre m\xe9thode '),e.j41(284,"code"),e.EFF(285,"publish()"),e.k0s(),e.EFF(286," retourne) est correctement ex\xe9cut\xe9e, appliquons un op\xe9rateur timeout \xe0 notre stream, en le fixant \xe0 2 secondes pour s'assurer qu'il se lance avant que notre "),e.j41(287,"code"),e.EFF(288,"setTimeout"),e.k0s(),e.EFF(289," n'appelle la fonction "),e.j41(290,"code"),e.EFF(291,"callback"),e.k0s(),e.EFF(292,"."),e.k0s(),e.j41(293,"app-copy-button")(294,"pre")(295,"code",15),e.EFF(296,"\nconst googlePubSubClient = new GoogleCloudPubSubClient();\ngooglePubSubClient\n  .send('pattern', 'Hello world!')\n  .pipe(timeout(2000))\n  .subscribe(\n    (response) => console.log(response),\n    (error) => console.error(error.message),\n  );\n"),e.k0s()()(),e.j41(297,"blockquote",9)(298,"strong"),e.EFF(299,"Astuce"),e.k0s(),e.EFF(300," L'op\xe9rateur "),e.j41(301,"code"),e.EFF(302,"timeout"),e.k0s(),e.EFF(303," est import\xe9 du paquet "),e.j41(304,"code"),e.EFF(305,"rxjs/operators"),e.k0s(),e.EFF(306,".\n"),e.k0s(),e.j41(307,"p"),e.EFF(308,"Avec l'op\xe9rateur "),e.j41(309,"code"),e.EFF(310,"timeout"),e.k0s(),e.EFF(311," appliqu\xe9, la sortie de votre terminal devrait ressembler \xe0 ce qui suit :"),e.k0s(),e.j41(312,"app-copy-button")(313,"pre")(314,"code",15),e.EFF(315,"\nconnect\nmessage: { pattern: 'pattern', data: 'Hello world!' }\nteardown // <-- teardown\nTimeout has occurred\n"),e.k0s()()(),e.j41(316,"p"),e.EFF(317,"Pour envoyer un \xe9v\xe9nement (au lieu d'envoyer un message), utilisez la m\xe9thode "),e.j41(318,"code"),e.EFF(319,"emit()"),e.k0s(),e.EFF(320," :"),e.k0s(),e.j41(321,"app-copy-button")(322,"pre")(323,"code",15),e.EFF(324,"\ngooglePubSubClient.emit('event', 'Hello world!');\n"),e.k0s()()(),e.j41(325,"p"),e.EFF(326,"C'est ce que vous devriez voir dans la console :"),e.k0s(),e.j41(327,"app-copy-button")(328,"pre")(329,"code",15),e.EFF(330,"\nconnect\nevent to dispatch:  { pattern: 'event', data: 'Hello world!' }\n"),e.k0s()()(),e.j41(331,"h4",21)(332,"span"),e.EFF(333,"S\xe9rialisation des messages"),e.k0s()(),e.j41(334,"p"),e.EFF(335,"Si vous avez besoin d'ajouter une logique personnalis\xe9e autour de la s\xe9rialisation des r\xe9ponses du c\xf4t\xe9 client, vous pouvez utiliser une classe personnalis\xe9e qui \xe9tend la classe "),e.j41(336,"code"),e.EFF(337,"ClientProxy"),e.k0s(),e.EFF(338," ou l'une de ses classes enfantines. Pour modifier les requ\xeates r\xe9ussies, vous pouvez surcharger la m\xe9thode "),e.j41(339,"code"),e.EFF(340,"serializeResponse"),e.k0s(),e.EFF(341,", et pour modifier toutes les erreurs qui passent par ce client, vous pouvez surcharger la m\xe9thode "),e.j41(342,"code"),e.EFF(343,"serializeError"),e.k0s(),e.EFF(344,". Pour utiliser cette classe personnalis\xe9e, vous pouvez passer la classe elle-m\xeame \xe0 la m\xe9thode "),e.j41(345,"code"),e.EFF(346,"ClientsModule.register()"),e.k0s(),e.EFF(347," en utilisant la propri\xe9t\xe9 "),e.j41(348,"code"),e.EFF(349,"customClass"),e.k0s(),e.EFF(350,". Voici un exemple de "),e.j41(351,"code"),e.EFF(352,"ClientProxy"),e.k0s(),e.EFF(353," personnalis\xe9 qui s\xe9rialise chaque erreur dans une "),e.j41(354,"code"),e.EFF(355,"RpcException"),e.k0s(),e.EFF(356,"."),e.k0s(),e.j41(357,"app-copy-button",22)(358,"span",23),e.EFF(359),e.nI1(360,"extension"),e.nrm(361,"app-tabs",null,1),e.k0s(),e.j41(363,"pre")(364,"code",15),e.EFF(365,"\nimport { ClientTcp, RpcException } from '@nestjs/microservices';\n\nclass ErrorHandlingProxy extends ClientTCP {\n  serializeError(err: Error) {\n    return new RpcException(err);\n  }\n}\n"),e.k0s()()(),e.j41(366,"p"),e.EFF(367,"et l'utiliser ensuite dans le module "),e.j41(368,"code"),e.EFF(369,"Clients"),e.k0s(),e.EFF(370," comme suit :"),e.k0s(),e.j41(371,"app-copy-button",22)(372,"span",23),e.EFF(373),e.nI1(374,"extension"),e.nrm(375,"app-tabs",null,2),e.k0s(),e.j41(377,"pre")(378,"code",15),e.EFF(379,"\n@Module({\n  imports: [\n    ClientsModule.register([{\n      name: 'CustomProxy',\n      customClass: ErrorHandlingProxy,\n    }]),\n  ]\n})\nexport class AppModule\n"),e.k0s()()(),e.j41(380,"blockquote",9)(381,"strong"),e.EFF(382,"Astuce"),e.k0s(),e.EFF(383," C'est la classe elle-m\xeame qui est pass\xe9e \xe0 "),e.j41(384,"code"),e.EFF(385,"customClass"),e.k0s(),e.EFF(386,", et non une instance de la classe. Nest cr\xe9era l'instance sous le capot pour vous, et passera toutes les options donn\xe9es dans la propri\xe9t\xe9 "),e.j41(387,"code"),e.EFF(388,"options"),e.k0s(),e.EFF(389," au nouveau "),e.j41(390,"code"),e.EFF(391,"ClientProxy"),e.k0s(),e.EFF(392,".\n"),e.k0s()()),2&t){const o=e.sdS(362),a=e.sdS(376);e.R7$(359),e.SpI(" ",e.i5U(360,2,"error-handling.proxy",o.isJsActive),"\n"),e.R7$(14),e.SpI(" ",e.i5U(374,5,"app.module",a.isJsActive),"\n")}},dependencies:[F.O,m.a,l.z,f.Wk,k.M],encapsulation:2,changeDetection:0})}return s})(),data:{title:"Transporteurs personnalis\xe9s - Microservices"}}];let M=(()=>{class s{static \u0275fac=function(t){return new(t||s)};static \u0275mod=e.$C({type:s});static \u0275inj=e.G2t({imports:[q.MD,y.G,f.iI.forChild(P)]})}return s})()}}]);